{"version":3,"sources":["components/Card/MainCard/index.tsx","components/Carousel/CarouselArrow.tsx","components/Loading/PageLoad.tsx","utils/storageUtils.tsx","api/axiosInstance.ts","assets/Icons/BulkEditIcon.svg","api/services/authAPI.ts","components/Button/index.tsx","assets/Login/Hashtag.svg","assets/Login/LoginBackground.webp","assets/logo.webp","components/Title/BoldTitle/index.tsx","assets/Login/emailSuccess.png","components/Modal/AuthModal/CheckEmailModal.tsx","components/Modal/AuthModal/ForgotPassModal.tsx","components/Modal/AuthModal/index.tsx","utils/dateUtils.tsx","pages/Login/Login.tsx","hooks/useRedux.tsx","components/BreadCrumb/breadCrumpList.ts","components/BreadCrumb/index.tsx","components/AvatarDropdown/avatarDropdownList.ts","assets/avatar.png","components/AvatarDropdown/index.tsx","components/NotificationDropdown/notificationDropdownList.tsx","components/NotificationDropdown/index.tsx","components/Layout/Header/index.tsx","state/siderSlice.ts","components/Layout/Sider/siderMenuList.ts","components/Layout/Sider/siderDefKeyList.ts","components/Layout/Sider/index.tsx","components/Layout/Footer/index.tsx","components/Layout/index.tsx","components/Card/ColorCard/index.tsx","components/Table/index.tsx","components/Statistics/index.tsx","components/Tag/index.tsx","components/Container/MainCardContainer/index.tsx","pages/Dashboard/toDoList.ts","pages/Dashboard/salesData.ts","pages/Dashboard/statisticsData.ts","pages/Dashboard/recentOrders.tsx","pages/Dashboard/topProducts.ts","pages/Dashboard/invAnalysis.ts","utils/arrayUtils.tsx","components/Popover/index.tsx","components/List/RankingList/index.tsx","components/Statistics/statisticsList.ts","utils/optionUtils.tsx","pages/Dashboard/Dashboard.tsx","components/Container/FilterInputCol.tsx","components/Input/InputNumberRange/index.tsx","components/Input/InputSelect/index.tsx","components/Input/SelectWithLabel/index.tsx","pages/Products/FilterInputs.tsx","utils/urlUtls.tsx","components/Table/InformativeTable/index.tsx","pages/Products/prodTabList.ts","utils/numUtils.tsx","components/Button/ActionButton/AcceptButton.tsx","components/Button/ActionButton/ActivateButton.tsx","components/Button/ActionButton/BulkEditButton.tsx","components/Button/ActionButton/DeleteButton.tsx","components/Button/ActionButton/EditButton.tsx","components/Button/ActionButton/HideButton.tsx","components/Button/ActionButton/PrintButton.tsx","components/Button/ActionButton/RejectButton.tsx","components/Button/ActionButton/SuspendButton.tsx","components/Tag/StatusTag/index.tsx","components/List/DescriptionList/index.tsx","components/Modal/ActionModal/Content.tsx","components/Modal/ActionModal/index.tsx","components/Modal/ActionModal/DeleteModal.tsx","components/Modal/ActionModal/HideModal.tsx","api/services/productAPI.ts","pages/Products/ProdMgmt.tsx","components/Input/InvStockInput/index.tsx","pages/Products/ProdInv.tsx","components/Upload/UploadPicWall/UploadPicWall.tsx","components/Affix/AffixAdd.tsx","components/Input/TextEditor/index.tsx","pages/Products/ProdAdd.tsx","components/Input/DateRangePickerWithLabel/index.tsx","pages/Packages/FilterInputs.tsx","pages/Packages/packageList.ts","assets/Product/PromoRayaQurban.png","pages/Packages/packTabList.ts","pages/Packages/PackMgmt.tsx","pages/Packages/PackInv.tsx","pages/Packages/PackAdd.tsx","pages/Orders/FilterInputs.tsx","pages/Orders/orderList.ts","pages/Orders/orderTabList.ts","components/Button/ActionButton/UpdButton.tsx","pages/Orders/OrderMgmt.tsx","components/Layout/ComingSoon/index.tsx","assets/ComingSoon/eCommerce.gif","pages/Orders/OrderAdd.tsx","assets/ComingSoon/Truck.gif","pages/Shipments/ShptMgmt.tsx","pages/Customers/FilterInputs.tsx","pages/Customers/custList.ts","pages/Customers/CustMgmt.tsx","pages/Customers/custRegList.ts","pages/Customers/CustReg.tsx","pages/Customers/CustAdd.tsx","components/Input/MenuDatePicker/index.tsx","components/Input/DropdownDate/index.tsx","pages/BusinessInsights/BusinessStatistics/statisticsData.ts","pages/BusinessInsights/BusinessStatistics/keyMetricsList.ts","pages/BusinessInsights/BusinessStatistics/topProducts.ts","pages/BusinessInsights/BusinessStatistics/index.tsx","components/Card/AnalysisCard/index.tsx","components/Card/CollapseCard/index.tsx","components/Input/DatePickerWithLabel/index.tsx","pages/BusinessInsights/InvAnalysis/FilterInputs.tsx","pages/BusinessInsights/InvAnalysis/Icons/DescIcon.tsx","pages/BusinessInsights/InvAnalysis/Icons/GradeIcon.tsx","assets/Product/NasiBukhari.png","pages/BusinessInsights/InvAnalysis/Analyses/abcAnalysis.tsx","pages/BusinessInsights/InvAnalysis/Analyses/hmlAnalysis.tsx","pages/BusinessInsights/InvAnalysis/Analyses/eoqAnalysis.tsx","pages/BusinessInsights/InvAnalysis/Analyses/ssAnalysis.tsx","pages/BusinessInsights/InvAnalysis/Analyses/index.tsx","pages/BusinessInsights/InvAnalysis/index.tsx","pages/Vouchers/FilterInputs.tsx","pages/Vouchers/voucherList.ts","components/Tooltip/index.tsx","pages/Vouchers/VoucherMgmt.tsx","pages/Vouchers/VoucherAdd.tsx","pages/MyAccount/ProfileMgmt.tsx","pages/MyAccount/AccSettings.tsx","assets/ComingSoon/Coding.gif","pages/Admins/AdminMgmt.tsx","pages/Admins/AdminAdd.tsx","pages/Help/Help.tsx","pages/Shipments/ShptFeeMgmt.tsx","assets/404.svg","pages/Not Found/NotFound.tsx","components/Modal/SuccessModal.tsx","routes/routeList.tsx","pages/Login/ResetPass.tsx","utils/strUtils.tsx","utils/routingUtils.tsx","components/Modal/AuthModal/SessionExtendModal.tsx","routes/AuthRoute.tsx","routes/routeRedirectList.ts","routes/AppRoutes.tsx","state/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MainCard","className","props","bordered","bodyStyle","padding","undefined","CarouselArrow","useState","carouselPrev","setCarouselPrev","carouselNext","setCarouselNext","dots","arrows","prevArrow","nextArrow","afterChange","current","React","Children","count","children","PageLoad","size","setExp","exp","window","localStorage","setItem","String","getSessionExp","parseInt","getItem","clearStorage","clear","axios","oriAxios","create","baseURL","timeout","headers","Authorization","Cookies","get","accept","withCredentials","defaults","common","refresh","interceptors","response","use","res","a","error","originalRequest","config","Promise","reject","status","url","remove","location","href","data","code","statusText","refreshTknAPI","then","catch","err","finally","_path","logoutAPI","post","resolve","Button","color","BoldTitle","style","Title","fontWeight","CheckEmailModal","memo","_ref","args","onOk","Text","onCancel","direction","align","textAlign","src","EmailSuccess","alt","width","level","email","htmlType","type","onClick","ForgotPassModal","useForm","forgotPass","loading","setLoading","errMsg","setErrMsg","name","form","layout","onFinish","values","AuthModal","show","Item","rules","required","message","help","split","map","msg","validateStatus","placeholder","AuthModalComponent","checkEmail","visible","setVisible","modalType","setModalType","setArgs","payloadRef","useRef","useEffect","payload","handleOk","method","handleCancel","footer","destroyOnClose","centered","ModalRender","renderModal","getDt","date","inputFormat","outputFormat","moment","format","getWeekDt","startOf","endOf","getDayOfWeek","getWeekOfYear","getMth","getMthDt","getYr","getYrDt","getPastDays","num","subtract","getNextDt","add","getMomentNextDt","getNextWeek","getThisWeekTilYtd","getNextMth","getThisMthTilYtd","getNextYr","getThisYrTilYtd","getPrevDt","getPrevWeek","getPrevMth","getPrevYr","validateDay","cat","func","newDt","isMoment","newLbl","newCat","disabledNext","isAfter","label","validateWeek","isSameOrAfter","isBetween","validateMonth","validateYear","validateDropdownDate","dateInfo","RegExp","test","numDays","substring","length","formatDt","startDt","endDt","getCurUnixTm","unix","Login","_props","loginErr","setLoginErr","handleLogin","loginDetails","username","password","e","getErrMsg","showIcon","Helmet","content","xs","span","order","sm","md","lg","xl","Hashtag","height","preview","draggable","pointerEvents","userSelect","whitespace","Password","block","marginTop","marginBottom","icon","position","left","justify","Logo","float","Inventory","useAppSelector","useSelector","breadcrumbNameMap","BreadCrumb","pathSnippets","useLocation","pathname","filter","i","extraBreadcrumbItems","_","index","slice","join","hasOwnProperty","to","breadcrumbItems","concat","separator","top","menuList","key","MdPersonOutline","MdOutlineSettings","MdLogout","AvatarDropdown","role","img","navigate","useNavigate","menuAvatarDropdown","defaultSelectedKeys","item","menu","overlay","arrow","placement","gutter","AvatarImg","title","description","timestamp","read","NotificationDropdown","markAllRead","setMarkAllRead","menuNotificationDropdown","disabled","cursor","strong","Divider","ItemGroup","word","Icon","findIcon","dot","offset","margin","charAt","toUpperCase","findRoutePath","Header","isSiderCollapsed","state","sider","collapsed","classNames","minWidth","siderSlice","createSlice","initialState","reducers","collapse","expand","actions","items","MdHome","MdShoppingBag","child","MdInventory","MdAssignment","MdLocalShipping","MdGroups","MdInsertChart","MdConfirmationNumber","MdAccountCircle","MdAssignmentInd","MdHelp","siderDefKeyList","path","Sider","SubMenu","collapsedSiderOpen","setCollapsedSiderOpen","dispatch","useDispatch","selectedKeys","find","defKey","search","findRouteLabel","openKeys","theme","breakpoint","onMouseLeave","onBreakpoint","mode","defaultOpenKeys","inlineIndent","onMouseOver","menuLevel","Footer","Layout","Content","hasSider","fallback","ColorCard","backgroundColor","hover","indicator","right","Table","Statistics","space","avatarSize","flex","fontSize","valueSize","prefix","value","toFixed","suffix","untilTm","Tag","maxWidth","border","borderRadius","MainCardContainer","toDoList","quantity","link","dataYear","year","Month","Sales","dataMonth","month","Day","dataWeek","frmDate","toDate","dataDay","Hour","statisticsData","sales","profit","visitors","newCust","newOrder","recentOrders","orderID","custName","custType","orderTime","amount","topProduct","invAnalysis","prodNm","stock","ABC","HML","reorderPt","optimalOrderQty","splitIntoChunks","arr","chunkSize","chunk","push","sortByOrder","obj","des","sorted","sort","b","localeCompare","reverse","Popover","overlayStyle","RankingList","dataSource","cardSelections","selectOptions","onCardSelect","onSelectChange","selectedCard","setSelectedCard","chunks","selection","desc","onChange","renderItem","active","Meta","statisticsList","MdOutlineTrendingUp","MdOutlineAttachMoney","MdOutlineVisibility","MdOutlineAssignment","ynOptions","dateRangeOptions","prodCat","prodStatList","packStatList","orderStatList","custStatList","voucherStatList","genderCat","maritalStatCat","custPositionCat","custStatusCat","custCat","invInputOptions","LineChart","lazy","Dashboard","Typography","salesDateRange","setSalesDateRange","getSalesData","getSalesDate","getChartTitle","includes","getChartTooltipTitlePrefix","getChartTooltipTitleSuffix","More","route","recentOrderColumns","dataIndex","render","id","parseFloat","OrderStatusTag","invAnalysisColumns","text","ToDoList","toDoItem","Group","buttonStyle","marginRight","target","options","optionType","paddingTop","spin","titleX","tooltipName","tooltipTitlePrefix","tooltipTitleSuffix","tooltipValPrefix","StatisticsDashboard","statistics","RecentOrder","columns","pagination","scroll","x","TopProducts","InvAnalysis","FilterInputCol","InputNumberRange","textSpan","prefixWidth","suffixWidth","formProps","inputNumWidth","start","setStart","end","setEnd","validateFailed","setValidateFailed","formPropsSpread","compact","noStyle","getValueProps","InputSelect","selectBefore","selectAfter","selectWidth","defaultVal","selectType","setSelectType","inputSelectBefore","defaultValue","onSelect","inputSelectAfter","addonBefore","addonAfter","SelectWithLabel","select","allowClear","onClear","selected","FilterInputs","prodFilter","useSearchParams","searchParams","setSearchParams","prodInputSelect","prodCatSelect","selectedInputSelect","setSelectedInputSelect","Object","keys","forEach","setFieldsValue","category","min","precision","price","resetFields","parseURL","fromEntries","addSearchParams","currParams","newParams","InformativeTable","defPg","buttons","rowSelectable","totalRecord","selectedRowKeys","setSelectedRowKeys","selectedRowCount","setSelectedRowCount","setPagination","btnShow","setBtnShow","removeKey","limit","pageSize","URLSearchParams","delete","rowSelection","selectedRows","buttonShow","btn","btnShowCondition","btnToShow","fltr","rel","fld","element","showTotal","total","showSizeChanger","showQuickJumper","defaultPageSize","pageSizeOptions","paginate","_filters","sorter","currSearchParams","prodTabList","tab","moneyFormatter","numOnly","percentFormatter","AcceptButton","ActivateButton","_extends","assign","arguments","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBulkEditIcon","svgRef","titleId","viewBox","fill","xmlns","ref","d","ForwardRef","BulkEditButton","DeleteButton","EditButton","HideButton","PrintButton","RejectButton","SuspendButton","StatusTag","statusList","dropdownStatus","onDropdownSelect","statusItem","matchedStatus","DescriptionList","onButtonClick","buttonProps","titleProps","descProps","avatar","okText","recordType","multi","ActionModalComponent","HiTrash","hide","HiEyeOff","ActionModal","multiItem","setMultiItem","loadParentFunc","afterClose","productPrevAPI","searchParam","console","log","ProdMgmt","useMessage","messageApi","contextHolder","list","setList","recordCount","setRecordCount","setSelected","tableLoading","setTableLoading","results","actionModalProps","showActionSuccessMsg","action","open","setTimeout","destroy","onSelectBtn","fetch","prodMgmtColumns","thumbnail","newAmt","selectedStatus","prod","pk","item_id","tabList","activeTabKey","onTabChange","rowKey","selectedProd","some","InvStockInput","input","onSave","operation","setOperation","setValue","ProdInv","prodInvColumns","UploadPicWall","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","originFileObj","lastIndexOf","uploadButton","listType","onPreview","multiple","fileList","AffixAdd","showCard","setShowCard","affixed","boxShadow","borderTopLeftRadius","borderTopRightRadius","background","BraftEditor","ColorPicker","clearButtonText","closeButtonText","columnResizable","TextEditor","language","excludeControls","ProdAdd","prodForm","Link","uid","setFileList","targetOffset","setTargetOffset","innerHeight","info","validator","isEmpty","tooltip","offsetBottom","offsetTop","anchor","DatePickerWithLabel","RangePicker","packageList","packNm","packProds","packSKU","packImg","packPrice","packStock","packStat","hashtag","packTabList","PackMgmt","packageListFltr","setPackageListFltr","pack","packMgmtColumns","products","product","PackInv","packInvColumns","PackAdd","Paragraph","hideEndTime","setHideEndTime","prodColumns","filterOption","notFoundContent","showTime","checked","hidden","custCatSelect","orderList","custNm","orderTm","orderAmt","orderStat","trackNum","orderTabList","UpdButton","OrderMgmt","orderListFltr","setOrderListFltr","orderMgmtColumns","fixed","ComingSoon","OrderAdd","ECommerce","ShptMgmt","Truck","custStatus","custList","custID","regDt","salesMth","lastOrderDt","CustMgmt","custListFltr","setCustListFltr","cust","custMgmtColumns","custRegList","regID","applicant","gender","contactNum","CustReg","custRegColumns","CustAdd","Option","TextArea","custForm","setState","city","setCity","courtFlag","setCourtFlag","criminalFlag","setCriminalFlag","relativeFlag","setRelativeFlag","profilePic","maxCount","mask","placeholderChar","getStates","getCities","getPostcodes","postcode","rows","showCount","maxLength","autoSize","minRows","maxRows","marginLeft","MenuDatePicker","inputReadOnly","DropdownDate","setDate","setLabel","dropdownOnBlur","setDropdownOnBlur","setCat","itemHovered","setItemHovered","dropdownVisible","setDropdownVisible","todayPopover","setTodayPopover","ytdPopover","setYtdPopover","past7dPopover","setpast7dPopover","past30dPopover","setpast30dPopover","ind","defVal","dayPicker","setDayPicker","weekPicker","setWeekPicker","mthPicker","setMthPicker","yrPicker","setYrPicker","disableNext","setDisableNext","pickerKeys","getKey","validateDefOpen","setNewDt","hideAllPickers","handlePickerChange","picker","setPicker","handleDateFunc","hideNxtPrevBtn","dateLabelMapper","DateMenu","newDtCat","points","mapper","showToday","disabledDate","dropdownAlign","getMomentPrevDt","onBlur","keyMetricsList","BusinessStatistics","duration","DashboardContainer","statisticsDtInfo","setStatisticsDtInfo","statisticsTdy","setStatisticsTdy","updateStatistics","setInterval","clearInterval","KeyMetricsDashboard","keyMetricsDtInfo","setKeyMetricsDtInfo","selectedKeyMetrics","setSelectedKeyMetrics","maxSelectedMetrics","setMaxSelectedMetrics","keyMetricsValList","getKeyMetricsVal","keyMetrics","metrics","handleKeyMetricsClick","defaultChecked","seriesField","yAxis","RankingDashboard","rankingDtInfo","setRankingDtInfo","AnalysisCard","component","prodList","CollapseCard","prefixIcon","suffixIcon","Panel","expandIconPosition","header","DateRangePickerWithLabel","defaultPickerValue","DescIcon","GradeIcon","grade","GradeA","GradeB","GradeC","abcAnalysis","tableGradeProps","tableScroll","prodSKU","prodImg","NasiBriyaniBukhari","costPerUnit","demand","demandPct","consumpVal","consumpValPct","GradeH","GradeM","GradeL","hmlAnalysis","prodStock","costPerUnitPct","eoqAnalysis","orderCost","carryCost","ooq","ssAnalysis","day","maxDemand","avgDemand","maxLeadTm","avgLeadTm","safetyStock","restockPt","invAnalysisTab","analysis","getAnalysis","grid","column","borderTop","voucherList","voucherCde","discType","discAmt","minSpend","availability","autoApply","startTm","maxDisc","endTm","usageLimit","Tooltip","VoucherMgmt","voucherListFltr","setVoucherListFltr","voucher","voucherMgmtColumns","types","VoucherAdd","voucherForm","setDiscType","usageLimitUltd","setUsageLimitUltd","availabilityUltd","setAvailabilityUltd","initialValue","paddingLeft","max","ProfileMgmt","ChangeBtn","underline","InputText","pull","labelCol","wrapperCol","AccSettings","screens","useBreakpoint","phoneNum","xxl","AdminMgmt","Coding","AdminAdd","Help","ShptFeeMgmt","NotFound","Img404","SuccessModal","subTitle","extra","showModal","setShowModal","handleClose","closable","maskClosable","routeList","protected","ShpFeeMgmt","resetPassForm","hasNumberic","setHasNumeric","hasLowerCase","setHasLowerCase","hasUpperCase","setHasUpperCase","hasSymbol","setHasSymbol","passInRange","setPassInRange","pageLoading","setPageLoading","submitLoading","setSubmitLoading","successModal","setSuccessModal","resetErrMsg","setResetErrMsg","token","has","passValidation","validation","match","PassCriteriaList","resetPassDetails","minHeight","trim","Error","pass","str","hasUpperCaseLetter","hasLowerCaseLetter","hasSymbolLetter","minRange","maxRange","checkLength","getFieldValue","siderMenuList","siderMenuLevel","selectedItem","SessionExtendModal","spinLoading","setSpinLoading","idleTimer","useIdleTimer","timer","useTimer","expiryTimestamp","onExpire","isIdle","restart","days","hours","minutes","extendPageSession","spinning","seconds","AuthRoute","notProtectedRoute","filteredRoute","access","replace","from","routeRedirectList","redirect","AppRoute","sessionExp","setSessionExp","store","configureStore","reducer","siderReducer","App","prefixCls","Provider","verticalAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,IAAKH,MAAO,IAAKhN,IAAK,KAC7B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,GAAIhN,IAAK,KAC7B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,GAAIhN,IAAK,KAC7B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,IAAK,KAAMH,MAAO,IAAKhN,IAAK,KAC9B,CAAEmN,I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","file":"static/js/main.9f73cbe7.chunk.js","sourcesContent":["import { Card, CardProps } from 'antd';\r\nimport './MainCard.less';\r\n\r\nconst MainCard = ({ className, ...props }: CardProps) => {\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 35 }}\r\n      className={`main-card full-width full-height${\r\n        className !== undefined ? ` ${className}` : ''\r\n      }`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainCard;\r\n","import { Carousel, CarouselProps } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport './CarouselArrow.less';\r\n\r\nexport interface CarouselArrowProps extends CarouselProps {}\r\n\r\nconst CarouselArrow = (props: CarouselArrowProps) => {\r\n  const [carouselPrev, setCarouselPrev] = useState(false);\r\n  const [carouselNext, setCarouselNext] = useState(true);\r\n  return (\r\n    <span className='carousel-arrow'>\r\n      <Carousel\r\n        dots={false}\r\n        arrows\r\n        prevArrow={carouselPrev ? <MdChevronLeft /> : <></>}\r\n        nextArrow={carouselNext ? <MdChevronRight /> : <></>}\r\n        afterChange={(current) => {\r\n          if (current > 0) setCarouselPrev(true);\r\n          else setCarouselPrev(false);\r\n\r\n          if (\r\n            current !== React.Children.count(props.children) - 1 ||\r\n            current === 0\r\n          )\r\n            setCarouselNext(true);\r\n          else setCarouselNext(false);\r\n        }}\r\n        {...props}\r\n      >\r\n        {props.children}\r\n      </Carousel>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default CarouselArrow;\r\n","import { Spin } from 'antd';\r\n\r\nconst PageLoad = () => (\r\n  <div className='center-flex height-fill-vp'>\r\n    <Spin size='large' />\r\n  </div>\r\n);\r\n\r\nexport default PageLoad;\r\n","import Cookies from 'js-cookie';\r\nimport jwt_decode, { JwtPayload } from 'jwt-decode';\r\n\r\ninterface AdminType {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\nexport const decodedJWT = () =>\r\n  Cookies.get('access_token') !== undefined\r\n    ? jwt_decode<JwtPayload & AdminType>(Cookies.get('access_token'))\r\n    : null;\r\n\r\nexport const getAdminInfo = (): AdminType => {\r\n  const jwt = decodedJWT();\r\n  return {\r\n    id: jwt.id,\r\n    name: jwt.name,\r\n    role: jwt.role,\r\n  };\r\n};\r\n\r\nexport const setExp = (exp: number) => {\r\n  window.localStorage.setItem('exp', String(exp));\r\n};\r\n\r\nexport const getSessionExp = (): number =>\r\n  parseInt(window.localStorage.getItem('exp'));\r\n\r\nexport const clearStorage = () => {\r\n  window.localStorage.clear();\r\n};\r\n\r\nexport const addStorageItem = (key: string, value: string) => {\r\n  window.localStorage.setItem(key, value);\r\n};\r\n\r\nexport const removeStorageItem = (key: string) => {\r\n  window.localStorage.removeItem(key);\r\n};\r\n","import { clearStorage } from '@utils/storageUtils';\r\nimport oriAxios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { refreshTknAPI } from './services/authAPI';\r\n\r\nconst localBaseURL = 'http://127.0.0.1:8000/api/';\r\nconst serverBaseURL = 'https://fyp-shrf.herokuapp.com/api/';\r\n\r\nconst axios = oriAxios.create({\r\n  baseURL: process.env.NODE_ENV === 'production' ? serverBaseURL : localBaseURL,\r\n  timeout: 10000,\r\n  headers: {\r\n    Authorization: Cookies.get('access_token')\r\n      ? `JWT ${Cookies.get('access_token')}`\r\n      : null,\r\n    'Content-Type': 'application/json',\r\n    accept: 'application/json',\r\n  },\r\n  withCredentials: true,\r\n});\r\n\r\naxios.defaults.headers.common['X-CSRFToken'] = Cookies.get('csrftoken');\r\n\r\nlet refresh = false;\r\naxios.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (typeof error.response === 'undefined') {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === 'token/refresh/'\r\n    ) {\r\n      delete axios.defaults.headers['Authorization'];\r\n      Cookies.remove('access_token');\r\n      clearStorage();\r\n\r\n      window.location.href = '';\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === 'token_not_valid' &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === 'Unauthorized' &&\r\n      originalRequest.url !== 'token/verify/' &&\r\n      !refresh\r\n    ) {\r\n      refresh = true;\r\n      return await refreshTknAPI()\r\n        .then(async (res) => {\r\n          originalRequest.headers['Authorization'] = `JWT ${Cookies.get(\r\n            'access_token'\r\n          )}`;\r\n          return await axios(originalRequest);\r\n        })\r\n        .catch((err) => Promise.reject(err))\r\n        .finally(() => {\r\n          refresh = false;\r\n        });\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axios;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBulkEditIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.536 5.64148C15.4625 5.72883 15.3957 5.80891 15.3356 5.87442L15.1753 6.04912C15.1218 6.10736 15.0751 6.15831 15.0283 6.19471L13.2249 4.21473C13.2984 4.13466 13.3852 4.0473 13.4921 3.93811C13.599 3.82892 13.6858 3.74885 13.7593 3.69062C13.9396 3.53775 14.1266 3.46496 14.3337 3.48679C14.5407 3.50863 14.701 3.55231 14.828 3.61782C14.9615 3.6979 15.1085 3.82892 15.2755 4.02547C15.4424 4.22201 15.5694 4.42583 15.6562 4.63693C15.7029 4.77524 15.7297 4.93538 15.743 5.11737C15.7564 5.29935 15.6896 5.47406 15.536 5.64148ZM10.433 7.2575L12.5036 5.0009L14.307 6.96632C13.5522 7.78889 12.8576 8.53866 12.2364 9.20836C11.9692 9.49225 11.7087 9.76887 11.4549 10.0455C11.2011 10.3221 10.9673 10.5696 10.7603 10.788C10.5532 11.0064 10.3796 11.1883 10.246 11.3339L10.0055 11.596C9.94542 11.6615 9.87195 11.7343 9.7918 11.7998C9.71164 11.8653 9.62481 11.9236 9.52462 11.9745C9.42444 12.0255 9.29085 12.0837 9.11719 12.1492C8.94353 12.2147 8.76319 12.2802 8.57617 12.3458C8.38915 12.4113 8.20881 12.4695 8.04183 12.5205C7.87485 12.5714 7.74126 12.6078 7.65443 12.6151C7.48745 12.6369 7.39394 12.6151 7.38058 12.5641C7.36723 12.5132 7.37391 12.3894 7.40062 12.2074C7.4073 12.1128 7.43402 11.9672 7.46741 11.778C7.50081 11.5887 7.54089 11.3994 7.57428 11.2029C7.60768 11.0064 7.64775 10.8244 7.68783 10.6569C7.72791 10.4895 7.7613 10.3658 7.78802 10.3003C7.83477 10.1911 7.88153 10.1037 7.92828 10.0236C7.97504 9.94357 8.04851 9.85622 8.13534 9.76159L10.433 7.2575ZM14.9615 9.36851C15.1486 9.36851 15.3289 9.41946 15.4959 9.51409C15.6629 9.60872 15.7497 9.81254 15.7497 10.111V13.4158C15.7497 13.6852 15.7029 13.9399 15.6094 14.1656C15.5159 14.3913 15.389 14.5951 15.2287 14.7625C15.0684 14.9299 14.8881 15.061 14.681 15.1556C14.474 15.2502 14.2669 15.2939 14.0532 15.2939H6.59911C6.38538 15.2939 6.17832 15.2429 5.97126 15.141C5.7642 15.0391 5.58386 14.9008 5.43024 14.7261C5.27662 14.5514 5.14971 14.3476 5.04952 14.1074C4.94934 13.8671 4.90258 13.6124 4.90258 13.343V5.23384C4.90258 5.0373 4.94934 4.84075 5.04952 4.62965C5.14971 4.41855 5.27662 4.22929 5.43024 4.06186C5.58386 3.89444 5.7642 3.74885 5.9579 3.63966C6.1516 3.53047 6.35198 3.47224 6.54568 3.47224H10.9941C11.2412 3.47224 11.4215 3.57415 11.5217 3.77069C11.6219 3.96723 11.6753 4.17105 11.6753 4.37487C11.6753 4.5787 11.6219 4.77524 11.5217 4.9645C11.4215 5.15376 11.2412 5.2484 10.9941 5.2484H7.2136C7.02658 5.2484 6.87296 5.32119 6.75941 5.4595C6.64587 5.5978 6.58575 5.77251 6.58575 5.97633V12.8189C6.58575 13.0155 6.64587 13.1756 6.75941 13.3066C6.87296 13.4377 7.02658 13.5032 7.2136 13.5032H13.3986C13.5856 13.5032 13.7459 13.4377 13.8795 13.3066C14.0131 13.1756 14.0799 13.0155 14.0799 12.8189V10.111C14.0799 9.97269 14.1066 9.85622 14.1667 9.76159C14.2268 9.66696 14.2936 9.58689 14.3804 9.52865C14.4673 9.47042 14.5608 9.42674 14.661 9.4049C14.7678 9.38306 14.868 9.36851 14.9615 9.36851ZM10.3195 5.1756C10.2193 5.1756 10.1191 5.16104 10.0189 5.13921C9.9187 5.11737 9.82519 5.07369 9.73836 5.01546C9.65153 4.95722 9.58474 4.87715 9.52462 4.78252C9.46451 4.68789 9.43779 4.57142 9.43779 4.43311V3.18106C9.43779 2.98452 9.371 2.82437 9.23742 2.69335C9.10383 2.56232 8.94353 2.4968 8.75651 2.4968H2.57152C2.3845 2.4968 2.23088 2.56232 2.11733 2.69335C2.00378 2.82437 1.94367 2.98452 1.94367 3.18106V10.0236C1.94367 10.2275 2.00378 10.4022 2.11733 10.5405C2.23088 10.6788 2.3845 10.7516 2.57152 10.7516H5.01613C5.26326 10.7516 5.4436 10.8462 5.54379 11.0355C5.64398 11.2247 5.69741 11.4213 5.69741 11.6251C5.69741 11.8289 5.64398 12.0327 5.54379 12.2293C5.4436 12.4258 5.26326 12.5277 5.01613 12.5277H1.90359C1.7099 12.5277 1.50952 12.4695 1.31582 12.3603C1.12212 12.2511 0.941782 12.1055 0.788159 11.9381C0.634536 11.7707 0.50763 11.5814 0.407442 11.3703C0.307253 11.1592 0.260498 10.9627 0.260498 10.7661V2.65695C0.260498 2.38761 0.307253 2.13284 0.407442 1.89262C0.50763 1.6524 0.634536 1.44858 0.788159 1.27387C0.941782 1.09917 1.12212 0.960862 1.32918 0.858951C1.53624 0.757041 1.74329 0.706085 1.95703 0.706085H9.41108C9.62481 0.706085 9.83187 0.749761 10.0389 0.844393C10.246 0.939024 10.4263 1.07005 10.5866 1.23748C10.7469 1.4049 10.8738 1.60872 10.9673 1.83438C11.0609 2.06004 11.1076 2.31482 11.1076 2.58416V4.43311C11.1076 4.73156 11.0208 4.93538 10.8538 5.03002C10.6868 5.12465 10.5065 5.1756 10.3195 5.1756Z\",\n    fill: \"current\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBulkEditIcon);\nexport default __webpack_public_path__ + \"static/media/BulkEditIcon.af597cc0.svg\";\nexport { ForwardRef as ReactComponent };","import { clearStorage, setExp } from '@utils/storageUtils';\r\nimport Cookies from 'js-cookie';\r\nimport axios from '../axiosInstance';\r\n\r\ninterface LoginDetailsProps {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const loginAPI = (loginDetails: LoginDetailsProps) => {\r\n  return axios\r\n    .post(`login/`, loginDetails)\r\n    .then((res) => {\r\n      axios.defaults.headers['Authorization'] = `JWT ${Cookies.get(\r\n        'access_token'\r\n      )}`;\r\n      setExp(res.data.exp);\r\n      window.location.href = '';\r\n      return Promise.resolve(res);\r\n    })\r\n    .catch((error) => Promise.reject(error));\r\n};\r\n\r\nexport const logoutAPI = () => {\r\n  delete axios.defaults.headers['Authorization'];\r\n  Cookies.remove('access_token');\r\n  clearStorage();\r\n  return axios.post('logout/');\r\n};\r\n\r\nexport const verifyTknAPI = () => axios.post('token/verify/');\r\n\r\nexport const refreshTknAPI = () =>\r\n  axios\r\n    .post('token/refresh/')\r\n    .then((res) => {\r\n      setExp(res.data.exp);\r\n      axios.defaults.headers['Authorization'] = `JWT ${Cookies.get(\r\n        'access_token'\r\n      )}`;\r\n      return Promise.resolve(res);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n\r\nexport const forgotPassAPI = (email: string) =>\r\n  axios.post('password_reset/', {\r\n    email: email,\r\n  });\r\n\r\nexport const validateForgotPassTknAPI = (token: string) =>\r\n  axios.post('password_reset/validate_token/', {\r\n    token: token,\r\n  });\r\n\r\ninterface ResetPassProps {\r\n  token: string;\r\n  password: string;\r\n}\r\n\r\nexport const resetPassAPI = (resetPassDetails: ResetPassProps) =>\r\n  axios.post('password_reset/confirm/', resetPassDetails);\r\n","import './Button.less';\r\nimport { Button as AntdButton, ButtonProps as AntdButtonProps } from 'antd';\r\n\r\nexport interface ButtonProps extends AntdButtonProps {\r\n  color?: 'success' | 'warning' | 'error' | 'info' | 'grey';\r\n}\r\n\r\nconst Button = ({ color, className, ...props }: ButtonProps) => {\r\n  return (\r\n    <AntdButton\r\n      className={`${className !== undefined ? className : ''}${\r\n        color !== undefined ? ` btn-${color}` : ''\r\n      }`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Button;\r\nexport declare type ButtonType = (props: ButtonProps) => JSX.Element;\r\n","export default __webpack_public_path__ + \"static/media/Hashtag.50d6b2b6.svg\";","export default __webpack_public_path__ + \"static/media/LoginBackground.8c86c99d.webp\";","export default __webpack_public_path__ + \"static/media/logo.de2890c3.webp\";","import { Typography } from 'antd';\r\nimport { TitleProps } from 'antd/es/typography/Title';\r\n\r\nconst BoldTitle = ({ style, ...props }: TitleProps) => {\r\n  const { Title } = Typography;\r\n  return <Title style={{ fontWeight: 700, ...style }} {...props} />;\r\n};\r\n\r\nexport default BoldTitle;\r\n","export default __webpack_public_path__ + \"static/media/emailSuccess.c3d975be.png\";","import React, { memo } from 'react';\r\nimport { Space, Typography } from 'antd';\r\nimport Button from '@components/Button';\r\nimport { AuthModalContentProps } from '.';\r\nimport EmailSuccess from '@assets/Login/emailSuccess.png';\r\n\r\nconst CheckEmailModal = memo(\r\n  ({ args, onOk, onCancel, ...props }: AuthModalContentProps, _ref) => {\r\n    const { Text, Title } = Typography;\r\n\r\n    return (\r\n      <Space\r\n        direction='vertical'\r\n        size={20}\r\n        align='center'\r\n        style={{ textAlign: 'center' }}\r\n        className='full-width'\r\n      >\r\n        <img src={EmailSuccess} alt='emailSuccess' width={120} />\r\n        <Title level={5}>Check Your Email</Title>\r\n        <Text>\r\n          An email has been sent to the email address\r\n          {args?.email && (\r\n            <>\r\n              , <Text className='color-primary'>{args?.email}</Text>\r\n            </>\r\n          )}\r\n          .\r\n          <br />\r\n          Please check and verify it.\r\n        </Text>\r\n        <Button htmlType='submit' type='primary' onClick={onOk}>\r\n          Got it\r\n        </Button>\r\n      </Space>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CheckEmailModal;\r\n","import React, { memo, useState } from 'react';\r\nimport { Form, Input, Space, Typography } from 'antd';\r\nimport Button from '@components/Button';\r\nimport AuthModal, { AuthModalContentProps } from '.';\r\nimport { forgotPassAPI } from '@api/services/authAPI';\r\nimport { useForm } from 'antd/lib/form/Form';\r\n\r\nconst ForgotPassModal = memo(\r\n  ({ onOk, onCancel, ...props }: AuthModalContentProps, _ref) => {\r\n    const { Text, Title } = Typography;\r\n    const [forgotPass] = useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const handleSubmit = (values) => {\r\n      setLoading(true);\r\n      forgotPassAPI(values.email)\r\n        .then(() => {\r\n          AuthModal.show('checkEmail', { args: { email: values.email } });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status === 400)\r\n            setErrMsg(err.response.data.email[0]);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n      <Form\r\n        name='forgotPass'\r\n        form={forgotPass}\r\n        layout='vertical'\r\n        onFinish={handleSubmit}\r\n      >\r\n        <Space direction='vertical' size={20} style={{ textAlign: 'center' }}>\r\n          <Title level={4} className='color-primary'>\r\n            Forgot Password\r\n          </Title>\r\n          <Text>\r\n            Please enter your email address below and we will send you further\r\n            insturctions on how to reset your password.\r\n          </Text>\r\n          <div>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter valid email address.',\r\n                  type: 'email',\r\n                },\r\n              ]}\r\n              help={errMsg\r\n                .split('.')\r\n                .map((msg) => msg !== '' && <p>{`${msg}.`}</p>)}\r\n              validateStatus={errMsg && 'error'}\r\n            >\r\n              <Input placeholder='Email address' style={{ width: '90%' }} />\r\n            </Form.Item>\r\n          </div>\r\n          <Button htmlType='submit' type='primary' loading={loading}>\r\n            Reset Password\r\n          </Button>\r\n        </Space>\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ForgotPassModal;\r\n","import { Modal as AntdModal, ModalProps } from 'antd';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport CheckEmailModal from './CheckEmailModal';\r\nimport ForgotPassModal from './ForgotPassModal';\r\n\r\nexport type AuthModalPayload = {\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n  args?: any;\r\n};\r\n\r\nexport const AuthModalComponent = {\r\n  forgotPass: ForgotPassModal,\r\n  checkEmail: CheckEmailModal,\r\n};\r\n\r\nexport type AuthModalType = 'forgotPass' | 'checkEmail';\r\n\r\nexport interface AuthModalContentProps extends ModalProps {\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n  args?: any;\r\n}\r\n\r\nexport type AuthModalProps = Omit<ModalProps, 'onOk' | 'onCancel'> &\r\n  AuthModalContentProps;\r\n\r\ntype AuthModalReturnProps = React.FC<Partial<AuthModalProps>> & {\r\n  show?: (type: AuthModalType, AuthModalPayload?: AuthModalPayload) => void;\r\n};\r\n\r\nconst AuthModal: AuthModalReturnProps = memo((props: AuthModalProps, _ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [modalType, setModalType] = useState<AuthModalType>(null);\r\n  const [args, setArgs] = useState({});\r\n  const payloadRef = useRef<AuthModalPayload>({});\r\n\r\n  useEffect(() => {\r\n    AuthModal.show = (type: AuthModalType, payload: AuthModalPayload) => {\r\n      setVisible(true);\r\n      setModalType(type);\r\n      payloadRef.current = payload;\r\n      setArgs(payload?.args);\r\n    };\r\n  }, []);\r\n\r\n  const handleOk = (method?: () => void) => () => {\r\n    method && method();\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (method?: () => void) => () => {\r\n    method && method();\r\n    setVisible(false);\r\n  };\r\n\r\n  const renderModal = () => {\r\n    const ModalRender = AuthModalComponent[modalType]\r\n      ? AuthModalComponent[modalType]\r\n      : null;\r\n    return (\r\n      <ModalRender\r\n        onOk={handleOk(payloadRef.current?.onOk)}\r\n        onCancel={handleCancel(payloadRef.current?.onCancel)}\r\n        args={args}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AntdModal\r\n      visible={visible}\r\n      onOk={handleOk(payloadRef.current?.onOk)}\r\n      onCancel={handleCancel(payloadRef.current?.onCancel)}\r\n      footer={null}\r\n      bodyStyle={{ padding: 30 }}\r\n      destroyOnClose\r\n      centered\r\n      {...props}\r\n    >\r\n      {renderModal()}\r\n    </AntdModal>\r\n  );\r\n});\r\n\r\nexport default AuthModal;\r\n","import moment from 'moment';\r\n\r\nexport const getDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).format(outputFormat);\r\n\r\nexport const getWeekDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat).startOf('week').format(outputFormat)} ~ ${moment(\r\n    date,\r\n    inputFormat\r\n  )\r\n    .endOf('week')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getDayOfWeek = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string\r\n) => moment(date, inputFormat).format('dddd');\r\n\r\nexport const getWeekOfYear = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string\r\n) =>\r\n  `Week ${moment(date, inputFormat).format('w')} of ${moment(date, inputFormat)\r\n    .endOf('week')\r\n    .format('YYYY')}`;\r\n\r\nexport const getMth = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'MMMM'\r\n) => moment(date, inputFormat).format(outputFormat);\r\n\r\nexport const getMthDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .startOf('month')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .endOf('month')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getYr = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'YYYY'\r\n) => moment(date, inputFormat).format(outputFormat);\r\n\r\nexport const getYrDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat).startOf('year').format(outputFormat)} ~ ${moment(\r\n    date,\r\n    inputFormat\r\n  )\r\n    .endOf('year')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getPastDays = (num: number, outputFormat: string = 'DD-MM-YYYY') =>\r\n  `${moment().subtract(num, 'd').format(outputFormat)} ~ ${moment().format(\r\n    outputFormat\r\n  )}`;\r\n\r\nexport const getNextDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).add(1, 'day').format(outputFormat);\r\n\r\nexport const getMomentNextDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).add(1, 'day');\r\n\r\nexport const getNextWeek = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .add(1, 'week')\r\n    .startOf('week')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .add(1, 'week')\r\n    .endOf('week')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getThisWeekTilYtd = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .startOf('week')\r\n    .format(outputFormat)} ~ ${moment()\r\n    .subtract(1, 'day')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getNextMth = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .add(1, 'month')\r\n    .startOf('month')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .add(1, 'month')\r\n    .endOf('month')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getThisMthTilYtd = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .startOf('month')\r\n    .format(outputFormat)} ~ ${moment()\r\n    .subtract(1, 'day')\r\n    .format('DD-MM-YYYY')}`;\r\n\r\nexport const getNextYr = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .add(1, 'year')\r\n    .startOf('year')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .add(1, 'year')\r\n    .endOf('year')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getThisYrTilYtd = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .startOf('year')\r\n    .format(outputFormat)} ~ ${moment()\r\n    .subtract(1, 'day')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getPrevDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).subtract(1, 'day').format(outputFormat);\r\n\r\nexport const getMomentPrevDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).subtract(1, 'day');\r\n\r\nexport const getPrevWeek = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .subtract(1, 'week')\r\n    .startOf('week')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .subtract(1, 'week')\r\n    .endOf('week')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getPrevMth = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .subtract(1, 'month')\r\n    .startOf('month')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .subtract(1, 'month')\r\n    .endOf('month')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getPrevYr = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .subtract(1, 'year')\r\n    .startOf('year')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .subtract(1, 'year')\r\n    .endOf('year')\r\n    .format(outputFormat)}`;\r\n\r\nexport const validateDay = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext: boolean;\r\n} => {\r\n  let newDt = moment.isMoment(date)\r\n    ? date.format(outputFormat)\r\n    : func === 'next'\r\n    ? getNextDt(date, inputFormat, outputFormat)\r\n    : func === 'previous'\r\n    ? getPrevDt(date, inputFormat, outputFormat)\r\n    : date;\r\n  let newLbl = '';\r\n  let newCat = cat;\r\n  let disabledNext = getMomentNextDt(newDt, outputFormat).isAfter(moment());\r\n\r\n  if (newDt === getDt()) {\r\n    newLbl = 'Today';\r\n    newCat = 'tdy';\r\n  } else if (newDt === getPrevDt()) {\r\n    newLbl = 'Yesterday';\r\n    newCat = 'ytd';\r\n  } else {\r\n    newLbl = getDayOfWeek(moment(newDt, outputFormat));\r\n    newCat = 'byDay';\r\n  }\r\n\r\n  return {\r\n    date: newDt,\r\n    label: newLbl,\r\n    cat: newCat,\r\n    disabledNext: disabledNext,\r\n  };\r\n};\r\n\r\nexport const validateWeek = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext: boolean;\r\n} => {\r\n  let newDt: moment.Moment | string =\r\n    func === 'next'\r\n      ? (date = moment(\r\n          getNextWeek(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : func === 'previous'\r\n      ? (date = moment(\r\n          getPrevWeek(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : moment(date, inputFormat);\r\n  let newLbl = '';\r\n  let disabledNext = moment(getNextWeek(newDt), 'DD-MM-YYYY').isSameOrAfter(\r\n    moment(),\r\n    'week'\r\n  );\r\n  if (\r\n    moment(newDt).isBetween(moment().startOf('week'), moment().endOf('week'))\r\n  ) {\r\n    newDt = getThisWeekTilYtd(newDt, undefined, outputFormat);\r\n    newLbl = getWeekOfYear(getThisWeekTilYtd(newDt), outputFormat);\r\n  } else {\r\n    newDt = getWeekDt(newDt, undefined, outputFormat);\r\n    newLbl = getWeekOfYear(newDt, outputFormat);\r\n  }\r\n\r\n  return { date: newDt, label: newLbl, cat: cat, disabledNext: disabledNext };\r\n};\r\n\r\nexport const validateMonth = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext: boolean;\r\n} => {\r\n  let newDt: moment.Moment | string =\r\n    func === 'next'\r\n      ? (date = moment(\r\n          getNextMth(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : func === 'previous'\r\n      ? (date = moment(\r\n          getPrevMth(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : moment(date, inputFormat);\r\n  let newLbl = '';\r\n  let disabledNext = moment(getNextMth(newDt), 'DD-MM-YYYY').isAfter(\r\n    moment(),\r\n    'month'\r\n  );\r\n\r\n  if (getMth(newDt) === getMth()) {\r\n    newDt = getThisMthTilYtd(newDt, undefined, outputFormat);\r\n    newLbl = getMth(getThisWeekTilYtd(newDt), outputFormat);\r\n  } else {\r\n    newDt = getMthDt(newDt, undefined, outputFormat);\r\n    newLbl = getMth(newDt, outputFormat);\r\n  }\r\n\r\n  return { date: newDt, label: newLbl, cat: cat, disabledNext: disabledNext };\r\n};\r\n\r\nexport const validateYear = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext: boolean;\r\n} => {\r\n  let newDt: moment.Moment | string =\r\n    func === 'next'\r\n      ? (date = moment(\r\n          getNextYr(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : func === 'previous'\r\n      ? (date = moment(\r\n          getPrevYr(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : moment(date, inputFormat);\r\n  let newLbl = '';\r\n  let disabledNext = moment(getNextYr(newDt), 'DD-MM-YYYY').isAfter(\r\n    moment(),\r\n    'year'\r\n  );\r\n\r\n  if (getYr(newDt) === getYr()) {\r\n    newDt = getThisYrTilYtd(newDt, undefined, outputFormat);\r\n    newLbl = getYr(getThisWeekTilYtd(newDt), outputFormat);\r\n  } else {\r\n    newDt = getYrDt(newDt, undefined, outputFormat);\r\n    newLbl = getYr(newDt, outputFormat);\r\n  }\r\n\r\n  return { date: newDt, label: newLbl, cat: cat, disabledNext: disabledNext };\r\n};\r\n\r\nexport const validateDropdownDate = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext?: boolean;\r\n} => {\r\n  let dateInfo = {\r\n    date: moment.isMoment(date) ? date.format(outputFormat) : date,\r\n    cat: cat,\r\n    label: '',\r\n  };\r\n  if (cat === 'tdy' || cat === 'ytd' || cat === 'byDay')\r\n    dateInfo = validateDay(date, cat, inputFormat, outputFormat, func);\r\n  else if (cat === 'byWeek')\r\n    dateInfo = validateWeek(date, cat, inputFormat, outputFormat, func);\r\n  else if (cat === 'byMonth')\r\n    dateInfo = validateMonth(date, cat, inputFormat, outputFormat, func);\r\n  else if (cat === 'byYear')\r\n    dateInfo = validateYear(date, cat, inputFormat, outputFormat, func);\r\n  else if (new RegExp(/^past\\d*d$/).test(cat)) {\r\n    let numDays = cat.substring(4, cat.length - 1);\r\n    dateInfo = {\r\n      date: moment.isMoment(date) ? date.format(outputFormat) : date,\r\n      cat: cat,\r\n      label: `Past ${numDays} Days`,\r\n    };\r\n  }\r\n\r\n  return dateInfo;\r\n};\r\n\r\nexport const formatDt = (\r\n  date: string,\r\n  cat: string,\r\n  inputFormat: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n): string => {\r\n  if (cat === 'tdy' || cat === 'ytd' || cat === 'byDay') {\r\n    return moment(date, inputFormat).format(outputFormat);\r\n  } else {\r\n    let [startDt, endDt] = date.split(' ~ ');\r\n    return `${moment(startDt, inputFormat).format(outputFormat)} - ${moment(\r\n      endDt,\r\n      inputFormat\r\n    ).format(outputFormat)}`;\r\n  }\r\n};\r\n\r\nexport const getCurUnixTm = () => moment().subtract(15, 'second').unix();\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Form, Input, Image, Row, Space, Alert, Typography } from 'antd';\r\nimport { CaretLeftOutlined } from '@ant-design/icons';\r\nimport Button from '@components/Button';\r\nimport './Login.less';\r\nimport Hashtag from '@assets/Login/Hashtag.svg';\r\nimport Inventory from '@assets/Login/LoginBackground.webp';\r\nimport Logo from '@assets/logo.webp';\r\nimport { Helmet } from 'react-helmet';\r\nimport { BoldTitle } from '@components/Title';\r\nimport { loginAPI } from '@api/services/authAPI';\r\nimport AuthModal from '@components/Modal/AuthModal';\r\nimport { getSessionExp } from '@utils/storageUtils';\r\nimport { getCurUnixTm } from '@utils/dateUtils';\r\n\r\nconst Login = (_props) => {\r\n  const { Text } = Typography;\r\n  const [loginErr, setLoginErr] = useState<React.ReactNode>();\r\n  const [loading, setLoading] = useState(false);\r\n  const handleLogin = async (values) => {\r\n    setLoading(true);\r\n    await loginAPI({\r\n      username: values.username,\r\n      password: values.password,\r\n    })\r\n      .catch((e) => {\r\n        if (e.response?.status === 401) {\r\n          setLoginErr(\r\n            <>\r\n              Invalid username or password.\r\n              <br />\r\n              Please try again.\r\n            </>\r\n          );\r\n        } else if (e.response?.status === 403) {\r\n          setLoginErr(\r\n            <>\r\n              Your account has been locked.\r\n              <br />\r\n              Please retry after an hour.\r\n            </>\r\n          );\r\n        } else {\r\n          setLoginErr(\r\n            <>\r\n              Something went wrong.\r\n              <br />\r\n              Please try again.\r\n            </>\r\n          );\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (getCurUnixTm() >= getSessionExp()) {\r\n      setLoginErr(\r\n        <>\r\n          Your session has expired.\r\n          <br />\r\n          Please login again.\r\n        </>\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const getErrMsg = loginErr && (\r\n    <Alert\r\n      message={<Text type='danger'>{loginErr}</Text>}\r\n      type='error'\r\n      showIcon\r\n    />\r\n  );\r\n  return (\r\n    <div className='login'>\r\n      <Helmet>\r\n        <meta name='viewport' content='width=576'></meta>\r\n      </Helmet>\r\n      {/*Left half screen*/}\r\n      <Row className='login-container'>\r\n        <Col\r\n          xs={{ span: 24, order: 2 }}\r\n          sm={{ span: 24, order: 2 }}\r\n          md={{ span: 24, order: 2 }}\r\n          lg={{ span: 14, order: 1 }}\r\n          xl={{ span: 14, order: 1 }}\r\n        >\r\n          {/* Top-left image*/}\r\n          <div className='login-hashtag'>\r\n            <Image\r\n              src={Hashtag}\r\n              alt='hashtag'\r\n              width='70%'\r\n              height='auto'\r\n              preview={false}\r\n              draggable='false'\r\n              style={{ pointerEvents: 'none', userSelect: 'none' }}\r\n            />\r\n          </div>\r\n          {/*Login Form*/}\r\n          <Row className='login-form-container'>\r\n            <Col span={24}>\r\n              <div className='login-form'>\r\n                {/*Title*/}\r\n                <BoldTitle level={3} style={{ padding: 20 }}>\r\n                  Login\r\n                </BoldTitle>\r\n                {getErrMsg}\r\n                <Form name='loginForm' layout='vertical' onFinish={handleLogin}>\r\n                  <Space direction='vertical' className='full-width'>\r\n                    <Form.Item\r\n                      name='username'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please enter your Username!',\r\n                          whitespace: true,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        size='large'\r\n                        placeholder='Username'\r\n                        className='login-input'\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name='password'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please enter your Password!',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        size='large'\r\n                        placeholder='Password'\r\n                        className='login-input'\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                      <Button\r\n                        type='primary'\r\n                        size='large'\r\n                        htmlType='submit'\r\n                        block\r\n                        loading={loading}\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </Form.Item>\r\n                    <Form.Item style={{ marginTop: -20 }}>\r\n                      <Button\r\n                        type='link'\r\n                        color='info'\r\n                        className='login-right-align'\r\n                        onClick={() => {\r\n                          AuthModal.show('forgotPass');\r\n                        }}\r\n                      >\r\n                        Forgot Password\r\n                      </Button>\r\n                    </Form.Item>\r\n                    <Form.Item style={{ marginTop: -20, marginBottom: 0 }}>\r\n                      <Button\r\n                        type='link'\r\n                        color='info'\r\n                        icon={\r\n                          <CaretLeftOutlined\r\n                            style={{ position: 'relative', left: 5 }}\r\n                          />\r\n                        }\r\n                        className='login-left-align'\r\n                      >\r\n                        Go to Sharifah Food E-commerce\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </Space>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          xs={{ span: 24, order: 1 }}\r\n          sm={{ span: 24, order: 1 }}\r\n          md={{ span: 24, order: 1 }}\r\n          lg={{ span: 10, order: 2 }}\r\n          xl={{ span: 10, order: 2 }}\r\n          className='login-right-panel'\r\n        >\r\n          <Row justify='center' className='login-display-panel'>\r\n            <Col\r\n              xs={{ span: 24, order: 3 }}\r\n              sm={{ span: 24, order: 3 }}\r\n              md={{ span: 24, order: 3 }}\r\n              lg={{ span: 24, order: 1 }}\r\n              xl={{ span: 24, order: 1 }}\r\n              className='login-logo-wrapper'\r\n            >\r\n              <Image\r\n                src={Logo}\r\n                alt='logo'\r\n                width='20%'\r\n                preview={false}\r\n                draggable='false'\r\n                style={{\r\n                  float: 'right',\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs={{ span: 24, order: 2 }}\r\n              sm={{ span: 24, order: 2 }}\r\n              md={{ span: 24, order: 2 }}\r\n              lg={{ span: 24, order: 2 }}\r\n              xl={{ span: 24, order: 2 }}\r\n              className='login-responsive-img-wrapper'\r\n            >\r\n              <Image\r\n                src={Inventory}\r\n                alt='inventory'\r\n                preview={false}\r\n                draggable='false'\r\n                className='login-responsive-img'\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs={{ span: 24, order: 1 }}\r\n              sm={{ span: 24, order: 1 }}\r\n              md={{ span: 24, order: 1 }}\r\n              lg={{ span: 24, order: 3 }}\r\n              xl={{ span: 24, order: 3 }}\r\n            >\r\n              <div className='login-title-container'>\r\n                <BoldTitle level={2}>Inventory Management System</BoldTitle>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <AuthModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '@state/index';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","const breadcrumbNameMap: any = {\r\n  '/dashboard': 'Dashboard',\r\n  '/product': 'Product',\r\n  '/product/inventory': 'Product Inventory',\r\n  '/product/add': 'Add Product',\r\n  '/package': 'Package',\r\n  '/package/inventory': 'Package Inventory',\r\n  '/package/add': 'Add Package',\r\n  '/order': 'Order',\r\n  '/order/add': 'Add Order',\r\n  '/shipment': 'Shipment',\r\n  '/shipment/shipping-fee': 'Shipping Fee Management',\r\n  '/customer': 'Customer',\r\n  '/customer/registrations': 'Agent/Dropshipper Registration',\r\n  '/customer/add': 'Add Customer',\r\n  '/business-insights': 'Business Insights',\r\n  '/business-insights/inventory-analysis': 'Inventory Analysis',\r\n  '/voucher': 'Voucher',\r\n  '/voucher/add': 'Add Voucher',\r\n  '/my-acc': 'My Account',\r\n  '/my-acc/acc-settings': 'Account Settings',\r\n  '/admin': 'Admin',\r\n  '/admin/add': 'Add Admin',\r\n  '/help': 'Help',\r\n};\r\n\r\nexport default breadcrumbNameMap;\r\n","import { Breadcrumb as AntdBreadcrumb } from 'antd';\r\nimport { CaretRightOutlined } from '@ant-design/icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport breadcrumbNameMap from './breadCrumpList';\r\n\r\nconst BreadCrumb = () => {\r\n  const location = useLocation();\r\n  const pathSnippets = location.pathname.split('/').filter((i: any) => i);\r\n  const extraBreadcrumbItems = pathSnippets.map((_: any, index: number) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return breadcrumbNameMap.hasOwnProperty(url) && url !== '/dashboard' ? (\r\n      <AntdBreadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbNameMap[url]}</Link>\r\n      </AntdBreadcrumb.Item>\r\n    ) : (\r\n      <AntdBreadcrumb.Item key='none'></AntdBreadcrumb.Item>\r\n    );\r\n  });\r\n  const breadcrumbItems = [\r\n    <AntdBreadcrumb.Item key='/dashboard'>\r\n      <Link to='/dashboard'>\r\n        Dashboard\r\n      </Link>\r\n    </AntdBreadcrumb.Item>,\r\n  ].concat(extraBreadcrumbItems);\r\n  return (\r\n    <AntdBreadcrumb\r\n      separator={\r\n        <CaretRightOutlined style={{ position: 'relative', top: '-2px' }} />\r\n      }\r\n    >\r\n      {breadcrumbItems}\r\n    </AntdBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import { MdPersonOutline, MdOutlineSettings, MdLogout } from 'react-icons/md';\r\n\r\nconst menuList = [\r\n  {\r\n    key: '/my-acc/profile-management',\r\n    label: 'Manage Profile',\r\n    icon: MdPersonOutline,\r\n  },\r\n  {\r\n    key: '/my-acc/acc-settings',\r\n    label: 'Account Settings',\r\n    icon: MdOutlineSettings,\r\n  },\r\n  { key: '/', label: 'Logout', icon: MdLogout },\r\n];\r\n\r\nexport default menuList;\r\n","export default __webpack_public_path__ + \"static/media/avatar.94eae908.png\";","import { Avatar, Col, Dropdown, DropDownProps, Menu, Row } from 'antd';\r\nimport menuList from './avatarDropdownList';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './AvatarDropdown.less';\r\nimport AvatarImg from '@assets/avatar.png';\r\nimport { logoutAPI } from '@api/services/authAPI';\r\n\r\nexport interface AvatarDropdownProps extends DropDownProps {\r\n  name: string;\r\n  role: string;\r\n  img?: React.ReactNode;\r\n}\r\n\r\nconst AvatarDropdown = ({\r\n  name,\r\n  role,\r\n  img,\r\n  ...props\r\n}: Omit<AvatarDropdownProps, 'overlay'>) => {\r\n  let navigate = useNavigate();\r\n  let location = useLocation();\r\n  const menuAvatarDropdown = (\r\n    <Menu\r\n      defaultSelectedKeys={[location.pathname]}\r\n      onClick={(item) => {\r\n        navigate(item.key);\r\n      }}\r\n    >\r\n      {menuList.map((menu) => (\r\n        <Menu.Item\r\n          key={menu.key}\r\n          icon={<menu.icon size={20} />}\r\n          style={{ fontWeight: 500 }}\r\n          onClick={() => {\r\n            if (menu.label === 'Logout') {\r\n              logoutAPI();\r\n            }\r\n          }}\r\n        >\r\n          {menu.label}\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={menuAvatarDropdown}\r\n      arrow\r\n      placement='bottomCenter'\r\n      className='avatar-dropdown'\r\n    >\r\n      <Row align='middle' gutter={10}>\r\n        <Col className='avatar-dropdown-account'>\r\n          <Row justify='end' className='avatar-dropdown-name'>\r\n            {name}\r\n          </Row>\r\n          <Row justify='end' className='avatar-dropdown-role'>\r\n            {role}\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Avatar\r\n            src={img !== undefined ? img : AvatarImg}\r\n            alt='avatar'\r\n            size={42}\r\n            className='avatarDropdown-avatar'\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default AvatarDropdown;\r\n","const menuList: {\r\n  cat: string;\r\n  status: 'success' | 'error' | 'processing' | 'default' | 'warning';\r\n  title: string;\r\n  description: JSX.Element;\r\n  timestamp: string;\r\n  read: boolean;\r\n}[] = [\r\n  {\r\n    cat: 'order',\r\n    status: 'success',\r\n    title: 'New Order',\r\n    description: (\r\n      <>\r\n        <p>\r\n          <span>Tan Yuan Jie has placed new order!</span>\r\n        </p>\r\n        <p>\r\n          <span>Please proceed with his order.</span>\r\n        </p>\r\n      </>\r\n    ),\r\n    timestamp: '08-11-2021 16:00',\r\n    read: false,\r\n  },\r\n  {\r\n    cat: 'product',\r\n    status: 'error',\r\n    title: 'Low Stock',\r\n    description: (\r\n      <>\r\n        <p>\r\n          <span>Kari Ayam is currently in low stock.</span>\r\n        </p>\r\n        <p>\r\n          <span>Please consider restocking it.</span>\r\n        </p>\r\n      </>\r\n    ),\r\n    timestamp: '07-11-2021 18:00',\r\n    read: true,\r\n    },\r\n    {\r\n      cat: 'product',\r\n      status: 'error',\r\n      title: 'Low Stock',\r\n      description: (\r\n        <>\r\n          <p>\r\n            <span>Kari Ayam is currently in low stock.</span>\r\n          </p>\r\n          <p>\r\n            <span>Please consider restocking it.</span>\r\n          </p>\r\n        </>\r\n      ),\r\n      timestamp: '07-11-2021 18:00',\r\n      read: true,\r\n    },\r\n    {\r\n      cat: 'product',\r\n      status: 'error',\r\n      title: 'Low Stock',\r\n      description: (\r\n        <>\r\n          <p>\r\n            <span>Kari Ayam is currently in low stock.</span>\r\n          </p>\r\n          <p>\r\n            <span>Please consider restocking it.</span>\r\n          </p>\r\n        </>\r\n      ),\r\n      timestamp: '07-11-2021 18:00',\r\n      read: true,\r\n    },\r\n    {\r\n      cat: 'product',\r\n      status: 'error',\r\n      title: 'Low Stock',\r\n      description: (\r\n        <>\r\n          <p>\r\n            <span>Kari Ayam is currently in low stock.</span>\r\n          </p>\r\n          <p>\r\n            <span>Please consider restocking it.</span>\r\n          </p>\r\n        </>\r\n      ),\r\n      timestamp: '07-11-2021 18:00',\r\n      read: true,\r\n    },\r\n    {\r\n      cat: 'product',\r\n      status: 'error',\r\n      title: 'Low Stock',\r\n      description: (\r\n        <>\r\n          <p>\r\n            <span>Kari Ayam is currently in low stock.</span>\r\n          </p>\r\n          <p>\r\n            <span>Please consider restocking it.</span>\r\n          </p>\r\n        </>\r\n      ),\r\n      timestamp: '07-11-2021 18:00',\r\n      read: true,\r\n    },\r\n];\r\n\r\nexport default menuList;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Dropdown,\r\n  Menu,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Space,\r\n  Divider,\r\n} from 'antd';\r\nimport Button from '@components/Button';\r\nimport { MdNotifications } from 'react-icons/md';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport menuList from './notificationDropdownList';\r\nimport { findRoutePath, findIcon } from '@utils/routingUtils';\r\nimport './NotificationDropdown.less';\r\n\r\nconst NotificationDropdown = () => {\r\n  let navigate = useNavigate();\r\n  const { Text } = Typography;\r\n\r\n  const [markAllRead, setMarkAllRead] = useState(false);\r\n\r\n  const capitalize = (word: string) => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  };\r\n\r\n  const menuNotificationDropdown = (\r\n    <Menu\r\n      onClick={(item: { key: string }) => {\r\n        navigate(item.key.substring(0, item.key.length - 2));\r\n      }}\r\n      className='notification-menu'\r\n    >\r\n      <Menu.Item\r\n        key='noti-header'\r\n        disabled\r\n        style={{ cursor: 'default', padding: 15 }}\r\n      >\r\n        <Row align='middle' justify='space-between'>\r\n          <Col>\r\n            <Text strong>Recent Notifications</Text>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              color='info'\r\n              type='link'\r\n              onClick={() => {\r\n                setMarkAllRead(true);\r\n              }}\r\n            >\r\n              Mark all as read\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Menu.Item>\r\n      <Menu.Divider key='notification-header-divider' />\r\n      <Menu.ItemGroup\r\n        key={'notification-content'}\r\n        className='notification-menu-item-group'\r\n      >\r\n        {menuList.map((menu, index) => {\r\n          const Icon = findIcon(menu.cat);\r\n          return (\r\n            <>\r\n              <Menu.Item\r\n                key={`${findRoutePath(menu.cat)}-${index}`}\r\n                className='notification-menu-item'\r\n              >\r\n                <Row align='middle'>\r\n                  <Col className='notification-menu-item-avatar'>\r\n                    <Badge\r\n                      dot={menu.read}\r\n                      offset={[-5, 5]}\r\n                      status={menu.status}\r\n                      className='notification-menu-item-badge'\r\n                    >\r\n                      <Avatar\r\n                        icon={<Icon size={24} />}\r\n                        size={42}\r\n                        className={`center-flex ${menu.status}Background`}\r\n                      />\r\n                    </Badge>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row className='notification-menu-item-title'>\r\n                      {menu.title}\r\n                    </Row>\r\n                    {menu.description}\r\n                    <Row>\r\n                      <Space\r\n                        split={\r\n                          <Divider\r\n                            type='vertical'\r\n                            style={{ margin: 0 }}\r\n                            className='notification-menu-item-split'\r\n                          />\r\n                        }\r\n                      >\r\n                        <Text className='notification-menu-item-info'>\r\n                          {capitalize(menu.cat)}\r\n                        </Text>\r\n                        <Text className='notification-menu-item-info'>\r\n                          {menu.timestamp}\r\n                        </Text>\r\n                      </Space>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Menu.Item>\r\n              {index !== menuList.length - 1 && <Menu.Divider />}\r\n            </>\r\n          );\r\n        })}\r\n      </Menu.ItemGroup>\r\n\r\n      <Menu.Divider key='noti-footer-divider' />\r\n      <Menu.Item\r\n        key='noti-footer'\r\n        disabled\r\n        style={{ cursor: 'default', padding: '15px 0', textAlign: 'center' }}\r\n      >\r\n        <Button type='link' color='info'>\r\n          View All Notifications\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={menuNotificationDropdown} arrow>\r\n      <span className='notification-container'>\r\n        <Badge\r\n          dot={!markAllRead}\r\n          offset={[-7, 5]}\r\n          status='success'\r\n          className='notification-badge'\r\n        >\r\n          <MdNotifications className='notification' />\r\n        </Badge>\r\n      </span>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NotificationDropdown;\r\n","import { useAppSelector } from '@hooks/useRedux';\r\nimport { Col, Divider, Layout, Row, Space } from 'antd';\r\nimport Breadcrumb from '@components/BreadCrumb';\r\nimport AvatarDropdown from '@components/AvatarDropdown';\r\nimport NotificationDropdown from '@components/NotificationDropdown';\r\nimport classNames from 'classnames';\r\n\r\nconst Header = () => {\r\n  const { Header } = Layout;\r\n  const isSiderCollapsed = useAppSelector((state) => state.sider.collapsed);\r\n  return (\r\n    <div className='header-fixed'>\r\n      <Header\r\n        className={classNames(\r\n          'header',\r\n          { 'header-collapsed': isSiderCollapsed },\r\n          { 'header-expanded': !isSiderCollapsed }\r\n        )}\r\n        style={{ minWidth: 1060 }}\r\n      >\r\n        <Row align='middle' justify='space-between' style={{ height: 80 }}>\r\n          <Col>\r\n            <Breadcrumb />\r\n          </Col>\r\n          <Col>\r\n            <Space\r\n              size='large'\r\n              split={<Divider type='vertical' style={{ height: 42 }} />}\r\n            >\r\n              <NotificationDropdown />\r\n              <AvatarDropdown name='Tan Yuan Jie' role='Super Admin' />\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  collapsed: false,\r\n};\r\n\r\nexport const siderSlice = createSlice({\r\n  name: 'isSiderCollapsed',\r\n  initialState,\r\n  reducers: {\r\n    collapse: (state) => {\r\n      state.collapsed = true;\r\n    },\r\n    expand: (state) => {\r\n      state.collapsed = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { collapse, expand } = siderSlice.actions;\r\n\r\nexport default siderSlice.reducer;\r\n","import { IconType } from 'react-icons';\r\nimport {\r\n  MdHome,\r\n  MdShoppingBag,\r\n  MdAssignment,\r\n  MdLocalShipping,\r\n  MdGroups,\r\n  MdInsertChart,\r\n  MdConfirmationNumber,\r\n  MdAccountCircle,\r\n  MdAssignmentInd,\r\n  MdHelp,\r\n  MdInventory,\r\n  MdLogout,\r\n} from 'react-icons/md';\r\n\r\nconst menuList: {\r\n  level: number;\r\n  items: {\r\n    key: string;\r\n    label: string;\r\n    icon: IconType;\r\n    child?: {\r\n      key: string;\r\n      label: string;\r\n    }[];\r\n  }[];\r\n}[] = [\r\n  {\r\n    level: 1,\r\n    items: [\r\n      { key: 'dashboard', label: 'Dashboard', icon: MdHome },\r\n      {\r\n        key: 'product',\r\n        label: 'Products',\r\n        icon: MdShoppingBag,\r\n        child: [\r\n          { key: 'prodMgmt', label: 'Manage Products' },\r\n          { key: 'prodInv', label: 'Product Inventory' },\r\n          { key: 'prodAdd', label: 'Add Product' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'package',\r\n        label: 'Packages',\r\n        icon: MdInventory,\r\n        child: [\r\n          { key: 'packMgmt', label: 'Manage Packages' },\r\n          { key: 'packInv', label: 'Package Inventory' },\r\n          { key: 'packAdd', label: 'Add Package' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'order',\r\n        label: 'Orders',\r\n        icon: MdAssignment,\r\n        child: [\r\n          { key: 'orderMgmt', label: 'Manage Orders' },\r\n          { key: 'orderPend', label: 'Pending Orders' },\r\n          { key: 'orderCancel', label: 'Cancellation' },\r\n          { key: 'orderAdd', label: 'Add Order' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'shipment',\r\n        label: 'Shipments',\r\n        icon: MdLocalShipping,\r\n        child: [\r\n          { key: 'shptMgmt', label: 'Manage Shipments' },\r\n          { key: 'shpFeeMgmt', label: 'Manage Shipping Fees' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'customer',\r\n        label: 'Customers',\r\n        icon: MdGroups,\r\n        child: [\r\n          { key: 'custMgmt', label: 'Manage Customers' },\r\n          { key: 'custReg', label: 'Manage Registrations' },\r\n          { key: 'custAdd', label: 'Add Customer' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'business-insights',\r\n        label: 'Business Insights',\r\n        icon: MdInsertChart,\r\n        child: [\r\n          { key: 'bizStatistics', label: 'Statistics' },\r\n          {\r\n            key: 'invAnalysis',\r\n            label: 'Inventory Analysis',\r\n          },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'voucher',\r\n        label: 'Vouchers',\r\n        icon: MdConfirmationNumber,\r\n        child: [\r\n          { key: 'voucherMgmt', label: 'Manage Vouchers' },\r\n          { key: 'voucherAdd', label: 'Add Voucher' },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    level: 2,\r\n    items: [\r\n      {\r\n        key: 'my-acc',\r\n        label: 'My Account',\r\n        icon: MdAccountCircle,\r\n        child: [\r\n          { key: 'profileMgmt', label: 'Manage Profile' },\r\n          { key: 'accSettings', label: 'Account Settings' },\r\n        ],\r\n      },\r\n      {\r\n        key: 'admin',\r\n        label: 'Admins',\r\n        icon: MdAssignmentInd,\r\n        child: [\r\n          { key: 'adminMgmt', label: 'Manage Admins' },\r\n          { key: 'adminAdd', label: 'Add Admin' },\r\n        ],\r\n      },\r\n      { key: 'help', label: 'Help', icon: MdHelp },\r\n    ],\r\n  },\r\n  {\r\n    level: 3,\r\n    items: [{ key: 'logout', label: 'Logout', icon: MdLogout }],\r\n  },\r\n];\r\n\r\nexport default menuList;\r\n","const siderDefKeyList: {\r\n  path: string;\r\n  key: string;\r\n}[] = [\r\n  {\r\n    path: '/order/management?status=toShip',\r\n    key: 'orderPend',\r\n  },\r\n  {\r\n    path: '/order/management?status=cancel',\r\n    key: 'orderCancel',\r\n  },\r\n];\r\n\r\nexport default siderDefKeyList;\r\n","import React, { useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useRedux';\r\nimport { collapse, expand } from '@state/siderSlice';\r\nimport { Layout, Menu, Image } from 'antd';\r\nimport { SiderProps as AntdSiderProps } from 'antd/lib/layout';\r\nimport menuList from './siderMenuList';\r\nimport Logo from '@assets/logo.webp';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { findRouteLabel, findRoutePath } from '@utils/routingUtils';\r\nimport classNames from 'classnames';\r\nimport siderDefKeyList from './siderDefKeyList';\r\nimport { logoutAPI } from '@api/services/authAPI';\r\n\r\nexport interface SiderProps extends AntdSiderProps {}\r\n\r\nconst Sider = (props) => {\r\n  const { Sider } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [collapsedSiderOpen, setCollapsedSiderOpen] = useState(true);\r\n  const isSiderCollapsed = useAppSelector((state) => state.sider.collapsed);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const selectedKeys =\r\n    siderDefKeyList.find(\r\n      (defKey) => defKey.path === location.pathname + location.search\r\n    ) !== undefined\r\n      ? [\r\n          siderDefKeyList.find(\r\n            (defKey) => defKey.path === location.pathname + location.search\r\n          ).key,\r\n        ]\r\n      : [findRouteLabel(location.pathname)];\r\n  const openKeys = [location.pathname.split('/')[1]];\r\n\r\n  return (\r\n    <span\r\n      className={classNames(\r\n        { 'sider-collapsed-fixed': isSiderCollapsed },\r\n        { 'sider-fixed': !isSiderCollapsed }\r\n      )}\r\n    >\r\n      <Sider\r\n        theme='light'\r\n        breakpoint='xl'\r\n        width={220}\r\n        collapsed={!collapsedSiderOpen}\r\n        onMouseLeave={() => isSiderCollapsed && setCollapsedSiderOpen(false)}\r\n        onBreakpoint={(breakpoint) => {\r\n          if (breakpoint) {\r\n            dispatch(collapse());\r\n            setCollapsedSiderOpen(false);\r\n          } else {\r\n            dispatch(expand());\r\n            setCollapsedSiderOpen(true);\r\n          }\r\n        }}\r\n        className='sider'\r\n        {...props}\r\n      >\r\n        <div className='sider-logo-fixed'>\r\n          <div\r\n            className={classNames(\r\n              { 'sider-logo-collapsed-wrapper': !collapsedSiderOpen },\r\n              { 'sider-logo-wrapper': collapsedSiderOpen }\r\n            )}\r\n            onClick={() => {\r\n              navigate(findRoutePath('dashboard'));\r\n            }}\r\n          >\r\n            <Image\r\n              src={Logo}\r\n              alt='Logo'\r\n              preview={false}\r\n              height={!collapsedSiderOpen ? 25 : 65}\r\n              className='sider-logo'\r\n            />\r\n          </div>\r\n        </div>\r\n        <Menu\r\n          mode='inline'\r\n          selectedKeys={selectedKeys}\r\n          defaultOpenKeys={openKeys}\r\n          inlineIndent={15}\r\n          onClick={(item: { key: string }) => {\r\n            if (item.key === 'logout') {\r\n              logoutAPI();\r\n            }\r\n            navigate(findRoutePath(item.key));\r\n          }}\r\n          onMouseOver={() => setCollapsedSiderOpen(true)}\r\n          className='sider-menu'\r\n        >\r\n          {menuList.map((menuLevel) => [\r\n            menuLevel.items.map((item) =>\r\n              item.child ? (\r\n                <SubMenu\r\n                  key={item.key}\r\n                  title={item.label}\r\n                  icon={<item.icon size={20} />}\r\n                >\r\n                  {item.child.map((child) => (\r\n                    <Menu.Item key={child.key}>{child.label}</Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item\r\n                  key={item.key}\r\n                  icon={<item.icon size={20} />}\r\n                  className='sider-menu-item'\r\n                >\r\n                  {item.label}\r\n                </Menu.Item>\r\n              )\r\n            ),\r\n            menuLevel.level !== menuList.length ? (\r\n              <Menu.Divider\r\n                key={menuLevel.level}\r\n                style={{ margin: '24px 0' }}\r\n              />\r\n            ) : (\r\n              <div style={{ height: 35 }} />\r\n            ),\r\n          ])}\r\n        </Menu>\r\n      </Sider>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Sider;\r\n","import { Layout } from 'antd';\r\nimport CopyrightCircleOutlined from '@ant-design/icons/CopyrightOutlined';\r\nimport { getYr } from '@utils/dateUtils';\r\n\r\nconst Footer = () => {\r\n  const { Footer } = Layout;\r\n  return (\r\n    <Footer className='footer'>\r\n      <CopyrightCircleOutlined className='footer-icon' /> {getYr()} Sharifah\r\n      Food. All rights reserved.\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Suspense } from 'react';\r\nimport { Layout as AntdLayout, Row, RowProps } from 'antd';\r\nimport { Helmet } from 'react-helmet';\r\nimport Header from './Header';\r\nimport Sider from './Sider';\r\nimport Footer from './Footer';\r\nimport './Layout.less';\r\nimport PageLoad from '@components/Loading/PageLoad';\r\n\r\nexport interface CustomLayoutProps extends RowProps {\r\n  justify?: 'start' | 'end' | 'center' | 'space-around' | 'space-between';\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Layout = ({ justify = 'center', ...props }: CustomLayoutProps) => {\r\n  const { Content } = AntdLayout;\r\n  return (\r\n    <AntdLayout hasSider>\r\n      <Helmet>\r\n        <meta name='viewport' content='width=1600' />\r\n      </Helmet>\r\n      <Sider />\r\n      <AntdLayout>\r\n        <Header />\r\n        <Suspense fallback={<PageLoad />}>\r\n          <Content className='content' style={{ minWidth: 1280 }}>\r\n            <Row justify={justify} {...props}>\r\n              {props.children}\r\n            </Row>\r\n          </Content>\r\n          <Footer />\r\n        </Suspense>\r\n      </AntdLayout>\r\n    </AntdLayout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Card, CardProps, Col, Row, Space } from 'antd';\r\nimport React from 'react';\r\nimport { HiCheckCircle, HiXCircle } from 'react-icons/hi';\r\nimport './ColorCard.less';\r\n\r\nexport interface ColorCardProps extends CardProps {\r\n  backgroundColor?:\r\n    | 'default'\r\n    | 'white'\r\n    | 'success'\r\n    | 'warning'\r\n    | 'error'\r\n    | 'info'\r\n    | 'grey';\r\n  hover?: boolean | 'success' | 'warning' | 'error' | 'info' | 'grey';\r\n  label?: React.ReactNode;\r\n  indicator?: 'true' | 'false';\r\n}\r\n\r\nconst ColorCard = ({\r\n  backgroundColor = 'default',\r\n  hover = false,\r\n  label,\r\n  indicator,\r\n  className,\r\n  ...props\r\n}: ColorCardProps) => {\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      {...props}\r\n      className={`small-card${\r\n        backgroundColor !== undefined ? `-${backgroundColor} ` : ''\r\n      }${\r\n        hover === true\r\n          ? `small-card-${backgroundColor}-hover`\r\n          : hover !== false\r\n          ? ` small-card-${hover}-hover`\r\n          : ''\r\n      } full-height ${className !== undefined ? ` ${className}` : ''}`}\r\n    >\r\n      <Space direction='vertical' size={20} className='full-width'>\r\n        {label !== undefined || indicator !== undefined ? (\r\n          <Row justify='space-between'>\r\n            <Col span={22} className='text-break'>\r\n              {label}\r\n            </Col>\r\n            <Col\r\n              style={{ position: 'absolute', right: 10 }}\r\n              className='center-flex'\r\n            >\r\n              {indicator === 'true' ? (\r\n                <HiCheckCircle size={20} className='color-primary' />\r\n              ) : indicator === 'false' ? (\r\n                <HiXCircle size={20} className='color-error' />\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        {props.children !== undefined && <div>{props.children}</div>}\r\n      </Space>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ColorCard;\r\n","import { Table as AntdTable, TableProps as AntdTableProps } from 'antd';\r\nimport { DefaultRecordType } from 'rc-table/lib/interface';\r\n\r\nexport interface TableProps extends AntdTableProps<DefaultRecordType> {}\r\n\r\nconst Table = ({ className, ...props }: TableProps) => {\r\n  return (\r\n    <AntdTable\r\n      className={`full-width${className !== undefined ? ` ${className}` : ''}`}\r\n      {...props}\r\n    ></AntdTable>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { Avatar, Col, Row, Space, Typography } from 'antd';\r\nimport { IconType } from 'react-icons';\r\n\r\nexport interface StatisticsProps {\r\n  value: number;\r\n  title: string;\r\n  date?: string;\r\n  untilTm?: string;\r\n  icon: IconType;\r\n  color: string;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  toFixed?: number;\r\n  space?: number;\r\n  valueSize?: number;\r\n  avatarSize?: number;\r\n}\r\n\r\nconst Statistics = ({\r\n  space = 40,\r\n  avatarSize = 48,\r\n  ...props\r\n}: StatisticsProps) => {\r\n  const { Text, Title } = Typography;\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={space} align='middle'>\r\n        <Col>\r\n          <Avatar\r\n            icon={<props.icon size={avatarSize * 0.6} color={props.color} />}\r\n            size={avatarSize}\r\n            className='center-flex'\r\n            style={{ backgroundColor: `${props.color}33` }} //background opacity = 20%\r\n          />\r\n        </Col>\r\n        <Col flex='auto'>\r\n          <Space direction='vertical' size={0}>\r\n            <Title level={5} style={{ fontSize: props.valueSize }}>\r\n              {props.prefix}\r\n              {props.value.toFixed(props.toFixed)}\r\n              {props.suffix}\r\n            </Title>\r\n            <Text type='secondary'>{props.title}</Text>\r\n            {props.date !== undefined && (\r\n              <Text type='secondary' style={{ fontSize: 10 }}>\r\n                {props.date}\r\n              </Text>\r\n            )}\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n      {props.untilTm !== undefined && (\r\n        <Row justify='end'>\r\n          <Text type='secondary' style={{ fontSize: 10 }}>\r\n            {props.untilTm}\r\n          </Text>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import { Tag as AntdTag, TagProps as AntdTagProps } from 'antd';\r\n\r\nexport interface TagProps extends AntdTagProps {\r\n  children?: React.ReactNode;\r\n  width?: number | string;\r\n  minWidth?: number | string;\r\n  maxWidth?: number | string;\r\n  height?: number | string;\r\n  justify?: 'start' | 'center' | 'end';\r\n  border?: number;\r\n}\r\n\r\nconst Tag = ({\r\n  width = 'auto',\r\n  minWidth = 'auto',\r\n  maxWidth = 'auto',\r\n  height = '100%',\r\n  justify = 'center',\r\n  border = 10,\r\n  style,\r\n  ...props\r\n}: TagProps) => {\r\n  return (\r\n    <AntdTag\r\n      style={{\r\n        width: width,\r\n        minWidth: minWidth,\r\n        maxWidth: maxWidth,\r\n        height: height,\r\n        borderRadius: border,\r\n        textAlign: justify,\r\n        margin: 0,\r\n        ...style,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import { Space, SpaceProps } from 'antd';\r\nimport './MainCardContainer.less';\r\n\r\nexport interface MainCardContainerProps extends SpaceProps {}\r\n\r\nconst MainCardContainer = ({ className, ...props }: MainCardContainerProps) => {\r\n  return (\r\n    <Space\r\n      direction='vertical'\r\n      size={20}\r\n      className={`main-card-container${\r\n        className !== undefined ? ` ${className}` : ''\r\n      }`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainCardContainer;\r\n","const toDoList: {\r\n  label: string;\r\n  quantity: number;\r\n  link: string;\r\n}[] = [\r\n  {\r\n    label: 'Pending Orders',\r\n    quantity: 5,\r\n    link: 'orderPend',\r\n  },\r\n  {\r\n    label: 'Unpaid Orders',\r\n    quantity: 3,\r\n    link: 'orderUnpaid',\r\n  },\r\n  {\r\n    label: 'Pending Return/Refund',\r\n    quantity: 0,\r\n    link: 'orderRefund',\r\n  },\r\n  {\r\n    label: 'Out-of-Stock Products',\r\n    quantity: 0,\r\n    link: 'prodMgmt',\r\n  },\r\n  {\r\n    label: 'Out-of-Stock Packages',\r\n    quantity: 0,\r\n    link: 'packMgmt',\r\n  },\r\n  {\r\n    label: 'Pending Agent Registration',\r\n    quantity: 3,\r\n    link: 'custReg',\r\n  },\r\n  {\r\n    label: 'Pending Dropshipper Registration',\r\n    quantity: 1,\r\n    link: 'custReg',\r\n  },\r\n];\r\n\r\nexport default toDoList;\r\n","import moment from \"moment\";\r\n\r\nconst dataYear: {\r\n  year: string;\r\n  data: {\r\n    Month: string;\r\n    Sales: number;\r\n  }[];\r\n} = {\r\n  year: moment().format('YYYY'),\r\n  data: [\r\n    { Month: 'Jan', Sales: 4000 },\r\n    { Month: 'Feb', Sales: 4500 },\r\n    { Month: 'Mar', Sales: 5500 },\r\n    { Month: 'Apr', Sales: 4300 },\r\n    { Month: 'May', Sales: 4100 },\r\n    { Month: 'Jun', Sales: 6000 },\r\n    { Month: 'Jul', Sales: 4700 },\r\n    { Month: 'Aug', Sales: 4200 },\r\n    { Month: 'Sep', Sales: 6100 },\r\n    { Month: 'Oct', Sales: 5030 },\r\n    { Month: 'Nov', Sales: 4954 },\r\n    { Month: 'Dec', Sales: 5310 },\r\n  ],\r\n};\r\n\r\nconst dataMonth: {\r\n  month: string;\r\n  data: {\r\n    Day: string;\r\n    Sales: number;\r\n  }[];\r\n} = {\r\n  month: '2021 August',\r\n  data: [\r\n    { Day: '1', Sales: 300 },\r\n    { Day: '2', Sales: 356 },\r\n    { Day: '3', Sales: 481 },\r\n    { Day: '4', Sales: 237 },\r\n    { Day: '5', Sales: 285 },\r\n    { Day: '6', Sales: 300 },\r\n    { Day: '7', Sales: 107 },\r\n    { Day: '8', Sales: 402 },\r\n    { Day: '9', Sales: 266 },\r\n    { Day: '10', Sales: 470 },\r\n    { Day: '11', Sales: 391 },\r\n    { Day: '12', Sales: 379 },\r\n    { Day: '13', Sales: 418 },\r\n    { Day: '14', Sales: 301 },\r\n    { Day: '15', Sales: 317 },\r\n    { Day: '16', Sales: 30 },\r\n    { Day: '17', Sales: 391 },\r\n    { Day: '18', Sales: 106 },\r\n    { Day: '19', Sales: 465 },\r\n    { Day: '20', Sales: 50 },\r\n    { Day: '21', Sales: 321 },\r\n    { Day: '22', Sales: 279 },\r\n    { Day: '23', Sales: 186 },\r\n    { Day: '24', Sales: 500 },\r\n    { Day: '25', Sales: 223 },\r\n    { Day: '26', Sales: 447 },\r\n    { Day: '27', Sales: 70 },\r\n    { Day: '28', Sales: 58 },\r\n    { Day: '29', Sales: 400 },\r\n    { Day: '30', Sales: 600 },\r\n  ],\r\n};\r\n\r\nconst dataWeek: {\r\n  frmDate: string;\r\n  toDate: string;\r\n  data: {\r\n    Day: string;\r\n    Sales: number;\r\n  }[];\r\n} = {\r\n  frmDate: '10 August 2021',\r\n  toDate: '17 August 2021',\r\n  data: [\r\n    { Day: 'Monday', Sales: 200 },\r\n    { Day: 'Tuesday', Sales: 126 },\r\n    { Day: 'Wednesday', Sales: 481 },\r\n    { Day: 'Thursday', Sales: 237 },\r\n    { Day: 'Friday', Sales: 285 },\r\n    { Day: 'Saturday', Sales: 300 },\r\n    { Day: 'Sunday', Sales: 107 },\r\n  ],\r\n};\r\n\r\nconst dataDay: {\r\n  date: string;\r\n  data: {\r\n    Hour: string;\r\n    Sales: number;\r\n  }[];\r\n} = {\r\n  date: '17 August 2021',\r\n  data: [\r\n    { Hour: '00', Sales: 10 },\r\n    { Hour: '01', Sales: 0 },\r\n    { Hour: '02', Sales: 0 },\r\n    { Hour: '03', Sales: 0 },\r\n    { Hour: '04', Sales: 0 },\r\n    { Hour: '05', Sales: 0 },\r\n    { Hour: '06', Sales: 0 },\r\n    { Hour: '07', Sales: 30 },\r\n    { Hour: '08', Sales: 0 },\r\n    { Hour: '09', Sales: 20 },\r\n    { Hour: '10', Sales: 0 },\r\n    { Hour: '11', Sales: 40 },\r\n    { Hour: '12', Sales: 13.6 },\r\n    { Hour: '13', Sales: 15 },\r\n    { Hour: '14', Sales: 16.5 },\r\n    { Hour: '15', Sales: 0 },\r\n    { Hour: '16', Sales: 30.2 },\r\n    { Hour: '17', Sales: 0 },\r\n    { Hour: '18', Sales: 0 },\r\n    { Hour: '19', Sales: 0 },\r\n    { Hour: '20', Sales: 0 },\r\n    { Hour: '21', Sales: 0 },\r\n    { Hour: '22', Sales: 0 },\r\n    { Hour: '23', Sales: 0 },\r\n  ],\r\n};\r\n\r\nexport { dataYear, dataMonth, dataWeek, dataDay };\r\n","import moment from 'moment';\r\n\r\nconst statisticsData: any = {\r\n  date: moment().format('DD MMMM YYYY'),\r\n  sales: 830,\r\n  profit: 500,\r\n  visitors: 20,\r\n  newCust: 2,\r\n  newOrder: 10,\r\n};\r\n\r\nexport default statisticsData;\r\n","const recentOrders: {\r\n  key: string;\r\n  orderID: string;\r\n  custName: string;\r\n  custType: string;\r\n  orderTime: string;\r\n  amount: number;\r\n  status: string;\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    orderID: '#2908724',\r\n    custName: 'Tan Yuan Jie',\r\n    custType: 'Agent',\r\n    orderTime: '23-08-2021 14:30',\r\n    amount: 60.0,\r\n    status: 'toShip',\r\n  },\r\n  {\r\n    key: '2',\r\n    orderID: '#1659883',\r\n    custName: 'Nur Nuraliah binti Haiqal',\r\n    custType: 'Direct Customer',\r\n    orderTime: '23-08-2021 12:41',\r\n    amount: 120.0,\r\n    status: 'toShip',\r\n  },\r\n  {\r\n    key: '3',\r\n    orderID: '#7156802',\r\n    custName: 'Jong Cai Tien',\r\n    custType: 'Direct Customer',\r\n    orderTime: '23-08-2021 09:21',\r\n    amount: 32.0,\r\n    status: 'shipping',\r\n  },\r\n  {\r\n    key: '4',\r\n    orderID: '#1605044',\r\n    custName: 'Mohammed Yusni bin Ayyadi',\r\n    custType: 'Dropshipper',\r\n    orderTime: '22-08-2021 21:06',\r\n    amount: 88.2,\r\n    status: 'shipping',\r\n  },\r\n  {\r\n    key: '5',\r\n    orderID: '#1487160',\r\n    custName: 'Huzaifi Hafizh bin Zaidi',\r\n    custType: 'Agent',\r\n    orderTime: '22-08-2021 19:34',\r\n    amount: 29.9,\r\n    status: 'completed',\r\n  },\r\n  {\r\n    key: '6',\r\n    orderID: '#7698033',\r\n    custName: 'Steven Tan',\r\n    custType: 'Direct Customer',\r\n    orderTime: '21-08-2021 17:32',\r\n    amount: 164.5,\r\n    status: 'cancel',\r\n  },\r\n];\r\n\r\nexport default recentOrders;\r\n","const topProduct: {\r\n  date: string;\r\n  type: 'sales' | 'units';\r\n  items: {\r\n    label: string;\r\n    cat?: string;\r\n    value: number;\r\n  }[];\r\n} = {\r\n  date: '2021 August',\r\n  type: 'sales',\r\n  items: [\r\n    {\r\n      label: 'Kari Ayam',\r\n      cat: 'Ready-To-Eat',\r\n      value: 80,\r\n    },\r\n    {\r\n      label: 'Sambal Ikan Bilis',\r\n      cat: 'Ready-To-Eat',\r\n      value: 54,\r\n    },\r\n    {\r\n      label: 'Nasi Briyani Bukhari',\r\n      cat: 'Ready-To-Cook',\r\n      value: 47,\r\n    },\r\n    {\r\n      label: 'Rendang Dendeng Daging',\r\n      cat: 'Ready-To-Eat',\r\n      value: 53,\r\n    },\r\n    {\r\n      label: 'Pes Sambal Tumis',\r\n      cat: 'Paste',\r\n      value: 38,\r\n    },\r\n    {\r\n      label: 'Pes Masakan Kerutuk',\r\n      cat: 'Paste',\r\n      value: 22,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default topProduct;\r\n","const invAnalysis: {\r\n  key: string;\r\n  prodNm: string;\r\n  stock: number;\r\n  ABC: string;\r\n  HML: string;\r\n  reorderPt: number;\r\n  optimalOrderQty: number;\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Kari Ayam',\r\n    stock: 25,\r\n    ABC: 'A',\r\n    HML: 'L',\r\n    reorderPt: 50,\r\n    optimalOrderQty: 200,\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Sambal Ikan Bilis',\r\n    stock: 75,\r\n    ABC: 'B',\r\n    HML: 'L',\r\n    reorderPt: 30,\r\n    optimalOrderQty: 300,\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    stock: 120,\r\n    ABC: 'A',\r\n    HML: 'M',\r\n    reorderPt: 45,\r\n    optimalOrderQty: 200,\r\n  },\r\n  {\r\n    key: '4',\r\n    prodNm: 'Rendang Dendeng Daging',\r\n    stock: 47,\r\n    ABC: 'A',\r\n    HML: 'H',\r\n    reorderPt: 25,\r\n    optimalOrderQty: 150,\r\n  },\r\n  {\r\n    key: '5',\r\n    prodNm: 'Pes Sambal Tumis',\r\n    stock: 90,\r\n    ABC: 'B',\r\n    HML: 'L',\r\n    reorderPt: 30,\r\n    optimalOrderQty: 175,\r\n  },\r\n  {\r\n    key: '6',\r\n    prodNm: 'Pes Masakan Keruntuk',\r\n    stock: 200,\r\n    ABC: 'C',\r\n    HML: 'L',\r\n    reorderPt: 15,\r\n    optimalOrderQty: 145,\r\n        },\r\n        {\r\n            key: '7',\r\n            prodNm: 'Pes Nasi Goreng Kampung',\r\n            stock: 130,\r\n            ABC: 'B',\r\n            HML: 'M',\r\n            reorderPt: 50,\r\n            optimalOrderQty: 124,\r\n          },\r\n];\r\n\r\nexport default invAnalysis;\r\n","export const splitIntoChunks = (arr, chunkSize) => {\r\n  const res = [];\r\n  for (let i = 0; i < arr.length; i += chunkSize) {\r\n      const chunk = arr.slice(i, i + chunkSize);\r\n      res.push(chunk);\r\n  }\r\n  return res;\r\n}\r\n\r\nexport const sortByOrder = (obj: any, des: boolean = false) => {\r\n  let sorted = obj.sort((a: string, b: string) => a.localeCompare(b));\r\n  return des === true ? sorted.reverse() : sorted;\r\n};\r\n","import { Popover as AntdPopover, PopoverProps as AntdPopoverProps } from 'antd';\r\n\r\nexport interface PopoverProps extends AntdPopoverProps {}\r\n\r\nconst Popover = ({ children, overlayStyle, ...props }: AntdPopoverProps) => {\r\n  return (\r\n    <AntdPopover\r\n      overlayStyle={{\r\n        maxWidth: 300,\r\n        textAlign: 'justify',\r\n        ...overlayStyle,\r\n      }}\r\n      {...props}\r\n    >\r\n      <span style={{ cursor: 'pointer' }}>{children}</span>\r\n    </AntdPopover>\r\n  );\r\n};\r\n\r\nexport default Popover;\r\n","import React, { useState } from 'react';\r\nimport ColorCard from '@components/Card/ColorCard';\r\nimport {\r\n  List,\r\n  ListProps,\r\n  Skeleton,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Select,\r\n  SelectProps,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport './RankingList.less';\r\nimport CarouselArrow from '@components/Carousel/CarouselArrow';\r\nimport { splitIntoChunks } from '@utils/arrayUtils';\r\nimport Popover from '@components/Popover';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nexport interface RankingListProps extends Omit<ListProps<any>, 'dataSource'> {\r\n  dataSource: {\r\n    date: string;\r\n    type: 'sales' | 'units';\r\n    items: {\r\n      label: string;\r\n      cat?: string;\r\n      value: number;\r\n    }[];\r\n  };\r\n  cardSelections?: { key: string; label: string; desc?: string }[];\r\n  selectOptions?: SelectProps;\r\n  onCardSelect?: (selected: string) => void;\r\n  onSelectChange?: (selected: string) => void;\r\n}\r\n\r\nconst RankingList = ({\r\n  dataSource,\r\n  cardSelections,\r\n  selectOptions,\r\n  onCardSelect = () => '',\r\n  onSelectChange = () => '',\r\n\r\n  ...props\r\n}: RankingListProps) => {\r\n  const { Text } = Typography;\r\n\r\n  const [selectedCard, setSelectedCard] = useState('bySales');\r\n  return (\r\n    <Space direction='vertical' className='full-width'>\r\n      {cardSelections !== undefined ||\r\n        (selectOptions !== undefined && (\r\n          <Row justify='space-between' align='middle'>\r\n            <Col span={13}>\r\n              {cardSelections !== undefined && (\r\n                <CarouselArrow style={{ width: 274 }}>\r\n                  {splitIntoChunks(cardSelections, 2).map((chunks, index) => (\r\n                    <div key={`rankingSelections-${index}`}>\r\n                      <Row gutter={20}>\r\n                        {chunks.map((selection) => (\r\n                          <Col key={`col-${selection.key}`}>\r\n                            <ColorCard\r\n                              key={selection.key}\r\n                              bodyStyle={{ padding: 15 }}\r\n                              style={{ minWidth: 125 }}\r\n                              backgroundColor={\r\n                                selectedCard === selection.key\r\n                                  ? 'success'\r\n                                  : 'grey'\r\n                              }\r\n                              hover={\r\n                                selectedCard !== selection.key\r\n                                  ? 'success'\r\n                                  : null\r\n                              }\r\n                              label={\r\n                                <>\r\n                                  <Text className='text-break'>\r\n                                    {selection.label}\r\n                                  </Text>\r\n                                  {selection.desc !== undefined && (\r\n                                    <Popover content={selection.desc}>\r\n                                      <QuestionCircleOutlined\r\n                                        style={{\r\n                                          padding: '0 5px',\r\n                                        }}\r\n                                        className='color-grey'\r\n                                      />\r\n                                    </Popover>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                              indicator={\r\n                                selectedCard === selection.key ? 'true' : null\r\n                              }\r\n                              onClick={() => {\r\n                                setSelectedCard(selection.key);\r\n                                onCardSelect(selection.key);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        ))}\r\n                      </Row>\r\n                    </div>\r\n                  ))}\r\n                </CarouselArrow>\r\n              )}\r\n            </Col>\r\n            {selectOptions !== undefined && (\r\n              <Col span={7}>\r\n                <Select\r\n                  {...selectOptions}\r\n                  className='full-width'\r\n                  onChange={(value) => onSelectChange(value)}\r\n                />\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        ))}\r\n      <List\r\n        dataSource={dataSource.items}\r\n        renderItem={(item: {\r\n          label: string;\r\n          cat?: string;\r\n          value: number;\r\n          loading: boolean;\r\n        }) => (\r\n          <List.Item key={item.label}>\r\n            <Skeleton title={false} active loading={item.loading}>\r\n              <List.Item.Meta\r\n                key={item.label}\r\n                title={<Text className='ranking-list-title'>{item.label}</Text>}\r\n                description={\r\n                  <Text type='secondary' className='ranking-list-cat'>\r\n                    {item.cat}\r\n                  </Text>\r\n                }\r\n              />\r\n              <Row align='middle' gutter={[5, 5]}>\r\n                <Col>\r\n                  <BoldTitle level={5} className='ranking-list-value'>\r\n                    {item.value}\r\n                  </BoldTitle>\r\n                </Col>\r\n                <Col>\r\n                  <Text className='ranking-list-sales'>\r\n                    {dataSource.type === 'sales' ? 'sales' : 'units'}\r\n                  </Text>\r\n                </Col>\r\n              </Row>\r\n            </Skeleton>\r\n          </List.Item>\r\n        )}\r\n        {...props}\r\n      />\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default RankingList;\r\n","import { IconType } from 'react-icons/lib';\r\nimport {\r\n  MdOutlineAssignment,\r\n  MdOutlineAttachMoney,\r\n  MdOutlineTrendingUp,\r\n  MdOutlineVisibility,\r\n  MdPersonOutline,\r\n} from 'react-icons/md';\r\n\r\nconst statisticsList: {\r\n  key: string;\r\n  title: string;\r\n  icon: IconType;\r\n  color: string;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  toFixed?: number;\r\n}[] = [\r\n  {\r\n    key: 'sales',\r\n    title: 'Sales',\r\n    icon: MdOutlineTrendingUp,\r\n    color: '#7367F0',\r\n    prefix: 'RM ',\r\n    toFixed: 2,\r\n  },\r\n  {\r\n    key: 'profit',\r\n    title: 'Profit',\r\n    icon: MdOutlineAttachMoney,\r\n    color: '#28C76F',\r\n    prefix: 'RM ',\r\n    toFixed: 2,\r\n  },\r\n  {\r\n    key: 'visitors',\r\n    title: 'Visitors',\r\n    icon: MdOutlineVisibility,\r\n    color: '#FDBA39',\r\n  },\r\n  {\r\n    key: 'newCust',\r\n    title: 'New Customers',\r\n    icon: MdPersonOutline,\r\n    color: '#00CFE8',\r\n  },\r\n  {\r\n    key: 'newOrder',\r\n    title: 'New Orders',\r\n    icon: MdOutlineAssignment,\r\n    color: '#EA5455',\r\n  },\r\n];\r\n\r\nexport default statisticsList;\r\n","import { MdAdd, MdRemove } from 'react-icons/md';\r\nimport { Typography } from 'antd';\r\nexport const { Text } = Typography;\r\n\r\nexport const ynOptions = [\r\n  { value: true, label: 'Yes' },\r\n  { value: false, label: 'No' },\r\n];\r\n\r\nexport const dateRangeOptions = [\r\n  { value: 'year', label: 'Year' },\r\n  { value: 'month', label: 'Month' },\r\n  { value: 'week', label: 'Week' },\r\n  { value: 'day', label: 'Day' },\r\n];\r\n\r\nexport const prodCat = [\r\n  { value: 'rte', label: 'Ready-To-Eat' },\r\n  { value: 'rtc', label: 'Ready-To-Cook' },\r\n  { value: 'paste', label: 'Paste' },\r\n];\r\n\r\nexport const prodStatList = [\r\n  { status: 'active', label: 'Active', color: 'success' },\r\n  { status: 'oos', label: 'Out of Stock', color: 'error' },\r\n  { status: 'hidden', label: 'Hidden', color: 'default' },\r\n];\r\n\r\nexport const packStatList = [\r\n  { status: 'active', label: 'Active', color: 'success' },\r\n  { status: 'oos', label: 'Out of Stock', color: 'error' },\r\n  { status: 'scheduled', label: 'Scheduled', color: 'processing' },\r\n  { status: 'expired', label: 'Expired', color: 'warning' },\r\n  { status: 'hidden', label: 'Hidden', color: 'default' },\r\n];\r\n\r\nexport const orderStatList = [\r\n  { status: 'completed', label: 'Completed', color: 'success' },\r\n  { status: 'cancel', label: 'Cancellation', color: 'error' },\r\n  { status: 'unpaid', label: 'Unpaid', color: 'error' },\r\n  { status: 'toShip', label: 'To Ship', color: 'warning' },\r\n  { status: 'shipping', label: 'Shipping', color: 'processing' },\r\n];\r\n\r\nexport const custStatList = [\r\n  { status: 'active', label: 'Active', color: 'success' },\r\n  { status: 'suspended', label: 'Suspended', color: 'error' },\r\n];\r\n\r\nexport const voucherStatList = [\r\n  { status: 'active', label: 'Active', color: 'success' },\r\n  { status: 'scheduled', label: 'Scheduled', color: 'processing' },\r\n  { status: 'expired', label: 'Expired', color: 'error' },\r\n  { status: 'hidden', label: 'Hidden', color: 'default' },\r\n];\r\n\r\nexport const genderCat = [\r\n  { value: 'm', label: 'Male' },\r\n  { value: 'f', label: 'Female' },\r\n];\r\n\r\nexport const maritalStatCat = [\r\n  { value: 'single', label: 'Single' },\r\n  { value: 'married', label: 'Married' },\r\n  { value: 'seperated', label: 'Seperated' },\r\n  { value: 'divorced', label: 'Divorced' },\r\n];\r\n\r\nexport const custPositionCat = [\r\n  { value: 'agent', label: 'Agent' },\r\n  { value: 'drpshpr', label: 'Dropshipper' },\r\n];\r\n\r\nexport const custStatusCat = [\r\n  { value: 'active', label: 'Active' },\r\n  { value: 'suspended', label: 'Suspended' },\r\n];\r\nexport const discCat = [\r\n  { value: 'amount', label: 'Fixed Amount' },\r\n  { value: 'percentage', label: 'Percentage' },\r\n];\r\n\r\nexport const custCat = [\r\n  { label: 'Agent', value: 'agent' },\r\n  { label: 'Direct Customer', value: 'cust' },\r\n  { label: 'Dropshipper', value: 'drpshpr' },\r\n];\r\n\r\nexport const invInputOptions = [\r\n  {\r\n    value: '+',\r\n    label: <MdAdd size={20} />,\r\n  },\r\n  {\r\n    value: '-',\r\n    label: <MdRemove size={20} />,\r\n  },\r\n  {\r\n    value: 'set',\r\n    label: (\r\n      <Text strong style={{ color: 'white', padding: '0 12px' }}>\r\n        Set\r\n      </Text>\r\n    ),\r\n  },\r\n];\r\n","import React, { lazy, useState, Suspense } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Col from 'antd/es/col';\r\nimport Row from 'antd/es/row';\r\nimport Space from 'antd/es/space';\r\nimport Spin from 'antd/es/spin';\r\nimport Typography from 'antd/es/typography';\r\nimport Radio from 'antd/es/radio';\r\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\r\nimport { MdArrowRight, MdChevronRight } from 'react-icons/md';\r\nimport Layout from '@components/Layout';\r\nimport ColorCard from '@components/Card/ColorCard';\r\nimport Button from '@components/Button';\r\nimport Table from '@components/Table';\r\nimport Statistics from '@components/Statistics';\r\nimport Tag from '@components/Tag';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport toDoList from './toDoList';\r\nimport { dataYear, dataMonth, dataWeek, dataDay } from './salesData';\r\nimport statisticsData from './statisticsData';\r\nimport recentOrders from './recentOrders';\r\nimport topProduct from './topProducts';\r\nimport invAnalysis from './invAnalysis';\r\nimport './Dashboard.less';\r\nimport RankingList from '@components/List/RankingList';\r\nimport statisticsList from '@components/Statistics/statisticsList';\r\nimport { dateRangeOptions } from '@utils/optionUtils';\r\nimport { BoldTitle } from '@components/Title';\r\nimport axios from '@api/axiosInstance';\r\n\r\nconst LineChart = lazy(() => import('@components/Chart/LineChart'));\r\nconst MainCard = lazy(() => import('@components/Card/MainCard'));\r\nconst Dashboard = () => {\r\n  const { Text } = Typography;\r\n\r\n  const navigate = useNavigate();\r\n  const [salesDateRange, setSalesDateRange] = useState('year');\r\n\r\n  const getSalesData =\r\n    salesDateRange === 'month'\r\n      ? dataMonth.data\r\n      : salesDateRange === 'week'\r\n      ? dataWeek.data\r\n      : salesDateRange === 'day'\r\n      ? dataDay.data\r\n      : dataYear.data;\r\n\r\n  const getSalesDate =\r\n    salesDateRange === 'month'\r\n      ? dataMonth.month\r\n      : salesDateRange === 'week'\r\n      ? dataWeek.frmDate + ' - ' + dataWeek.toDate\r\n      : salesDateRange === 'day'\r\n      ? dataDay.date\r\n      : dataYear.year;\r\n\r\n  const getChartTitle = ['month', 'week'].includes(salesDateRange)\r\n    ? 'Day'\r\n    : salesDateRange === 'day'\r\n    ? 'Hour'\r\n    : 'Month';\r\n\r\n  const getChartTooltipTitlePrefix = salesDateRange === 'month' ? 'Day ' : '';\r\n\r\n  const getChartTooltipTitleSuffix = salesDateRange === 'day' ? ':00' : '';\r\n\r\n  const More = ({ route }: { route: string }) => (\r\n    <Button\r\n      type='link'\r\n      color='info'\r\n      onClick={() => navigate(findRoutePath(route))}\r\n      className='dashboard-more-btn center-flex'\r\n    >\r\n      More\r\n      <MdChevronRight size={23} style={{ position: 'relative', right: 3 }} />\r\n    </Button>\r\n  );\r\n\r\n  const recentOrderColumns: {\r\n    title: string;\r\n    dataIndex: string | string[];\r\n    key: string;\r\n    width: number;\r\n    align?: 'left' | 'center' | 'right';\r\n    render?: (status: string) => any;\r\n  }[] = [\r\n    {\r\n      title: 'Order ID',\r\n      dataIndex: 'orderID',\r\n      key: 'orderID',\r\n      width: 120,\r\n      render: (id: string) => <Text strong>{id}</Text>,\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'custName',\r\n      key: 'custName',\r\n      width: 300,\r\n    },\r\n    {\r\n      title: 'Customer Type',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      width: 140,\r\n    },\r\n    {\r\n      title: 'Order Time',\r\n      dataIndex: 'orderTime',\r\n      key: 'orderTime',\r\n      width: 160,\r\n    },\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'amount',\r\n      key: 'amount',\r\n      width: 140,\r\n      render: (amount: string) => (\r\n        <Text strong>RM {parseFloat(amount).toFixed(2)}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 170,\r\n      align: 'center' as const,\r\n      render: (status: string) => {\r\n        type OrderStatusTagProps = {\r\n          color: string;\r\n          children: React.ReactNode;\r\n        };\r\n        const OrderStatusTag = ({ color, children }: OrderStatusTagProps) => (\r\n          <Tag minWidth='80%' maxWidth='100%' color={color}>\r\n            {children}\r\n          </Tag>\r\n        );\r\n        return status === 'completed' ? (\r\n          <OrderStatusTag color='success'>Completed</OrderStatusTag>\r\n        ) : status === 'shipping' ? (\r\n          <OrderStatusTag color='processing'>Shipping</OrderStatusTag>\r\n        ) : status === 'toShip' ? (\r\n          <OrderStatusTag color='warning'>To Ship</OrderStatusTag>\r\n        ) : status === 'cancel' ? (\r\n          <OrderStatusTag color='error'>Cancelled</OrderStatusTag>\r\n        ) : null;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const invAnalysisColumns: {\r\n    title: string;\r\n    dataIndex: string | string[];\r\n    key: string;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    width?: string | number;\r\n    render?: (status: string) => any;\r\n  }[] = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: 'prodNm',\r\n      key: 'prodNm',\r\n      render: (text: string) => <Text strong>{text}</Text>,\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'stock',\r\n      key: 'stock',\r\n      align: 'center' as const,\r\n    },\r\n    {\r\n      title: 'ABC Grade',\r\n      dataIndex: 'ABC',\r\n      key: 'ABC',\r\n      align: 'center' as const,\r\n    },\r\n    {\r\n      title: 'HML Grade',\r\n      dataIndex: 'HML',\r\n      key: 'HML',\r\n      align: 'center' as const,\r\n    },\r\n    {\r\n      title: 'Reorder Point',\r\n      dataIndex: 'reorderPt',\r\n      key: 'reorderPt',\r\n      align: 'center' as const,\r\n    },\r\n    {\r\n      title: 'Optimal Order Quantity',\r\n      dataIndex: 'optimalOrderQty',\r\n      key: 'optimalOrderQty',\r\n      align: 'center' as const,\r\n    },\r\n  ];\r\n\r\n  const ToDoList = () => (\r\n    <MainCard bodyStyle={{ padding: '35px 35px' }}>\r\n      <Space direction='vertical' size={15} className='full-width'>\r\n        <BoldTitle level={5}>To Do List</BoldTitle>\r\n        <Row gutter={[30, 30]}>\r\n          {toDoList.map((toDoItem) => (\r\n            <Col\r\n              key={toDoItem.label}\r\n              flex='25%'\r\n              onClick={() => navigate(findRoutePath(toDoItem.link))}\r\n              className='dashboard-toDoList-col'\r\n            >\r\n              <ColorCard\r\n                backgroundColor='grey'\r\n                hover='success'\r\n                bodyStyle={{\r\n                  padding: '25px 12px 15px',\r\n                }}\r\n              >\r\n                <Space direction='vertical' size={15}>\r\n                  <BoldTitle\r\n                    level={5}\r\n                    type={toDoItem.quantity === 0 ? 'secondary' : undefined}\r\n                  >\r\n                    {toDoItem.quantity}\r\n                  </BoldTitle>\r\n                  <div>\r\n                    <Text className='dashboard-grey-text'>\r\n                      {toDoItem.label}\r\n                    </Text>\r\n                    <MdArrowRight\r\n                      size={19}\r\n                      className='dashboard-grey-text dashboard-right-arrow'\r\n                    />\r\n                  </div>\r\n                </Space>\r\n              </ColorCard>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const Sales = () => (\r\n    <MainCard>\r\n      <Space direction='vertical' size={5} className='full-width'>\r\n        <Row justify='space-between'>\r\n          <Col>\r\n            <BoldTitle level={5}>Sales</BoldTitle>\r\n          </Col>\r\n          <Col>\r\n            <More route='bizStatistics' />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify='space-between'>\r\n          <Col>\r\n            <Text className='dashboard-grey-text'>{getSalesDate}</Text>\r\n          </Col>\r\n          <Col>\r\n            <Radio.Group\r\n              buttonStyle='solid'\r\n              size='large'\r\n              style={{ marginRight: 30 }}\r\n              onChange={(e) => {\r\n                setSalesDateRange(e.target.value);\r\n                axios.get('admin/');\r\n              }}\r\n              value={salesDateRange}\r\n              options={dateRangeOptions}\r\n              optionType='button'\r\n            ></Radio.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ paddingTop: 15 }}>\r\n          <Suspense\r\n            fallback={\r\n              <div className='center-flex full-height full-width'>\r\n                <Spin\r\n                  indicator={<LoadingOutlined style={{ fontSize: 30 }} spin />}\r\n                />\r\n              </div>\r\n            }\r\n          >\r\n            <Space direction='vertical' className='full-width' size={20}>\r\n              <Text strong type='secondary'>\r\n                RM\r\n              </Text>\r\n              <LineChart\r\n                data={getSalesData}\r\n                titleX={getChartTitle}\r\n                tooltipName='Total Sales'\r\n                tooltipTitlePrefix={getChartTooltipTitlePrefix}\r\n                tooltipTitleSuffix={getChartTooltipTitleSuffix}\r\n                tooltipValPrefix='RM '\r\n                toFixed={2}\r\n              />\r\n            </Space>\r\n          </Suspense>\r\n        </Row>\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const StatisticsDashboard = () => (\r\n    <MainCard>\r\n      <BoldTitle level={5}>Statistics</BoldTitle>\r\n\r\n      <Text className='dashboard-grey-text'>{statisticsData.date}</Text>\r\n\r\n      <Space\r\n        direction={'vertical'}\r\n        size={20}\r\n        style={{ width: '100%', paddingTop: 25 }}\r\n      >\r\n        {statisticsList.map((statistics) => (\r\n          <Statistics\r\n            key={statistics.key}\r\n            title={statistics.title}\r\n            icon={statistics.icon}\r\n            color={statistics.color}\r\n            value={statisticsData[statistics.key]}\r\n            prefix={statistics.prefix}\r\n            suffix={statistics.suffix}\r\n            toFixed={statistics.toFixed}\r\n          />\r\n        ))}\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const RecentOrder = () => (\r\n    <MainCard>\r\n      <Space direction='vertical' size={15} className='full-width'>\r\n        <Row justify='space-between'>\r\n          <Col>\r\n            <Row>\r\n              <BoldTitle level={5}>Recent Orders</BoldTitle>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <More route='orderMgmt' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            dataSource={recentOrders}\r\n            columns={recentOrderColumns}\r\n            pagination={false}\r\n            scroll={{ x: 1000 }}\r\n          ></Table>\r\n        </Row>\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const TopProducts = () => (\r\n    <MainCard>\r\n      <Space direction='vertical' size={5} className='full-width'>\r\n        <div>\r\n          <Row justify='space-between'>\r\n            <Col>\r\n              <BoldTitle level={5}>Top Products</BoldTitle>\r\n            </Col>\r\n            <Col>\r\n              <More route='bizStatistics' />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Text className='dashboard-grey-text'>{topProduct.date}</Text>\r\n          </Row>\r\n        </div>\r\n        <RankingList dataSource={topProduct} />\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const InvAnalysis = () => (\r\n    <MainCard>\r\n      <Space direction='vertical' size={30} className='full-width'>\r\n        <Row justify='space-between'>\r\n          <Col>\r\n            <Row>\r\n              <BoldTitle level={5}>Inventory Analysis</BoldTitle>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <More route='orderMgmt' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            dataSource={invAnalysis}\r\n            columns={invAnalysisColumns}\r\n            pagination={false}\r\n            scroll={{ x: 800 }}\r\n          ></Table>\r\n        </Row>\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='dashboard'>\r\n        <ToDoList />\r\n        <Sales />\r\n        <Row justify='center' gutter={[30, 20]}>\r\n          <Col span={7}>\r\n            <StatisticsDashboard />\r\n          </Col>\r\n          <Col span={17}>\r\n            <RecentOrder />\r\n          </Col>\r\n        </Row>\r\n        <Row justify='center' gutter={[30, 20]}>\r\n          <Col span={9}>\r\n            <TopProducts />\r\n          </Col>\r\n          <Col span={15}>\r\n            <InvAnalysis />\r\n          </Col>\r\n        </Row>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { Col, ColProps } from 'antd';\r\n\r\nexport interface FilterInputColProps extends ColProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst FilterInputCol = (props: FilterInputColProps) => (\r\n  <Col span={12} {...props}>\r\n    {props.children}\r\n  </Col>\r\n);\r\n\r\nexport default FilterInputCol;\r\n","import {\r\n  Input,\r\n  InputNumber,\r\n  InputNumberProps,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormItemProps,\r\n} from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport './InputNumberRange.less';\r\n\r\nexport interface InputNumberRangeProps\r\n  extends Omit<\r\n    InputNumberProps,\r\n    | 'placeholder'\r\n    | 'addonBefore'\r\n    | 'addonAfter'\r\n    | 'value'\r\n    | 'defaultValue'\r\n    | 'onChange'\r\n  > {\r\n  label?: string;\r\n  placeholder?: string[];\r\n  textSpan?: number;\r\n  justify?: 'start' | 'end';\r\n  disabled?: boolean;\r\n  value?: number[];\r\n  onChange?: (value: number) => void;\r\n  formProps?: FormItemProps;\r\n}\r\n\r\ntype AdvInputNumberRangeProps = InputNumberRangeProps &\r\n  (\r\n    | {\r\n        prefix?: never;\r\n        prefixWidth?: never;\r\n      }\r\n    | {\r\n        prefix: string;\r\n        prefixWidth?: number | string;\r\n      }\r\n  ) &\r\n  (\r\n    | {\r\n        suffix?: never;\r\n        suffixWidth?: never;\r\n      }\r\n    | {\r\n        suffix: string;\r\n        suffixWidth?: number | string;\r\n      }\r\n  );\r\n\r\nconst InputNumberRange = ({\r\n  label,\r\n  justify = 'end',\r\n  placeholder = ['', ''],\r\n  textSpan = 5,\r\n  prefix,\r\n  suffix,\r\n  prefixWidth = prefix !== undefined ? 80 : 0,\r\n  suffixWidth = suffix !== undefined ? 80 : 0,\r\n  disabled = false,\r\n  value,\r\n  formProps,\r\n  onChange = () => '',\r\n  className,\r\n  ...props\r\n}: AdvInputNumberRangeProps) => {\r\n  const { Text } = Typography;\r\n  const inputNumWidth = `calc((100% - (28px + ${prefixWidth}px + ${suffixWidth}px)) / 2)`;\r\n  const [start, setStart] = useState<number>(undefined);\r\n  const [end, setEnd] = useState<number>(undefined);\r\n  const [validateFailed, setValidateFailed] = useState(false);\r\n  const { name, ...formPropsSpread } = formProps !== undefined && formProps;\r\n\r\n  useEffect(() => {\r\n    if (start > end) {\r\n      setValidateFailed(true);\r\n    } else {\r\n      setValidateFailed(false);\r\n    }\r\n  }, [end, start]);\r\n\r\n  return (\r\n    <Form.Item\r\n      {...formPropsSpread}\r\n      validateStatus={validateFailed && 'error'}\r\n      help={\r\n        validateFailed && (\r\n          <Row>\r\n            <Col\r\n              push={textSpan}\r\n              span={24 - textSpan}\r\n              style={{ textAlign: 'center' }}\r\n            >\r\n              Starting value should be smaller than ending value.\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n    >\r\n      <Row\r\n        align='middle'\r\n        gutter={30}\r\n        className={`input-range${validateFailed ? ' input-range-error' : ''}`}\r\n      >\r\n        {label !== undefined && (\r\n          <Col\r\n            span={textSpan}\r\n            className={justify === 'start' ? '' : 'justify-end'}\r\n          >\r\n            <Text type='secondary'>{label}</Text>\r\n          </Col>\r\n        )}\r\n        <Col span={24 - textSpan}>\r\n          <Input.Group compact>\r\n            {prefix !== undefined && (\r\n              <Input\r\n                value={prefix}\r\n                disabled\r\n                style={{ width: prefixWidth }}\r\n                className='input-range-prefix color-grey'\r\n              />\r\n            )}\r\n            <Form.Item\r\n              name={formProps && `min_${formProps.name}`}\r\n              noStyle\r\n              getValueProps={(value) => {\r\n                setStart(value);\r\n                return null;\r\n              }}\r\n            >\r\n              <InputNumber\r\n                value={value && value[0]}\r\n                placeholder={placeholder[0]}\r\n                disabled={disabled}\r\n                style={{\r\n                  width: inputNumWidth,\r\n                }}\r\n                className={`input-range-left${\r\n                  className !== undefined ? ` ${className}` : ''\r\n                }`}\r\n                {...props}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Input\r\n              style={{ width: 30 }}\r\n              value='-'\r\n              disabled={disabled}\r\n              className='input-range-splitter'\r\n            />\r\n            <Form.Item\r\n              name={formProps && `max_${formProps.name}`}\r\n              noStyle\r\n              getValueProps={(value) => {\r\n                setEnd(value);\r\n                return null;\r\n              }}\r\n            >\r\n              <InputNumber\r\n                value={value && value[1]}\r\n                placeholder={placeholder[1]}\r\n                disabled={disabled}\r\n                style={{\r\n                  width: inputNumWidth,\r\n                }}\r\n                className={`input-range-right${\r\n                  className !== undefined ? ` ${className}` : ''\r\n                }`}\r\n                {...props}\r\n              />\r\n            </Form.Item>\r\n\r\n            {suffix !== undefined && (\r\n              <Input\r\n                value={suffix}\r\n                disabled\r\n                style={{ width: suffixWidth }}\r\n                className='input-range-suffix color-grey'\r\n              />\r\n            )}\r\n          </Input.Group>\r\n        </Col>\r\n      </Row>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default InputNumberRange;\r\n","import { Form, FormItemProps, Input, InputProps as AntdInputProps, Select } from 'antd';\r\nimport { useState } from 'react';\r\n\r\ninterface OnSelectProps {\r\n  type: string;\r\n  value: string;\r\n}\r\n\r\nexport interface InputProps extends Omit<AntdInputProps, 'onChange'> {\r\n  width?: number | string;\r\n  selectBefore?: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  };\r\n  selectAfter?: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  };\r\n  selectWidth?: number | string;\r\n  onChange?: (selected: OnSelectProps) => void;\r\n  formProps?: FormItemProps;\r\n}\r\n\r\nconst InputSelect = ({\r\n  width = '100%',\r\n  selectBefore,\r\n  selectAfter,\r\n  selectWidth = 'fit-content',\r\n  onChange = () => null,\r\n  formProps,\r\n  ...props\r\n}: InputProps) => {\r\n  const [selectType, setSelectType] = useState(selectBefore.defaultVal);\r\n  const inputSelectBefore = selectBefore !== undefined && (\r\n    <Select\r\n      defaultValue={selectBefore?.defaultVal}\r\n      options={selectBefore.options}\r\n      style={{ width: selectWidth }}\r\n      onSelect={(value) => setSelectType(value)}\r\n    />\r\n  );\r\n\r\n  const inputSelectAfter = selectAfter !== undefined && (\r\n    <Select\r\n      defaultValue={selectAfter?.defaultVal}\r\n      options={selectAfter.options}\r\n      style={{ width: selectWidth }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Form.Item {...formProps}>\r\n      <Input\r\n        addonBefore={inputSelectBefore}\r\n        addonAfter={inputSelectAfter}\r\n        style={{ width: width }}\r\n        onChange={(e) => onChange({ type: selectType, value: e.target.value })}\r\n        {...props}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default InputSelect;\r\n","import {\r\n  Col,\r\n  Form,\r\n  FormItemProps,\r\n  Row,\r\n  Select,\r\n  SelectProps,\r\n  Typography,\r\n} from 'antd';\r\n\r\nexport interface SelectLabelProps extends SelectProps<any> {\r\n  label: string;\r\n  select: {\r\n    placeholder: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  };\r\n  textSpan?: number;\r\n  justify?: 'start' | 'end';\r\n  formProps?: FormItemProps;\r\n  onSelect?: (selected: string) => void;\r\n}\r\n\r\nconst SelectWithLabel = ({\r\n  label,\r\n  select,\r\n  textSpan = 5,\r\n  justify = 'end',\r\n  className,\r\n  onSelect = () => null,\r\n  formProps,\r\n  ...props\r\n}: SelectLabelProps) => {\r\n  const { Text } = Typography;\r\n\r\n  return (\r\n    <Form.Item {...formProps}>\r\n      <Row align='middle' gutter={30} className='input-select-label'>\r\n        <Col\r\n          span={textSpan}\r\n          className={justify === 'start' ? '' : 'justify-end'}\r\n        >\r\n          <Text type='secondary'>{label}</Text>\r\n        </Col>\r\n        <Col span={24 - textSpan}>\r\n          <Select\r\n            placeholder={select.placeholder}\r\n            options={select.options}\r\n            allowClear\r\n            className={`full-width${\r\n              className !== undefined ? ` ${className}` : ''\r\n            }`}\r\n            onClear={() => onSelect(null)}\r\n            onSelect={(selected) => onSelect(selected)}\r\n            {...props}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default SelectWithLabel;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { prodCat } from '@utils/optionUtils';\r\nimport { Button, Col, Form, Row, Space } from 'antd';\r\nimport { useForm } from 'antd/es/form/Form';\r\nimport { useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport interface FilterInputsProps {\r\n  loading?: boolean;\r\n}\r\n\r\nconst FilterInputs = (props: FilterInputsProps) => {\r\n  const [prodFilter] = useForm();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const prodInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'name',\r\n    options: [\r\n      { value: 'name', label: 'Product Name' },\r\n      { value: 'sku', label: 'Product SKU' },\r\n    ],\r\n  };\r\n\r\n  const prodCatSelect = {\r\n    placeholder: 'Select Category',\r\n    options: prodCat,\r\n  };\r\n\r\n  const [selectedInputSelect, setSelectedInputSelect] = useState(\r\n    prodInputSelect.defaultVal\r\n  );\r\n\r\n  const handleSearch = (values) => {\r\n    Object.keys(values).forEach(\r\n      (key) => values[key] === undefined && delete values[key]\r\n    );\r\n\r\n    setSearchParams(\r\n      searchParams.get('status') !== null\r\n        ? {\r\n            status: searchParams.get('status'),\r\n            ...values,\r\n          }\r\n        : values\r\n    );\r\n  };\r\n  const handleReset = () => {\r\n    setSearchParams(\r\n      searchParams.get('status') !== null\r\n        ? {\r\n            status: searchParams.get('status'),\r\n          }\r\n        : {}\r\n    );\r\n    prodFilter.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Form name='prodFilter' form={prodFilter} onFinish={handleSearch}>\r\n      <Space direction='vertical' size={20} className='full-width'>\r\n        <Row gutter={[30, 30]}>\r\n          <FilterInputCol>\r\n            <InputSelect\r\n              formProps={{ name: selectedInputSelect }}\r\n              selectBefore={prodInputSelect}\r\n              placeholder='Input'\r\n              selectWidth={150}\r\n              onChange={(selected) => {\r\n                prodFilter.setFieldsValue({ [selected.type]: selected.value });\r\n                setSelectedInputSelect(selected.type);\r\n              }}\r\n            />\r\n          </FilterInputCol>\r\n          <FilterInputCol>\r\n            <SelectWithLabel\r\n              formProps={{ name: 'category' }}\r\n              label='Category'\r\n              select={prodCatSelect}\r\n              onSelect={(value) => {\r\n                prodFilter.setFieldsValue({ category: value });\r\n              }}\r\n            />\r\n          </FilterInputCol>\r\n          <FilterInputCol>\r\n            <InputNumberRange\r\n              formProps={{ name: 'stock' }}\r\n              label='Stock'\r\n              placeholder={['Start', 'End']}\r\n              min={0}\r\n              justify='start'\r\n              textSpan={4}\r\n              disabled={searchParams.get('status') === 'oos'}\r\n              onChange={(value) => {\r\n                prodFilter.setFieldsValue({ stock: value });\r\n              }}\r\n            />\r\n          </FilterInputCol>\r\n          <FilterInputCol>\r\n            <InputNumberRange\r\n              formProps={{ name: 'price' }}\r\n              label='Price'\r\n              placeholder={['Start', 'End']}\r\n              prefix='RM'\r\n              prefixWidth={60}\r\n              min={0}\r\n              precision={2}\r\n              onChange={(value) => {\r\n                prodFilter.setFieldsValue({ price: value });\r\n              }}\r\n            />\r\n          </FilterInputCol>\r\n        </Row>\r\n        <Row gutter={20}>\r\n          <Col>\r\n            <Button type='primary' htmlType='submit'>\r\n              Search\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Col>\r\n        </Row>\r\n      </Space>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","export const parseURL = (url: URLSearchParams) => Object.fromEntries(url);\r\n\r\nexport const addSearchParams = (\r\n  currParams: URLSearchParams,\r\n  newParams: { [key: string]: any }\r\n) => {\r\n  return { ...parseURL(currParams), ...newParams };\r\n};\r\n\r\nexport const removeSearchparams = (\r\n  currParams: URLSearchParams,\r\n  removeKey: string\r\n) => {\r\n  currParams.delete(removeKey);\r\n  return parseURL(currParams);\r\n};\r\n\r\nexport const addFilter = (currFilter, newKey: string, newValue) => {\r\n  if (!(newValue === undefined || newValue === null || newValue === ''))\r\n    return { ...currFilter, [newKey]: newValue };\r\n  else {\r\n    delete currFilter[newKey];\r\n    return currFilter;\r\n  }\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Col, Row, Typography, Space, TablePaginationConfig } from 'antd';\r\nimport './InformativeTable.less';\r\nimport { ButtonType } from '@components/Button';\r\nimport Table, { TableProps } from '@components/Table';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { addSearchParams, removeSearchparams } from '@utils/urlUtls';\r\n\r\ntype InformativeTableButtonProps = {\r\n  element: ButtonType;\r\n  key: string;\r\n  fltr?: {\r\n    fld: string;\r\n    value: string | number | undefined;\r\n    rel: 'eq' | 'neq' | 'gt' | 'gte' | 'lt' | 'lte'; //Relational Operator\r\n  }[];\r\n}[];\r\n\r\ntype InformativeTableProps = TableProps & {\r\n  defPg?: number;\r\n  totalRecord?: number;\r\n} & (\r\n    | {\r\n        buttons: InformativeTableButtonProps;\r\n        rowSelectable?: never | true;\r\n        onSelectChange?: (selectedRowKeys: string[]) => void;\r\n      }\r\n    | { buttons?: never; rowSelectable: false; onSelectChange?: never }\r\n  );\r\n\r\nconst InformativeTable = ({\r\n  defPg = 10,\r\n  buttons,\r\n  rowSelectable = true,\r\n  onSelectChange = () => '',\r\n  totalRecord,\r\n  ...props\r\n}: InformativeTableProps) => {\r\n  const { Text } = Typography;\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState();\r\n  const [selectedRowCount, setSelectedRowCount] = useState(0);\r\n  const [pagination, setPagination] = useState<TablePaginationConfig>();\r\n  const [btnShow, setBtnShow] = useState<Array<{ key: string; show: boolean }>>(\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (pagination !== undefined) {\r\n      if (pagination.current > 1) {\r\n        setSearchParams(\r\n          addSearchParams(searchParams, {\r\n            limit: String(pagination.pageSize),\r\n            offset: (pagination.current - 1) * pagination.pageSize,\r\n          })\r\n        );\r\n      } else {\r\n        setSearchParams(\r\n          removeSearchparams(\r\n            new URLSearchParams(\r\n              addSearchParams(searchParams, {\r\n                limit: String(pagination.pageSize),\r\n              })\r\n            ),\r\n            'offset'\r\n          )\r\n        );\r\n      }\r\n    } else\r\n      setSearchParams(addSearchParams(searchParams, { limit: String(defPg) }));\r\n  }, [defPg, pagination, searchParams, setSearchParams]);\r\n\r\n  const hanldeTableChange = (paginate, _filters, sorter) => {\r\n    setPagination(paginate);\r\n    if (sorter['column'] !== undefined) {\r\n      let currSearchParams = {};\r\n      searchParams.forEach((value, key) => {\r\n        currSearchParams = {\r\n          ...currSearchParams,\r\n          [key]: value,\r\n        };\r\n      });\r\n      setSearchParams({\r\n        ...currSearchParams,\r\n        order: `${sorter['order'] === 'descend' ? '-' : ''}${\r\n          sorter['columnKey']\r\n        }`,\r\n      });\r\n    } else {\r\n      let currSearchParams = {};\r\n      searchParams.forEach((value, key) => {\r\n        currSearchParams = {\r\n          ...currSearchParams,\r\n          [key]: value,\r\n        };\r\n      });\r\n      delete currSearchParams['order'];\r\n      setSearchParams(currSearchParams);\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (selectedRowKeys: any, selectedRows: any) => {\r\n    if (buttons !== undefined) {\r\n      let buttonShow: { key: string; show: boolean }[] = [];\r\n\r\n      buttons.forEach((btn: any) =>\r\n        selectedRows.forEach((selected: any) => {\r\n          const btnShowCondition = !buttonShow.find(\r\n            (btnToShow) => btnToShow.key === btn.key && !btnToShow.show\r\n          );\r\n          if (\r\n            btn.fltr !== undefined &&\r\n            btn.fltr\r\n              .map(\r\n                (filter: any) =>\r\n                  (filter.rel === 'eq' &&\r\n                    selected[filter.fld] === filter.value) ||\r\n                  (filter.rel === 'neq' &&\r\n                    selected[filter.fld] !== filter.value) ||\r\n                  (filter.rel === 'gt' &&\r\n                    selected[filter.fld] > filter.value) ||\r\n                  (filter.rel === 'gte' &&\r\n                    selected[filter.fld] >= filter.value) ||\r\n                  (filter.rel === 'lt' &&\r\n                    selected[filter.fld] < filter.value) ||\r\n                  (filter.rel === 'lte' && selected[filter.fld] <= filter.value)\r\n              )\r\n              .includes(false)\r\n          ) {\r\n            if (btnShowCondition)\r\n              buttonShow = [\r\n                ...buttonShow.filter((btnToShow) => btnToShow.key !== btn.key),\r\n                { key: btn.key, show: false },\r\n              ];\r\n          } else {\r\n            if (btnShowCondition)\r\n              buttonShow = [\r\n                ...buttonShow.filter((btnToShow) => btnToShow.key !== btn.key),\r\n                { key: btn.key, show: true },\r\n              ];\r\n          }\r\n        })\r\n      );\r\n      setBtnShow([...buttonShow]);\r\n    }\r\n    setSelectedRowKeys(selectedRowKeys);\r\n    setSelectedRowCount(selectedRowKeys.length);\r\n    onSelectChange(selectedRowKeys);\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: handleSelectChange,\r\n  };\r\n\r\n  const showTotal = (total: number) => {\r\n    return `Total ${total} items`;\r\n  };\r\n\r\n  return (\r\n    <Space\r\n      direction='vertical'\r\n      size={20}\r\n      className='informative-table full-width'\r\n    >\r\n      {rowSelectable && (\r\n        <Row align='middle' gutter={20} style={{ height: 36 }}>\r\n          <Col flex='100px'>\r\n            <Text>Selected: {selectedRowCount}</Text>\r\n          </Col>\r\n          <Col>\r\n            <Space size={15}>\r\n              {buttons?.map((btn, index) => {\r\n                const Button = btn.element;\r\n                return (\r\n                  btnShow.map(\r\n                    (btnToShow) => btnToShow.key === btn.key && btnToShow.show\r\n                  )[index] && <Button key={`table-btn-${index}`} />\r\n                );\r\n              })}\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Table\r\n          rowSelection={rowSelectable && rowSelection}\r\n          pagination={{\r\n            size: 'small',\r\n            showTotal: showTotal,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultPageSize: defPg,\r\n            pageSizeOptions: ['5', '10', '15', '20'],\r\n            total: totalRecord,\r\n          }}\r\n          onChange={hanldeTableChange}\r\n          {...props}\r\n        />\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default InformativeTable;\r\nexport type { InformativeTableButtonProps };\r\n","const prodTabList = [\r\n  { key: 'all', tab: 'All' },\r\n  { key: 'active', tab: 'Active' },\r\n  { key: 'oos', tab: 'Out of Stock' },\r\n  { key: 'hidden', tab: 'Hidden' },\r\n];\r\n\r\nexport default prodTabList;\r\n","export const moneyFormatter = (num: number, numOnly: boolean = false) => {\r\n  let value = '';\r\n  if (num >= 1000 && num < 1000000) {\r\n    value = (num / 1000).toFixed(1) + 'K'; // convert to K for number from > 1000 < 1 million\r\n  } else if (num > 1000000) {\r\n    value = (num / 1000000).toFixed(1) + 'M'; // convert to M for number from > 1 million\r\n  } else {\r\n    value = num.toFixed(2); // if value < 1000, nothing to do\r\n  }\r\n\r\n  return numOnly === true ? value : `RM ${value}`;\r\n};\r\n\r\nexport const percentFormatter = (\r\n  num: number,\r\n  numOnly: boolean = false,\r\n  toFixed: number = 2\r\n) => {\r\n  let value = (num * 100).toFixed(toFixed);\r\n  return numOnly === true ? value : `${value} %`;\r\n};\r\n\r\n","import { HiThumbUp } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst AcceptButton = ({ children = 'Accept', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<HiThumbUp size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AcceptButton;\r\n","import { HiCheckCircle } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst ActivateButton = ({ children = 'Activate', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<HiCheckCircle size={16} style={{ marginRight: 3 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ActivateButton;\r\n","import { ReactComponent as BulkEditIcon } from '@assets/Icons/BulkEditIcon.svg';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst BulkEditButton = ({\r\n  children = 'Bulk Updates',\r\n  ...props\r\n}: Omit<ButtonProps, 'type'>) => {\r\n  return (\r\n    <Button\r\n      type='primary'\r\n      icon={<BulkEditIcon style={{ marginRight: 5 }} fill='white' />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BulkEditButton;\r\n","import { HiTrash } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst DeleteButton = ({ children = 'Delete', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      color='error'\r\n      icon={<HiTrash size={16} style={{ marginRight: 3 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { HiPencilAlt } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst EditButton = ({ children = 'Edit', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<HiPencilAlt size={16} style={{ marginRight: 3 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default EditButton;\r\n","import { HiEyeOff } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst HideButton = ({ children = 'Hide', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      color='grey'\r\n      icon={<HiEyeOff size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default HideButton;\r\n","import { HiPrinter } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst PrintButton = ({ children = 'Invoice', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<HiPrinter size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default PrintButton;\r\n","import { HiThumbDown } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst RejectButton = ({ children = 'Reject', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      color='error'\r\n      icon={<HiThumbDown size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default RejectButton;\r\n","import { HiPause } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst SuspendButton = ({ children = 'Suspend', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      color='error'\r\n      icon={<HiPause size={16} style={{ marginRight: 3 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SuspendButton;\r\n","import { Dropdown, Menu, Row } from 'antd';\r\nimport { MdArrowDropDown } from 'react-icons/md';\r\nimport Tag, { TagProps } from '..';\r\n\r\nexport interface StatusTagProps extends TagProps {\r\n  status: string;\r\n  statusList: { status: string; label: string; color: string }[];\r\n  dropdownStatus?: string[];\r\n  onDropdownSelect?: (selectedStatus: string) => void;\r\n}\r\n\r\nconst StatusTag = ({\r\n  status,\r\n  statusList,\r\n  dropdownStatus,\r\n  onDropdownSelect = () => '',\r\n  ...props\r\n}: StatusTagProps) => {\r\n  const menu = (\r\n    <Menu onClick={(item) => onDropdownSelect(item.key)}>\r\n      {statusList.map(\r\n        (statusItem) =>\r\n          !(\r\n            status === statusItem.status ||\r\n            !dropdownStatus?.includes(statusItem.status)\r\n          ) && <Menu.Item key={statusItem.status}>{statusItem.label}</Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  const matchedStatus = statusList.find(\r\n    (statusItem) => status === statusItem.status\r\n  );\r\n\r\n  return dropdownStatus?.includes(matchedStatus.status) ? (\r\n    <Row align='middle'>\r\n      <Tag\r\n        minWidth='70%'\r\n        maxWidth='100%'\r\n        color={matchedStatus.color}\r\n        {...props}\r\n      >\r\n        {matchedStatus.label}\r\n      </Tag>\r\n      <Dropdown overlay={menu} placement='bottomRight'>\r\n        <MdArrowDropDown size={25} style={{ cursor: 'pointer' }} />\r\n      </Dropdown>\r\n    </Row>\r\n  ) : (\r\n    <Tag minWidth='70%' maxWidth='100%' color={matchedStatus.color} {...props}>\r\n      {matchedStatus.label}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default StatusTag;\r\n","import Button, { ButtonProps } from '@components/Button';\r\nimport { Col, List, ListProps, Row, Typography } from 'antd';\r\nimport { TextProps } from 'antd/es/typography/Text';\r\nimport { TitleProps } from 'antd/es/typography/Title';\r\n\r\nexport interface DescriptionListDataProps {\r\n  key: string;\r\n  title: string;\r\n  desc?: string;\r\n  content?: React.ReactNode;\r\n  icon?: React.ReactNode;\r\n};\r\n\r\nexport type TitleTextProps = TextProps | TitleProps;\r\n\r\n\r\nexport interface DescriptionListProps extends Omit<ListProps<any>, 'dataSource'> {\r\n  dataSource: DescriptionListDataProps[];\r\n  buttons?: string[];\r\n  buttonProps?: ButtonProps;\r\n  titleProps?: TextProps | TitleProps;\r\n  descProps?: TextProps | TitleProps;\r\n  onButtonClick?: (key: string) => void;\r\n}\r\n\r\nconst DescriptionList = ({\r\n  dataSource,\r\n  buttons,\r\n  onButtonClick = () => '',\r\n  buttonProps,\r\n  titleProps,\r\n  descProps,\r\n  ...props\r\n}: DescriptionListProps) => {\r\n  const { Text } = Typography;\r\n\r\n  const actions = (item) =>\r\n    buttons.map((btn) => (\r\n      <Button\r\n        key={item.key}\r\n        onClick={() => onButtonClick(item.key)}\r\n        {...buttonProps}\r\n      >\r\n        {btn}\r\n      </Button>\r\n    ));\r\n\r\n  const renderItem = (item: {\r\n    title: string;\r\n    desc?: string;\r\n    content: React.ReactNode;\r\n    icon: React.ReactNode;\r\n  }) => (\r\n    <List.Item actions={buttons !== undefined && actions(item)}>\r\n      <Row className='full-width' align='middle'>\r\n        <Col span={item.content !== undefined ? 5 : 24}>\r\n          <List.Item.Meta\r\n            avatar={item.icon}\r\n            title={\r\n              <Text className='text-lg' {...titleProps}>\r\n                {item.title}\r\n              </Text>\r\n            }\r\n            description={\r\n              <Text type='secondary' {...descProps}>\r\n                {item.desc}\r\n              </Text>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <div>{item.content}</div>\r\n        </Col>\r\n      </Row>\r\n    </List.Item>\r\n  );\r\n  return <List dataSource={dataSource} renderItem={renderItem} {...props} />;\r\n};\r\n\r\nexport default DescriptionList;\r\n","import React, { memo } from 'react';\r\nimport { Avatar, Col, Row, Space, Typography } from 'antd';\r\nimport Button from '@components/Button';\r\nimport classNames from 'classnames';\r\nimport DescriptionList, {\r\n  DescriptionListDataProps,\r\n  TitleTextProps,\r\n} from '@components/List/DescriptionList';\r\n\r\nexport interface ActionContentProps {\r\n  label: string;\r\n  Icon: (props: any) => JSX.Element;\r\n  okText?: string;\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n  color?: 'success' | 'warning' | 'error' | 'info' | 'grey';\r\n  loading?: boolean;\r\n  children?: React.ReactNode;\r\n  recordType?: string;\r\n  dataSource?: DescriptionListDataProps[];\r\n  titleProps?: TitleTextProps;\r\n  descProps?: TitleTextProps;\r\n  multi?: boolean;\r\n}\r\n\r\nconst Content = memo(\r\n  (\r\n    {\r\n      label,\r\n      Icon,\r\n      okText = 'OK',\r\n      onOk = () => '',\r\n      onCancel = () => '',\r\n      color,\r\n      loading,\r\n      children,\r\n      dataSource,\r\n      recordType,\r\n      titleProps,\r\n      descProps,\r\n      multi,\r\n      ...props\r\n    }: ActionContentProps,\r\n    ref\r\n  ) => {\r\n    const { Title } = Typography;\r\n\r\n    return (\r\n      <Space direction='vertical' size={20} className='full-width'>\r\n        <Space size={15}>\r\n          <Avatar\r\n            size={40}\r\n            icon={\r\n              <Icon\r\n                className={`color-${color === undefined ? 'primary' : color}`}\r\n              />\r\n            }\r\n            className={classNames(\r\n              'center-flex',\r\n              { 'bg-red-200': color === 'error' },\r\n              { 'bg-blue-200': color === 'info' },\r\n              { 'bg-yellow-200': color === 'warning' },\r\n              { 'bg-grey-200': color === 'grey' },\r\n              {\r\n                'bg-green-200': color === 'success' || color === undefined,\r\n              }\r\n            )}\r\n          />\r\n          <Title level={4}>{label}</Title>\r\n        </Space>\r\n        {children}\r\n        {multi && (\r\n          <DescriptionList\r\n            dataSource={dataSource}\r\n            bordered\r\n            titleProps={{ style: { fontSize: 14 }, ...titleProps }}\r\n            descProps={descProps}\r\n          />\r\n        )}\r\n        <Row gutter={20} justify='end'>\r\n          <Col>\r\n            <Button color={color} onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              type='primary'\r\n              color={color}\r\n              loading={loading}\r\n              onClick={onOk}\r\n            >\r\n              {okText}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Space>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Content;\r\n","import {\r\n  DescriptionListDataProps,\r\n  TitleTextProps,\r\n} from '@components/List/DescriptionList';\r\nimport { Modal as AntdModal, ModalProps } from 'antd';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport DeleteModal from './DeleteModal';\r\nimport HideModal from './HideModal';\r\n\r\nexport type ActionModalPayload = {\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n  multiItem?: boolean;\r\n};\r\n\r\nexport const ActionModalComponent = {\r\n  delete: DeleteModal,\r\n  hide: HideModal,\r\n};\r\n\r\nexport type ActionModalType = 'delete' | 'hide';\r\n\r\nexport interface ActionModalContentProps {\r\n  recordType?: string;\r\n  loading?: boolean;\r\n  dataSource?: DescriptionListDataProps[];\r\n  titleProps?: TitleTextProps;\r\n  descProps?: TitleTextProps;\r\n  multi?: boolean;\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nexport type ActionModalProps = Omit<ModalProps, 'onOk' | 'onCancel'> &\r\n  ActionModalContentProps;\r\n\r\ntype ActionModalReturnProps = React.FC<Partial<ActionModalProps>> & {\r\n  show?: (\r\n    type: ActionModalType,\r\n    ActionModalPayload?: ActionModalPayload\r\n  ) => void;\r\n};\r\n\r\nconst ActionModal: ActionModalReturnProps = memo(\r\n  (\r\n    {\r\n      recordType = 'record',\r\n      dataSource,\r\n      titleProps,\r\n      descProps,\r\n      multi,\r\n      ...props\r\n    }: ActionModalProps,\r\n    _ref\r\n  ) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [multiItem, setMultiItem] = useState(false);\r\n    const [modalType, setModalType] = useState<ActionModalType>(null);\r\n    const payloadRef = useRef<ActionModalPayload>({});\r\n\r\n    useEffect(() => {\r\n      ActionModal.show = (\r\n        type: ActionModalType,\r\n        { multiItem = false, ...payload }: ActionModalPayload\r\n      ) => {\r\n        setVisible(true);\r\n        setModalType(type);\r\n        multiItem ? setMultiItem(true) : setMultiItem(false);\r\n        payloadRef.current = payload;\r\n      };\r\n    }, []);\r\n\r\n    const handleOk = (method?: () => void) => () => {\r\n      let loadParentFunc = async () => {\r\n        setLoading(true);\r\n        return method && method();\r\n      };\r\n      loadParentFunc().then(() => setVisible(false));\r\n    };\r\n\r\n    const handleCancel = (method?: () => void) => () => {\r\n      method && method();\r\n      setVisible(false);\r\n    };\r\n\r\n    const renderModal = () => {\r\n      const ModalRender = ActionModalComponent[modalType]\r\n        ? ActionModalComponent[modalType]\r\n        : null;\r\n      return (\r\n        <ModalRender\r\n          recordType={recordType}\r\n          loading={loading}\r\n          dataSource={dataSource}\r\n          titleProps={titleProps}\r\n          descProps={descProps}\r\n          multi={multiItem}\r\n          onOk={handleOk(payloadRef.current?.onOk)}\r\n          onCancel={handleCancel(payloadRef.current?.onCancel)}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <AntdModal\r\n        visible={visible}\r\n        onOk={handleOk(payloadRef.current?.onOk)}\r\n        onCancel={handleCancel(payloadRef.current?.onCancel)}\r\n        afterClose={() => setLoading(false)}\r\n        footer={null}\r\n        bodyStyle={{ padding: 30 }}\r\n        destroyOnClose\r\n        {...props}\r\n      >\r\n        {renderModal()}\r\n      </AntdModal>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ActionModal;\r\n","import React, { memo } from 'react';\r\nimport { HiTrash } from 'react-icons/hi';\r\nimport Content from './Content';\r\nimport { Typography } from 'antd';\r\nimport { ActionModalContentProps } from '.';\r\n\r\nconst DeleteModal = memo(\r\n  ({ multi, recordType, ...props }: ActionModalContentProps, _ref) => {\r\n    const { Text } = Typography;\r\n\r\n    return (\r\n      <Content\r\n        label='Delete'\r\n        Icon={HiTrash}\r\n        color='error'\r\n        okText='Delete'\r\n        multi={multi}\r\n        {...props}\r\n      >\r\n        <Text type='secondary' className='text-lg'>\r\n          This process cannot be undone.\r\n          <br />\r\n          {multi\r\n            ? `Do you really want to delete the following ${recordType}s?`\r\n            : `Do you really want to delete the specific ${recordType}?`}\r\n        </Text>\r\n      </Content>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DeleteModal;\r\n","import React, { memo } from 'react';\r\nimport { HiEyeOff } from 'react-icons/hi';\r\nimport Content from './Content';\r\nimport { Typography } from 'antd';\r\nimport { ActionModalContentProps } from '.';\r\n\r\nconst HideModal = memo(\r\n  ({ multi, recordType, ...props }: ActionModalContentProps, _ref) => {\r\n    const { Text } = Typography;\r\n\r\n    return (\r\n      <Content\r\n        label='Hide'\r\n        Icon={HiEyeOff}\r\n        color='grey'\r\n        okText='Hide'\r\n        multi={multi}\r\n        {...props}\r\n      >\r\n        <Text type='secondary' className='text-lg'>\r\n          This process cannot be undone.\r\n          <br />\r\n          {multi\r\n            ? `Do you really want to delete the following ${recordType}s?`\r\n            : `Do you really want to delete the specific ${recordType}?`}\r\n        </Text>\r\n      </Content>\r\n    );\r\n  }\r\n);\r\nexport default HideModal;\r\n","import axios from '@api/axiosInstance';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const productPrevAPI = (searchParam?: string) =>\r\n  axios.get(\r\n    `item/products/prev${searchParam !== undefined ? searchParam : ''}`\r\n  );\r\nconsole.log(Cookies.get('csfttoken'));\r\nexport const productDelAPI = (pk: number) =>\r\n  axios.delete(`item/products/${pk}/`);\r\n","import MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography, Image, message } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport prodTabList from './prodTabList';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { moneyFormatter } from '@utils/numUtils';\r\nimport { prodStatList } from '@utils/optionUtils';\r\nimport {\r\n  ActivateButton,\r\n  DeleteButton,\r\n  EditButton,\r\n  HideButton,\r\n} from '@components/Button/ActionButton';\r\nimport StatusTag from '@components/Tag/StatusTag';\r\nimport { BoldTitle } from '@components/Title';\r\nimport { ActionModal } from '@components/Modal';\r\nimport { ActionModalContentProps } from '@components/Modal/ActionModal';\r\nimport { productDelAPI, productPrevAPI } from '@api/services/productAPI';\r\nimport { addSearchParams, parseURL } from '@utils/urlUtls';\r\n\r\nconst ProdMgmt = () => {\r\n  const { Text } = Typography;\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [list, setList] = useState([]);\r\n  const [recordCount, setRecordCount] = useState<number>();\r\n  const [selected, setSelected] = useState([]);\r\n  const [tableLoading, setTableLoading] = useState(false);\r\n  const defPg = 5;\r\n\r\n  useEffect(() => {\r\n    setTableLoading(true);\r\n    productPrevAPI(location.search)\r\n      .then((res) => {\r\n        setList(res.data.results);\r\n        setRecordCount(res.data.count);\r\n        setTableLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response?.status !== 401) setTableLoading(false);\r\n        Promise.resolve();\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParams]);\r\n\r\n  const actionModalProps: ActionModalContentProps = {\r\n    recordType: 'product',\r\n    dataSource: selected,\r\n  };\r\n\r\n  const showActionSuccessMsg = (\r\n    action: 'delete' | 'hide',\r\n    multi: boolean = false\r\n  ) => {\r\n    messageApi.open({\r\n      key: action,\r\n      type: 'success',\r\n      content: `${multi ? selected.length : 1} Products ${\r\n        action === 'delete' ? 'Deleted' : 'Hidden'\r\n      } Successfully`,\r\n    });\r\n    setTimeout(() => message.destroy(action), 3000);\r\n  };\r\n\r\n  const showServerErrMsg = () => {\r\n    messageApi.open({\r\n      key: 'serverErr',\r\n      type: 'error',\r\n      content:\r\n        \"We're having some difficulties connecting to the server. Please try again later.\",\r\n    });\r\n    setTimeout(() => message.destroy('serverErr'), 3000);\r\n  };\r\n\r\n  const activateBtn = (props: any) => <ActivateButton type='primary' />;\r\n\r\n  const hideBtn = (props: any) => (\r\n    <HideButton\r\n      type='primary'\r\n      color='grey'\r\n      onClick={() => {\r\n        ActionModal.show('hide', {\r\n          onOk: () =>\r\n            fetch('http://example.com').then(() => {\r\n              showActionSuccessMsg('hide', true);\r\n            }),\r\n          multiItem: true,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n\r\n  const deleteBtn = (props: any) => (\r\n    <DeleteButton\r\n      type='primary'\r\n      onClick={() => {\r\n        ActionModal.show('delete', {\r\n          onOk: () =>\r\n            fetch('http://example.com').then(() => {\r\n              showActionSuccessMsg('delete', true);\r\n            }),\r\n          multiItem: true,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: activateBtn,\r\n      key: 'activate',\r\n      fltr: [{ fld: 'prodStat', value: 'hidden', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: hideBtn,\r\n      key: 'hide',\r\n      fltr: [{ fld: 'prodStat', value: 'active', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: deleteBtn,\r\n      key: 'delete',\r\n    },\r\n  ];\r\n\r\n  const handleSelectChange = (selectedKeys) => {\r\n    const selectedProd = list.filter((prod) =>\r\n      selectedKeys.some((selected) => selected === prod.item_id)\r\n    );\r\n    const selected = [];\r\n    selectedProd.forEach((prod) =>\r\n      selected.push({\r\n        key: prod.item_id,\r\n        title: prod.name,\r\n        icon: (\r\n          <Image src={prod.thumbnail} height={40} width={40} preview={false} />\r\n        ),\r\n      })\r\n    );\r\n    setSelected(selected);\r\n  };\r\n\r\n  const handleTabChange = (key) => {\r\n    if (key !== 'all') {\r\n      setSearchParams(addSearchParams(searchParams, { status: key }));\r\n    } else {\r\n      searchParams.delete('status');\r\n      setSearchParams(parseURL(searchParams));\r\n    }\r\n  };\r\n\r\n  const prodMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    width?: number | string;\r\n    fixed?: 'left' | 'right';\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: ['name', 'category', 'thumbnail'],\r\n      key: 'prod',\r\n      sorter: true,\r\n      width: 400,\r\n      render: (_: any, data: { [x: string]: string }) => (\r\n        <Row gutter={5}>\r\n          <Col xs={9} xl={7}>\r\n            <Image\r\n              alt={data.name}\r\n              src={data.thumbnail}\r\n              height={100}\r\n              width={100}\r\n            />\r\n          </Col>\r\n          <Col xs={15} xl={17}>\r\n            <Space direction='vertical' size={5}>\r\n              <div className='text-button-wrapper'>\r\n                <Text strong className='text-button'>\r\n                  {data.name}\r\n                </Text>\r\n              </div>\r\n              <Text type='secondary' className='text-sm text-break'>\r\n                {data.category}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'SKU',\r\n      dataIndex: 'sku',\r\n      key: 'sku',\r\n      sorter: true,\r\n      width: 160,\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (amount: string) => {\r\n        let newAmt = parseFloat(amount);\r\n        return <Text type='secondary'>{moneyFormatter(newAmt)}</Text>;\r\n      },\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'stock',\r\n      key: 'stock',\r\n      sorter: true,\r\n      width: 120,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 150,\r\n      render: (status: string) => (\r\n        <StatusTag\r\n          status={status}\r\n          statusList={prodStatList}\r\n          dropdownStatus={['active', 'hidden']}\r\n          onDropdownSelect={(selectedStatus) => {\r\n            if (selectedStatus === 'hidden') {\r\n              ActionModal.show('hide', {\r\n                onOk: () =>\r\n                  fetch('http://example.com').then(() => {\r\n                    showActionSuccessMsg('hide');\r\n                  }),\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 100,\r\n      render: (prod: any) => {\r\n        return (\r\n          <Space direction='vertical' size={5}>\r\n            <EditButton\r\n              type='link'\r\n              color='info'\r\n              onClick={() => {\r\n                navigate(findRoutePath('prodAdd'));\r\n              }}\r\n            />\r\n            <DeleteButton\r\n              type='link'\r\n              color='info'\r\n              onClick={() => {\r\n                ActionModal.show('delete', {\r\n                  onOk: async () => {\r\n                    await productDelAPI(prod.item_id)\r\n                      .then((res) => {\r\n                        setList(\r\n                          list.filter((item) => item.item_id !== prod.item_id)\r\n                        );\r\n                        setRecordCount(recordCount - 1);\r\n                        showActionSuccessMsg('delete');\r\n                      })\r\n                      .catch((err) => {\r\n                        showServerErrMsg();\r\n                      });\r\n                  },\r\n                });\r\n              }}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {contextHolder}\r\n      <MainCardContainer className='prod-mgmt'>\r\n        <MainCard\r\n          tabList={prodTabList}\r\n          activeTabKey={\r\n            searchParams.get('status') === null\r\n              ? 'all'\r\n              : searchParams.get('status')\r\n          }\r\n          onTabChange={handleTabChange}\r\n        >\r\n          <FilterInputs loading={tableLoading} />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Product List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('prodAdd'))}\r\n                >\r\n                  Add Product\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              rowKey='item_id'\r\n              dataSource={list}\r\n              columns={prodMgmtColumns}\r\n              buttons={onSelectBtn}\r\n              loading={tableLoading}\r\n              defPg={defPg}\r\n              totalRecord={recordCount}\r\n              onSelectChange={handleSelectChange}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n\r\n      <ActionModal {...actionModalProps} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProdMgmt;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  InputNumber,\r\n  InputNumberProps,\r\n  Radio,\r\n  Row,\r\n  Space,\r\n} from 'antd';\r\nimport { invInputOptions } from '@utils/optionUtils';\r\n\r\nexport interface InvStockInputProps extends InputNumberProps {\r\n  input: number;\r\n  onSave?: (data: { operation: string; value: number }) => void;\r\n}\r\n\r\nconst InvStockInput = ({\r\n  input,\r\n  onSave = () => '',\r\n  ...props\r\n}: InvStockInputProps) => {\r\n  const [operation, setOperation] = useState(invInputOptions[0].value);\r\n  const [value, setValue] = useState(input);\r\n\r\n  return (\r\n    <Space size={10} direction='vertical'>\r\n      <Row>\r\n        <Radio.Group\r\n          buttonStyle='solid'\r\n          size={'small'}\r\n          value={operation}\r\n          options={invInputOptions}\r\n          optionType='button'\r\n          onChange={(e) => {\r\n            setOperation(e.target.value);\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row gutter={[10, 10]}>\r\n        <Col>\r\n          <InputNumber\r\n            value={value}\r\n            min={0}\r\n            size={'small'}\r\n            style={{ width: 150 }}\r\n            onChange={(value: number) => {\r\n              setValue(value);\r\n            }}\r\n            {...props}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            type='primary'\r\n            size={'small'}\r\n            onClick={() => {\r\n              onSave({ operation: operation, value: value });\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default InvStockInput;\r\n","import MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport Button from '@components/Button';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport { Col, Image, Row, Space, Typography } from 'antd';\r\nimport FilterInputs from './FilterInputs';\r\nimport prodTabList from './prodTabList';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { moneyFormatter } from '@utils/numUtils';\r\nimport InvStockInput from '@components/Input/InvStockInput';\r\nimport { BulkEditButton } from '@components/Button/ActionButton';\r\nimport { BoldTitle } from '@components/Title';\r\nimport { productPrevAPI } from '@api/services/productAPI';\r\nimport { addSearchParams, parseURL } from '@utils/urlUtls';\r\n\r\nconst ProdInv = () => {\r\n  const { Text } = Typography;\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [tableLoading, setTableLoading] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [recordCount, setRecordCount] = useState<number>();\r\n  const defPg = 5;\r\n\r\n  useEffect(() => {\r\n    setTableLoading(true);\r\n    productPrevAPI(location.search)\r\n      .then((res) => {\r\n        setList(res.data.results);\r\n        setRecordCount(res.data.count);\r\n        setTableLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response?.status !== 401) setTableLoading(false);\r\n        Promise.resolve();\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParams]);\r\n\r\n  const bulkUpdBtn = (props: any) => <BulkEditButton />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: bulkUpdBtn,\r\n      key: 'bulkUpd',\r\n    },\r\n  ];\r\n\r\n  const handleTabChange = (key) => {\r\n    if (key !== 'all') {\r\n      setSearchParams(addSearchParams(searchParams, { status: key }));\r\n    } else {\r\n      searchParams.delete('status');\r\n      setSearchParams(parseURL(searchParams));\r\n    }\r\n  };\r\n\r\n  const prodInvColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    width?: number | string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: ['name', 'category', 'thumbnail'],\r\n      key: 'prod',\r\n      width: 400,\r\n      sorter: true,\r\n      render: (_: any, data: { [x: string]: string | undefined }) => (\r\n        <Row gutter={5}>\r\n          <Col xs={9} xl={7}>\r\n            <Image src={data.thumbnail} height={100} width={100} />\r\n          </Col>\r\n          <Col xs={15} xl={17}>\r\n            <Space direction='vertical' size={5}>\r\n              <div className='text-button-wrapper'>\r\n                <Text strong className='text-button'>\r\n                  {data.name}\r\n                </Text>\r\n              </div>\r\n              <Text type='secondary' className='text-sm text-break'>\r\n                {data.category}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'SKU',\r\n      dataIndex: 'sku',\r\n      key: 'sku',\r\n      width: 160,\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      width: 120,\r\n      sorter: true,\r\n      render: (amount: string) => (\r\n        <Text type='secondary'>{moneyFormatter(parseFloat(amount))}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'stock',\r\n      key: 'stock',\r\n      width: 100,\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 280,\r\n      render: () => <InvStockInput input={0} />,\r\n    },\r\n  ];\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='prod-inv'>\r\n        <MainCard tabList={prodTabList} onTabChange={handleTabChange}>\r\n          <FilterInputs />\r\n        </MainCard>\r\n\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Product List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('prodMgmt'))}\r\n                >\r\n                  View Products\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <InformativeTable\r\n              rowKey='item_id'\r\n              dataSource={list}\r\n              columns={prodInvColumns}\r\n              buttons={onSelectBtn}\r\n              defPg={defPg}\r\n              totalRecord={recordCount}\r\n              loading={tableLoading}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\nexport default ProdInv;\r\n","import React, { useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport {\r\n  Upload as AntdUpload,\r\n  UploadProps as AntdUploadProps,\r\n  Modal,\r\n} from 'antd';\r\nimport './UploadPicWall.less';\r\n\r\nconst UploadPicWall = (props: AntdUploadProps) => {\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n  const getBase64 = (file: Blob) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => setPreviewVisible(false);\r\n\r\n  const handlePreview = async (file: any) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\r\n    );\r\n  };\r\n\r\n  const uploadButton = <MdAdd size={50} className='color-grey-300' />;\r\n\r\n  return (\r\n    <span className='upload-pic-wall'>\r\n      <AntdUpload\r\n        action='https://run.mocky.io/v3/74b79e58-0491-4fe0-ae9c-738eab6c90ba'\r\n        listType='picture-card'\r\n        onPreview={handlePreview}\r\n        multiple\r\n        {...props}\r\n      >\r\n        {props.fileList !== undefined && props.fileList.length >= 8\r\n          ? null\r\n          : uploadButton}\r\n      </AntdUpload>\r\n      <Modal\r\n        visible={previewVisible}\r\n        title={previewTitle}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt='uploadPreviewImg' className='full-width' src={previewImage} />\r\n      </Modal>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default UploadPicWall;\r\n","import React, { useState } from 'react';\r\nimport { Affix, AffixProps, Card, Col, Row } from 'antd';\r\nimport Button from '@components/Button';\r\n\r\nexport interface AffixAddProps extends AffixProps {\r\n  label?: string;\r\n}\r\n\r\nconst AffixAdd = ({ label, ...props }: Omit<AffixAddProps, 'children'>) => {\r\n  const [showCard, setShowCard] = useState(false);\r\n  return (\r\n    <Affix\r\n      onChange={(affixed) =>\r\n        showCard ? setShowCard(false) : setShowCard(true)\r\n      }\r\n      {...props}\r\n    >\r\n      <Card\r\n        bordered={false}\r\n        style={\r\n          showCard\r\n            ? {\r\n                width: '100%',\r\n                boxShadow: '0 -1px 8px 0 rgb(39 52 120 / 12%)',\r\n                borderTopLeftRadius: 6,\r\n                borderTopRightRadius: 6,\r\n              }\r\n            : { width: '100%', background: 'none' }\r\n        }\r\n        bodyStyle={showCard ? { padding: '20px 15px' } : { padding: '0 15px' }}\r\n      >\r\n        <Row justify='end' gutter={20}>\r\n          <Col>\r\n            <Button size='middle'>Cancel</Button>\r\n          </Col>\r\n          <Col>\r\n            <Button size='middle' type='primary' htmlType='submit'>\r\n              Add {label}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default AffixAdd;\r\n","import BraftEditor, {\r\n  BraftEditorProps,\r\n  BuiltInControlType,\r\n} from 'braft-editor';\r\nimport ColorPicker from 'braft-extensions/dist/color-picker';\r\nimport Table from 'braft-extensions/dist/table';\r\nimport 'braft-editor/dist/index.css';\r\nimport 'braft-extensions/dist/color-picker.css';\r\nimport 'braft-extensions/dist/table.css';\r\nimport './TextEditor.less';\r\n\r\nBraftEditor.use(\r\n  ColorPicker({\r\n    clearButtonText: 'Clear',\r\n    closeButtonText: 'Close',\r\n  })\r\n);\r\n\r\nBraftEditor.use(Table({ columnResizable: true }));\r\n\r\nconst TextEditor = (props: BraftEditorProps) => {\r\n  const excludeCtrl: BuiltInControlType[] = ['fullscreen'];\r\n\r\n  return <BraftEditor language='en' excludeControls={excludeCtrl} {...props} />;\r\n};\r\n\r\nexport default TextEditor;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport UploadPicWall from '@components/Upload/UploadPicWall/UploadPicWall';\r\nimport AffixAdd from '@components/Affix/AffixAdd';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Anchor,\r\n  Checkbox,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Radio,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\nimport TextEditor from '@components/Input/TextEditor';\r\nimport { prodCat } from '@utils/optionUtils';\r\n\r\nconst ProdAdd = () => {\r\n  const { Text, Title } = Typography;\r\n  const [prodForm] = Form.useForm();\r\n  const { Link } = Anchor;\r\n  const [fileList, setFileList]: any = useState([\r\n    {\r\n      uid: '-1',\r\n      name: 'image.png',\r\n      status: 'done',\r\n      url: 'https://www.sharifahfood.com/wp-content/uploads/2020/10/BG-3.png',\r\n    },\r\n  ]);\r\n\r\n  const [targetOffset, setTargetOffset] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const anchorList = [\r\n    { link: 'basicInfo', title: 'Basic Information' },\r\n    { link: 'pricing', title: 'Pricing' },\r\n    { link: 'inv', title: 'Inventory' },\r\n    { link: 'shipping', title: 'Shipping' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTargetOffset(window.innerHeight / 1.65);\r\n  }, []);\r\n\r\n  return (\r\n    <Form name='prodForm' form={prodForm} layout='vertical' size='small'>\r\n      <Layout>\r\n        <Col xs={16} xl={19} className='center-flex'>\r\n          <MainCardContainer>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='basicInfo'>\r\n                  Basic Information\r\n                </Title>\r\n                <Form.Item\r\n                  label='Product Name'\r\n                  name='prodNm'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the product name.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. Nasi Briyani Bkhari'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Product Category'\r\n                  name='prodCat'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the product category.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={prodCat} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Product Image'\r\n                  name='prodImg'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please upload at least ONE product image.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <UploadPicWall\r\n                    fileList={fileList}\r\n                    onChange={(info) => {\r\n                      setFileList([...info.fileList]);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Product Description'\r\n                  name='prodDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      validator: (_, value) => {\r\n                        if (value === undefined || value.isEmpty()) {\r\n                          return Promise.reject(\r\n                            'Please add some description on the product.'\r\n                          );\r\n                        } else {\r\n                          return Promise.resolve();\r\n                        }\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {/* <Input.TextArea style={{ height: 200 }} /> */}\r\n                  <TextEditor placeholder='Please add the product description here.' />\r\n                </Form.Item>\r\n                <Form.Item label='Product Status' name='prodStat'>\r\n                  <Checkbox>Hidden</Checkbox>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='pricing'>\r\n                  Pricing\r\n                </Title>\r\n                <div>\r\n                  <Row gutter={30}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Price'\r\n                        name='prodPrice'\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please enter the product price.',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Special Price'\r\n                        name='prodSPrice'\r\n                        tooltip={{\r\n                          title: 'Discounted Price',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider />\r\n                  <Row gutter={30}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Cost per Unit'\r\n                        name='prodCPU'\r\n                        tooltip={{\r\n                          title: 'Unit Price',\r\n                        }}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message:\r\n                              'please enter the unit price of the product.',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item label='Profit' name='prodProfit'>\r\n                        <Input\r\n                          disabled\r\n                          bordered={false}\r\n                          defaultValue='-'\r\n                          placeholder='Input'\r\n                          style={{\r\n                            fontWeight: 'bold',\r\n                            cursor: 'default',\r\n                          }}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row gutter={30}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Ordering/Reorder Cost'\r\n                        name='prodOrderCost'\r\n                        tooltip={{\r\n                          title: 'Cost when reordering the product',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Carrying/Holding Cost'\r\n                        name='prodCarryCost'\r\n                        tooltip={{\r\n                          title: 'Cost for holding inventory in stock',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='inv'>\r\n                  Inventory\r\n                </Title>\r\n                <div>\r\n                  <Form.Item\r\n                    label='Stock Keeping Unit (SKU)'\r\n                    name='prodSKU'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the SKU for the product.',\r\n                      },\r\n                    ]}\r\n                    style={{ width: '40%' }}\r\n                  >\r\n                    <Input placeholder='e.g. SHRF-RTC-NBB' />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    label='Stock Quantity'\r\n                    name='prodQuantity'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the product stock quantity.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <InputNumber min={0} defaultValue={0} />\r\n                  </Form.Item>\r\n\r\n                  <Divider />\r\n                  <Row gutter={30}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Average Lead Time'\r\n                        name='avgLeadTime'\r\n                        tooltip={{\r\n                          title: 'Average Lead Time',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          min={0}\r\n                          placeholder='Input'\r\n                          addonAfter='Days'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Maximum Lead Time'\r\n                        name='maxLeadTime'\r\n                        tooltip={{\r\n                          title: 'Maximum Lead Time',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          min={0}\r\n                          placeholder='Input'\r\n                          addonAfter='Days'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='shipping'>\r\n                  Shipping\r\n                </Title>\r\n                <Form.Item\r\n                  label='Weight (kg)'\r\n                  name='prodWeight'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the product weight.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    min={0}\r\n                    defaultValue={0}\r\n                    style={{ width: '10%' }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Dimension (cm)'\r\n                  name='prodDimension'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the product dimension in cm.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Space size={10}>\r\n                    <InputNumber min={0} placeholder='Length' addonAfter='cm' />\r\n                    <Text type='secondary'>x</Text>\r\n                    <InputNumber min={0} placeholder='Width' addonAfter='cm' />\r\n                    <Text type='secondary'>x</Text>\r\n                    <InputNumber min={0} placeholder='Height' addonAfter='cm' />\r\n                  </Space>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <AffixAdd offsetBottom={0} label='Product' />\r\n          </MainCardContainer>\r\n        </Col>\r\n        <Col xs={8} xl={5} push={1}>\r\n          <Anchor offsetTop={150} targetOffset={targetOffset}>\r\n            {anchorList.map((anchor) => (\r\n              <Link\r\n                key={anchor.link}\r\n                href={`#${anchor.link}`}\r\n                title={anchor.title}\r\n              />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Layout>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ProdAdd;\r\n","import { Col, DatePicker, Row, Typography } from 'antd';\r\nimport { RangePickerProps } from 'antd/es/date-picker';\r\n\r\ntype DatePickerWithLabelProps = RangePickerProps & {\r\n  label: string;\r\n  textSpan?: number;\r\n  justify?: 'start' | 'end';\r\n};\r\n\r\nconst DatePickerWithLabel = ({\r\n  label,\r\n  textSpan = 5,\r\n  justify = 'end',\r\n  ...props\r\n}: DatePickerWithLabelProps) => {\r\n  const { Text } = Typography;\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Row align='middle' gutter={30} className='input-date'>\r\n      <Col span={textSpan} className={justify === 'start' ? '' : 'justify-end'}>\r\n        <Text type='secondary'>{label}</Text>\r\n      </Col>\r\n      <Col span={24 - textSpan}>\r\n        <RangePicker className='full-width' {...props} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DatePickerWithLabel;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport DateRangePickerWithLabel from '@components/Input/DateRangePickerWithLabel';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const packInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'packNm',\r\n    options: [\r\n      { value: 'packNm', label: 'Package Name' },\r\n      { value: 'packSKU', label: 'Package SKU' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={packInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Stock'\r\n            placeholder={['Start', 'End']}\r\n            min={0}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Price'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n            justify='start'\r\n            textSpan={3}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel label='Available Period' textSpan={7} />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","import PromoRayaQurban from '@assets/Product/PromoRayaQurban.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nconst packageList: {\r\n  key: string;\r\n  packNm: string;\r\n  packProds: {\r\n    prodNm: string;\r\n    quantity: number;\r\n  }[];\r\n  packSKU: string;\r\n  packImg: string;\r\n  packPrice: number;\r\n  packStock: number;\r\n  packStat: 'active' | 'oos' | 'scheduled' | 'expired' | 'hidden';\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    packNm: 'Promo Raya Qurban',\r\n    packProds: [\r\n      { prodNm: 'Rendang Dengeng Daging', quantity: 5 },\r\n      { prodNm: 'test', quantity: 6 },\r\n    ],\r\n    packSKU: 'SHRF-RTC-NBB',\r\n    packImg: PromoRayaQurban,\r\n    packPrice: 50,\r\n    packStock: 50,\r\n    packStat: 'active',\r\n  },\r\n  {\r\n    key: '2',\r\n    packNm: 'Hashtag',\r\n    packProds: [\r\n      { prodNm: 'Paste', quantity: 7 },\r\n      { prodNm: 'testing', quantity: 10 },\r\n    ],\r\n    packSKU: 'SHRF-RTC-NBB',\r\n    packImg: hashtag,\r\n    packPrice: 100.2,\r\n    packStock: 210,\r\n    packStat: 'expired',\r\n  },\r\n];\r\n\r\nexport default packageList;\r\n","export default __webpack_public_path__ + \"static/media/PromoRayaQurban.f1e2b95c.png\";","const packTabList = [\r\n    { key: 'all', tab: 'All' },\r\n    { key: 'active', tab: 'Active' },\r\n    { key: 'oos', tab: 'Out of Stock' },\r\n    { key: 'scheduled', tab: 'Scheduled' },\r\n    { key: 'expired', tab: 'Expired' },\r\n    { key: 'hidden', tab: 'Hidden' },\r\n  ];\r\n\r\nexport default packTabList;","import MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography, Image } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport packageList from './packageList';\r\n\r\nimport packTabList from './packTabList';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { packStatList } from '@utils/optionUtils';\r\nimport {\r\n  ActivateButton,\r\n  DeleteButton,\r\n  EditButton,\r\n  HideButton,\r\n} from '@components/Button/ActionButton';\r\nimport StatusTag from '@components/Tag/StatusTag';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst PackMgmt = () => {\r\n  const { Text } = Typography;\r\n  const [packageListFltr, setPackageListFltr] = useState(packageList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setPackageListFltr(\r\n        packageList.filter((pack) =>\r\n          searchParams.get('status') !== null\r\n            ? pack.packStat === searchParams.get('status')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const activateBtn = (props: any) => <ActivateButton type='primary' />;\r\n\r\n  const hideBtn = (props: any) => <HideButton type='primary' color='grey' />;\r\n\r\n  const deleteBtn = (props: any) => <DeleteButton type='primary' />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: activateBtn,\r\n      key: 'activate',\r\n      fltr: [{ fld: 'packStat', value: 'hidden', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: hideBtn,\r\n      key: 'hide',\r\n      fltr: [{ fld: 'packStat', value: 'active', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: deleteBtn,\r\n      key: 'delete',\r\n    },\r\n  ];\r\n\r\n  const packMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Package',\r\n      dataIndex: ['packNm', 'packSKU', 'packImg'],\r\n      key: 'pack',\r\n      sorter: true,\r\n      width: 280,\r\n      render: (_: any, data: { [x: string]: string | undefined }) => (\r\n        <Row gutter={20}>\r\n          <Col xs={9} xl={7}>\r\n            <Image src={data['packImg']} height={80} width={80} />\r\n          </Col>\r\n          <Col xs={15} xl={17}>\r\n            <Space direction='vertical' size={5}>\r\n              <div className='text-button-wrapper'>\r\n                <Text strong className='text-button'>\r\n                  {data['packNm']}\r\n                </Text>\r\n              </div>\r\n              <Text type='secondary' className='text-sm text-break'>\r\n                {data['packSKU']}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Products Included',\r\n      dataIndex: 'packProds',\r\n      key: 'packProds.prodNm',\r\n      width: 280,\r\n      render: (products: []) => (\r\n        <Space direction='vertical' size={10} className='full-width'>\r\n          {products.map((product: any) => (\r\n            <Row\r\n              key={`prodIncluded-${product}`}\r\n              justify='space-between'\r\n              gutter={20}\r\n            >\r\n              <Col span={20}>\r\n                <Text type='secondary' className='text-break'>\r\n                  {product.prodNm}\r\n                </Text>\r\n              </Col>\r\n              <Col span={4} className='justify-end'>\r\n                <Text type='secondary'>x{product.quantity}</Text>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'packPrice',\r\n      key: 'packPrice',\r\n      sorter: true,\r\n      width: 100,\r\n      render: (amount: string) => (\r\n        <Text type='secondary'>RM {parseFloat(amount).toFixed(2)}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'packStock',\r\n      key: 'paclStock',\r\n      sorter: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'packStat',\r\n      key: 'packStat',\r\n      width: 150,\r\n      render: (status: string) => (\r\n        <StatusTag\r\n          status={status}\r\n          statusList={packStatList}\r\n          dropdownStatus={['active', 'hidden']}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 100,\r\n      render: () => (\r\n        <Space direction='vertical' size={5}>\r\n          <EditButton type='link' color='info' />\r\n          <DeleteButton type='link' color='info' />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='pack-mgmt'>\r\n        <MainCard\r\n          tabList={packTabList}\r\n          activeTabKey={\r\n            searchParams.get('status') === null\r\n              ? 'all'\r\n              : searchParams.get('status')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { status: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Package List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('packAdd'))}\r\n                >\r\n                  Add Package\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={packageListFltr}\r\n              columns={packMgmtColumns}\r\n              buttons={onSelectBtn}\r\n              defPg={5}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PackMgmt;\r\n","import MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport Button from '@components/Button';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport { Col, Image, Row, Space, Typography } from 'antd';\r\nimport FilterInputs from './FilterInputs';\r\nimport packageList from './packageList';\r\nimport packTabList from './packTabList';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport InvStockInput from '@components/Input/InvStockInput';\r\nimport { BulkEditButton } from '@components/Button/ActionButton';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst PackInv = () => {\r\n  const { Text } = Typography;\r\n  const [packageListFltr, setPackageListFltr] = useState(packageList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setPackageListFltr(\r\n        packageList.filter((pack) =>\r\n          searchParams.get('status') !== null\r\n            ? pack.packStat === searchParams.get('status')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const bulkUpdBtn = (props: any) => <BulkEditButton />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: bulkUpdBtn,\r\n      key: 'bulkUpd',\r\n    },\r\n  ];\r\n\r\n  const packInvColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    width?: number | string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Package',\r\n      dataIndex: ['packNm', 'packSKU', 'packImg'],\r\n      key: 'pack',\r\n      width: 260,\r\n      sorter: true,\r\n      render: (_: any, data: { [x: string]: string | undefined }) => (\r\n        <Row gutter={20}>\r\n          <Col xs={9} xl={7}>\r\n            <Image src={data['packImg']} height={80} width={80} />\r\n          </Col>\r\n          <Col xs={15} xl={17}>\r\n            <Space direction='vertical' size={5}>\r\n              <div className='text-button-wrapper'>\r\n                <Text strong className='text-button'>\r\n                  {data['packNm']}\r\n                </Text>\r\n              </div>\r\n              <Text type='secondary' className='text-sm text-break'>\r\n                {data['packSKU']}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Products Included',\r\n      dataIndex: 'packProds',\r\n      key: 'packProds.prodNm',\r\n      width: 260,\r\n      render: (products: []) => (\r\n        <Space direction='vertical' size={10} className='full-width'>\r\n          {products.map((product: any) => (\r\n            <Row justify='space-between' gutter={20}>\r\n              <Col span={20}>\r\n                <Text type='secondary' className='text-break'>\r\n                  {product.prodNm}\r\n                </Text>\r\n              </Col>\r\n              <Col span={4} className='justify-end'>\r\n                <Text type='secondary'>x{product.quantity}</Text>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'packPrice',\r\n      key: 'packPrice',\r\n      width: 100,\r\n      sorter: true,\r\n      render: (amount: string) => (\r\n        <Text type='secondary'>RM {parseFloat(amount).toFixed(2)}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'packStock',\r\n      key: 'packStock',\r\n      width: 100,\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 250,\r\n\r\n      render: () => <InvStockInput input={0} />,\r\n    },\r\n  ];\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='pack-inv'>\r\n        <MainCard\r\n          tabList={packTabList}\r\n          activeTabKey={\r\n            searchParams.get('status') === null\r\n              ? 'all'\r\n              : searchParams.get('status')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { status: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Package List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('packMgmt'))}\r\n                >\r\n                  View Packages\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <InformativeTable\r\n              dataSource={packageListFltr}\r\n              columns={packInvColumns}\r\n              buttons={onSelectBtn}\r\n              defPg={5}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\nexport default PackInv;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport UploadPicWall from '@components/Upload/UploadPicWall/UploadPicWall';\r\nimport AffixAdd from '@components/Affix/AffixAdd';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Anchor,\r\n  AutoComplete,\r\n  Checkbox,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Image,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\nimport Button from '@components/Button';\r\nimport Table from '@components/Table';\r\nimport TextEditor from '@components/Input/TextEditor';\r\n\r\nconst PackAdd = () => {\r\n  const { Text, Title, Paragraph } = Typography;\r\n  const { Link } = Anchor;\r\n  const [hideEndTime, setHideEndTime] = useState(true);\r\n  const [fileList, setFileList]: any = useState([\r\n    {\r\n      uid: '-1',\r\n      name: 'image.png',\r\n      status: 'done',\r\n      url: 'https://www.sharifahfood.com/wp-content/uploads/2020/10/BG-3.png',\r\n    },\r\n  ]);\r\n\r\n  const [targetOffset, setTargetOffset] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const anchorList = [\r\n    { link: 'basicInfo', title: 'Basic Information' },\r\n    { link: 'products', title: 'Products' },\r\n    { link: 'pricing', title: 'Pricing' },\r\n    { link: 'inv', title: 'Inventory' },\r\n    { link: 'shipping', title: 'Shipping' },\r\n    { link: 'availPeriod', title: 'Available Period' },\r\n  ];\r\n\r\n  const prodColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    width?: number | string;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n      key: 'prod',\r\n      render: (_: any, data: { [x: string]: string | undefined }) => (\r\n        <Row gutter={5}>\r\n          <Col>\r\n            <Image src={data['prodImg']} height={120} width={120} />\r\n          </Col>\r\n          <Col>\r\n            <Space direction='vertical' size={5}>\r\n              <Button type='link' color='info'>\r\n                {data['prodNm']}\r\n              </Button>\r\n              <Text type='secondary' className='text-sm'>\r\n                {data['prodCat']}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'SKU',\r\n      dataIndex: 'prodSKU',\r\n      key: 'prodSKU',\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'prodStock',\r\n      key: 'prodStock',\r\n    },\r\n  ];\r\n\r\n  //retrieve from database\r\n  const options: any = [\r\n    {\r\n      label: 'Ready-To-Eat',\r\n      options: [\r\n        { label: 'Kari Ayam', value: 'Kari Ayam' },\r\n        { label: 'Sambal Ikan Bilis', value: 'Sambal Ikan Bilis' },\r\n        { label: 'Rendang Dendeng Daging', value: 'Rendang Dendeng Daging' },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Ready-To-Cook',\r\n      options: [\r\n        { label: 'Nasi Briyani Bukhari', value: 'Nasi Briyani Bukhari' },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Paste',\r\n      options: [\r\n        { label: 'Pes Sambal Tumis', value: 'Pes Sambal Tumis' },\r\n        { label: 'Pes Masakan Keruntuk', value: 'Pes Masakan Keruntuk' },\r\n        { label: 'Pes Mi Goreng', value: 'Pes Mi Goreng' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTargetOffset(window.innerHeight / 1.5);\r\n  }, []);\r\n\r\n  return (\r\n    <Form name='packForm' layout='vertical' size='small'>\r\n      <Layout>\r\n        <Col xs={16} xl={19} className='center-flex'>\r\n          <MainCardContainer>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='basicInfo'>\r\n                  Basic Information\r\n                </Title>\r\n                <Form.Item\r\n                  label='Package Name'\r\n                  name='packNm'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the package name.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. Promo Raya Qurban'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Package Image'\r\n                  name='packImg'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please upload at least ONE package image.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <UploadPicWall\r\n                    fileList={fileList}\r\n                    onChange={(info) => {\r\n                      setFileList([...info.fileList]);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Package Description'\r\n                  name='packDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      validator: (_, value) => {\r\n                        if (value === undefined || value.isEmpty()) {\r\n                          return Promise.reject(\r\n                            'Please add some description on the package.'\r\n                          );\r\n                        } else {\r\n                          return Promise.resolve();\r\n                        }\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {/* <Input.TextArea style={{ height: 200 }} /> */}\r\n                  <TextEditor placeholder='Please add the package description here.' />\r\n                </Form.Item>\r\n                <Form.Item label='Package Status' name='packStat'>\r\n                  <Checkbox>Hidden</Checkbox>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='products'>\r\n                  Products\r\n                </Title>\r\n\r\n                <Form.Item label='Products To Be Included' name='prodNm'>\r\n                  <Input.Group compact>\r\n                    <AutoComplete\r\n                      placeholder='Product Name'\r\n                      options={options}\r\n                      filterOption\r\n                      notFoundContent='Not Found'\r\n                      style={{ width: '40%' }}\r\n                    >\r\n                      <Input />\r\n                    </AutoComplete>\r\n                    <Button type='primary' style={{ padding: '0 15px' }}>\r\n                      Add\r\n                    </Button>\r\n                  </Input.Group>\r\n\r\n                  <Paragraph type='secondary'>\r\n                    Note: Selected products will be displayed below.\r\n                  </Paragraph>\r\n                </Form.Item>\r\n                <Table columns={prodColumns} />\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='pricing'>\r\n                  Pricing\r\n                </Title>\r\n                <Row gutter={30}>\r\n                  <Col>\r\n                    <Form.Item\r\n                      label='Price'\r\n                      name='packPrice'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please enter the package price.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <InputNumber\r\n                        addonBefore='RM'\r\n                        precision={2}\r\n                        min={0}\r\n                        placeholder='Input'\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Item\r\n                      label='Special Price'\r\n                      name='packSPrice'\r\n                      tooltip={{\r\n                        title: 'Discounted Price',\r\n                      }}\r\n                    >\r\n                      <InputNumber\r\n                        addonBefore='RM'\r\n                        precision={2}\r\n                        min={0}\r\n                        placeholder='Input'\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <Row justify='center'>\r\n              <MainCard>\r\n                <Space direction='vertical' size={20} className='full-width'>\r\n                  <Title level={4} id='inv'>\r\n                    Inventory\r\n                  </Title>\r\n\r\n                  <Form.Item\r\n                    label='Stock Keeping Unit (SKU)'\r\n                    name='packSKU'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the SKU for the package.',\r\n                      },\r\n                    ]}\r\n                    style={{ width: '40%' }}\r\n                  >\r\n                    <Input placeholder='e.g. SHRF-PP-PRQ' />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    label='Stock Quantity'\r\n                    name='packQuantity'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the package stock quantity.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <InputNumber min={0} defaultValue={0} />\r\n                  </Form.Item>\r\n                </Space>\r\n              </MainCard>\r\n            </Row>\r\n            <Row justify='center' className='full-width'>\r\n              <MainCard>\r\n                <Space direction='vertical' size={20} className='full-width'>\r\n                  <Title level={4} id='shipping'>\r\n                    Shipping\r\n                  </Title>\r\n                  <Form.Item\r\n                    label='Weight (kg)'\r\n                    name='packWeight'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the package weight.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <InputNumber\r\n                      min={0}\r\n                      defaultValue={0}\r\n                      style={{ width: '10%' }}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    label='Dimension (cm)'\r\n                    name='packDimension'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the package dimension in cm.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Space size={10}>\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder='Length'\r\n                        addonAfter='cm'\r\n                      />\r\n                      <Text type='secondary'>x</Text>\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder='Width'\r\n                        addonAfter='cm'\r\n                      />\r\n                      <Text type='secondary'>x</Text>\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder='Height'\r\n                        addonAfter='cm'\r\n                      />\r\n                    </Space>\r\n                  </Form.Item>\r\n                </Space>\r\n              </MainCard>\r\n            </Row>\r\n            <Row justify='center' className='full-width'>\r\n              <MainCard>\r\n                <Space direction='vertical' size={20} className='full-width'>\r\n                  <Title level={4} id='availPeriod'>\r\n                    Available Period\r\n                  </Title>\r\n                  <Form.Item\r\n                    label='Start Time'\r\n                    name='packStartTime'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message:\r\n                          'Please select the start time to launch the package.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <DatePicker showTime placeholder='Select Date and Time' />\r\n                  </Form.Item>\r\n                  <Checkbox onChange={(e) => setHideEndTime(e.target.checked)}>\r\n                    Set End Time\r\n                  </Checkbox>\r\n\r\n                  <Form.Item\r\n                    label='End Time'\r\n                    name='packEndTime'\r\n                    hidden={hideEndTime}\r\n                  >\r\n                    <DatePicker showTime placeholder='Select Date and Time' />\r\n                  </Form.Item>\r\n                </Space>\r\n              </MainCard>\r\n            </Row>\r\n            <AffixAdd offsetBottom={0} label='Package' />\r\n          </MainCardContainer>\r\n        </Col>\r\n        <Col xs={8} xl={5}>\r\n          <Anchor offsetTop={150} targetOffset={targetOffset}>\r\n            {anchorList.map((anchor) => (\r\n              <Link\r\n                key={anchor.link}\r\n                href={`#${anchor.link}`}\r\n                title={anchor.title}\r\n              />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Layout>{' '}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PackAdd;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport DateRangePickerWithLabel from '@components/Input/DateRangePickerWithLabel';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { custCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const orderInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'orderID',\r\n    options: [\r\n      { value: 'orderID', label: 'Order ID' },\r\n      { value: 'custNm', label: 'Customer Name' },\r\n      { value: 'trackingNum', label: 'Tracking Number' },\r\n    ],\r\n  };\r\n\r\n  const custCatSelect = {\r\n    placeholder: 'Select Customer Type',\r\n    options: custCat,\r\n  };\r\n\r\n  const payMthdSelect = {\r\n    placeholder: 'Select Payment Method',\r\n    options: [\r\n      { value: 'intBnk', label: 'Internet Banking' },\r\n      { value: 'card', label: 'Card' },\r\n      { value: 'paypal', label: 'Paypal' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={orderInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel\r\n            label='Customer Type'\r\n            select={custCatSelect}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n\r\n        <FilterInputCol>\r\n          <SelectWithLabel\r\n            label='Payment Method'\r\n            select={payMthdSelect}\r\n            justify='start'\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Amount'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel\r\n            label='Order Date'\r\n            justify='start'\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","const orderList: {\r\n  key: string;\r\n  orderID: number;\r\n  custNm: string;\r\n  custType: 'agent' | 'drpshpr' | 'cust';\r\n  orderTm: string;\r\n  trackNum?: string;\r\n  orderAmt: number;\r\n  orderStat: 'completed' | 'unpaid' | 'cancel' | 'toShip' | 'shipping';\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    orderID: 2908724,\r\n    custNm: 'Tan Yuan Jie',\r\n    custType: 'agent',\r\n    orderTm: '23-08-2021 14:30',\r\n    orderAmt: 60,\r\n    orderStat: 'toShip',\r\n  },\r\n  {\r\n    key: '2',\r\n    orderID: 1659883,\r\n    custNm: 'Nur Nuraliah binti Haiqal',\r\n    custType: 'cust',\r\n    orderTm: '23-08-2021 12:41',\r\n    orderAmt: 12500.50,\r\n    orderStat: 'toShip',\r\n  },\r\n  {\r\n    key: '3',\r\n    orderID: 7156802,\r\n    custNm: 'Jong Cai Tien',\r\n    custType: 'cust',\r\n    orderTm: '23-08-2021 09:21',\r\n    trackNum: 'PL054981244515',\r\n    orderAmt: 32,\r\n    orderStat: 'shipping',\r\n  },\r\n  {\r\n    key: '4',\r\n    orderID: 1605044,\r\n    custNm: 'Mohammed Yusni bin Ayyadi',\r\n    custType: 'drpshpr',\r\n    orderTm: '22-08-2021 21:06',\r\n    trackNum: 'PL124994664623',\r\n    orderAmt: 88.2,\r\n    orderStat: 'shipping',\r\n  },\r\n  {\r\n    key: '5',\r\n    orderID: 1487160,\r\n    custNm: 'Huzaifi Hafizh bin Zaidi',\r\n    custType: 'agent',\r\n    orderTm: '22-08-2021 19:34',\r\n    trackNum: 'PL124994664623',\r\n    orderAmt: 88.2,\r\n    orderStat: 'shipping',\r\n  },\r\n  {\r\n    key: '6',\r\n    orderID: 7698033,\r\n    custNm: 'Steven Tan',\r\n    custType: 'cust',\r\n    orderTm: '21-08-2021 17:32',\r\n    orderAmt: 164.5,\r\n    orderStat: 'cancel',\r\n  },\r\n  {\r\n    key: '7',\r\n    orderID: 2741131,\r\n    custNm: 'Kar Ming Xiu',\r\n    custType: 'cust',\r\n    orderTm: '21-08-2021 15:30',\r\n    trackNum: 'PL259637281293',\r\n    orderAmt: 50,\r\n    orderStat: 'completed',\r\n  },\r\n  {\r\n    key: '8',\r\n    orderID: 5943806,\r\n    custNm: 'Shoba Bhullar a/l Darma Raja',\r\n    custType: 'drpshpr',\r\n    orderTm: '21-08-2021 12:01',\r\n    trackNum: 'PL568920594212',\r\n    orderAmt: 360,\r\n    orderStat: 'completed',\r\n  },\r\n  {\r\n    key: '9',\r\n    orderID: 5166945,\r\n    custNm: 'Mohd Ramli Zulkefli bin Nik Bakri',\r\n    custType: 'agent',\r\n    orderTm: '20-08-2021 18:00',\r\n    trackNum: 'PL654623442345',\r\n    orderAmt: 240,\r\n    orderStat: 'completed',\r\n  },\r\n  {\r\n    key: '10',\r\n    orderID: 9851040,\r\n    custNm: 'Nur Khaliesah binti Yussof',\r\n    custType: 'cust',\r\n    orderTm: '20-08-2021 13:00',\r\n    trackNum: 'PL098946552414',\r\n    orderAmt: 45,\r\n    orderStat: 'completed',\r\n  },\r\n];\r\n\r\nexport default orderList;\r\n","const orderTabList = [\r\n  { key: 'all', tab: 'All' },\r\n  { key: 'unpaid', tab: 'Unpaid' },\r\n  { key: 'toShip', tab: 'To Ship' },\r\n  { key: 'shipping', tab: 'Shipping' },\r\n  { key: 'completed', tab: 'Completed' },\r\n  { key: 'cancel', tab: 'Cancellation' },\r\n];\r\n\r\nexport default orderTabList;","import { MdUpdate } from 'react-icons/md';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst UpdButton = ({ children = 'Update', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<MdUpdate size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default UpdButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport orderList from './orderList';\r\nimport { HiExclamation } from 'react-icons/hi';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { moneyFormatter } from '@utils/numUtils';\r\nimport orderTabList from './orderTabList';\r\nimport { orderStatList } from '@utils/optionUtils';\r\nimport { BulkEditButton, PrintButton } from '@components/Button/ActionButton';\r\nimport UpdButton from '@components/Button/ActionButton/UpdButton';\r\nimport StatusTag from '@components/Tag/StatusTag';\r\nimport Popover from '@components/Popover';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst OrderMgmt = () => {\r\n  const { Text } = Typography;\r\n  const [orderListFltr, setOrderListFltr] = useState(orderList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setOrderListFltr(\r\n        orderList.filter((order) =>\r\n          searchParams.get('status') !== null\r\n            ? order.orderStat === searchParams.get('status')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const genInvoiceBtn = (props: any) => (\r\n    <PrintButton type='primary'>Generate Invoice(s)</PrintButton>\r\n  );\r\n\r\n  const bulkUpdBtn = (props: any) => <BulkEditButton />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: genInvoiceBtn,\r\n      key: 'genInvoice',\r\n    },\r\n    {\r\n      element: bulkUpdBtn,\r\n      key: 'bulkUpd',\r\n      fltr: [\r\n        { fld: 'trackNum', value: undefined, rel: 'eq' },\r\n        { fld: 'orderStat', value: 'cancel', rel: 'neq' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const orderMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Order ID',\r\n      dataIndex: 'orderID',\r\n      key: 'orderID',\r\n      sorter: true,\r\n      fixed: 'left',\r\n      width: 110,\r\n      render: (data: number) => (\r\n        <div className='text-button-wrapper'>\r\n          <Text strong className='text-button'>\r\n            #{data}\r\n          </Text>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      dataIndex: 'custNm',\r\n      key: 'custNm',\r\n      sorter: true,\r\n      width: 200,\r\n      render: (name: string) => (\r\n        <Text type='secondary' className='text-break'>\r\n          {name}\r\n        </Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Customer Type',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (type: string) => (\r\n        <Text type='secondary'>\r\n          {type === 'agent'\r\n            ? 'Agent'\r\n            : type === 'drpshpr'\r\n            ? 'Dropshipper'\r\n            : type === 'cust'\r\n            ? 'Direct Customer'\r\n            : null}\r\n        </Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Order Time',\r\n      dataIndex: 'orderTm',\r\n      key: 'orderTm',\r\n      sorter: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Tracking Number',\r\n      dataIndex: ['trackNum', 'orderStat'],\r\n      key: 'trackNum',\r\n      width: 150,\r\n      render: (_: any, data: { [x: string]: string }) =>\r\n        data['trackNum'] !== undefined ? (\r\n          <Button type='link' color='info'>\r\n            #{data['trackNum']}\r\n          </Button>\r\n        ) : data['orderStat'] === 'cancel' ? (\r\n          '-'\r\n        ) : (\r\n          <Popover content='Please update the tracking number'>\r\n            <Space size={5}>\r\n              <HiExclamation size={20} className='color-warning' />\r\n              <Text strong className='color-warning'>\r\n                Not found\r\n              </Text>\r\n            </Space>\r\n          </Popover>\r\n        ),\r\n    },\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'orderAmt',\r\n      key: 'orderAmt',\r\n      sorter: true,\r\n      width: 100,\r\n      render: (amount: number) => <Text strong>{moneyFormatter(amount)}</Text>,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'orderStat',\r\n      key: 'orderStat',\r\n      align: 'center' as const,\r\n      width: 130,\r\n      render: (status: string) => (\r\n        <StatusTag status={status} statusList={orderStatList} minWidth='90%' />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: ['trackNum', 'orderStat'],\r\n      key: 'action',\r\n      width: 100,\r\n      fixed: 'right',\r\n      render: (_: any, data: { [x: string]: string }) =>\r\n        data['orderStat'] !== 'cancel' ? (\r\n          <Space direction='vertical' size={5}>\r\n            <PrintButton type='link' color='info' />\r\n            <UpdButton type='link' color='info' />\r\n          </Space>\r\n        ) : (\r\n          '-'\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='order-mgmt'>\r\n        <MainCard\r\n          tabList={orderTabList}\r\n          activeTabKey={\r\n            searchParams.get('status') === null\r\n              ? 'all'\r\n              : searchParams.get('status')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { status: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={40} className='full-width'>\r\n            <Space direction='vertical' size={15} className='full-width'>\r\n              <Row justify='space-between'>\r\n                <Col>\r\n                  <BoldTitle level={4}>Order List</BoldTitle>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    type='primary'\r\n                    onClick={() => navigate(findRoutePath('orderAdd'))}\r\n                  >\r\n                    Add Order\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <InformativeTable\r\n                dataSource={orderListFltr}\r\n                columns={orderMgmtColumns}\r\n                buttons={onSelectBtn}\r\n                scroll={{ x: 1100 }}\r\n              />\r\n            </Space>\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderMgmt;\r\n","import Layout from '@components/Layout';\r\nimport { Space, SpaceProps, Typography } from 'antd';\r\nimport Button from '@components/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nexport interface ComingSoonProps extends SpaceProps {\r\n  img: string;\r\n}\r\n\r\nconst ComingSoon = ({ img, ...props }: ComingSoonProps) => {\r\n  const { Text } = Typography;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Layout>\r\n      <span className='coming-soon'>\r\n        <Space\r\n          direction='vertical'\r\n          size={20}\r\n          className='main-card-container'\r\n          align='center'\r\n        >\r\n          <MainCard bodyStyle={{ padding: 15 }}>\r\n            <img\r\n              src={img}\r\n              alt='comingSoonImg'\r\n              height={370}\r\n              width={490}\r\n              draggable='false'\r\n              style={{\r\n                borderRadius: 6,\r\n                pointerEvents: 'none',\r\n                userSelect: 'none',\r\n              }}\r\n            />\r\n          </MainCard>\r\n          <BoldTitle>Coming Soon</BoldTitle>\r\n          <Text type='secondary' className='text-lg'>\r\n            We Are Working Hard to Give You a Better Experience.\r\n          </Text>\r\n          <Button type='primary' onClick={() => navigate('/')}>\r\n            Go Back to Dashboard\r\n          </Button>\r\n        </Space>\r\n      </span>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;\r\n","export default __webpack_public_path__ + \"static/media/eCommerce.2cc027b3.gif\";","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport ECommerce from '@assets/ComingSoon/eCommerce.gif';\r\n\r\nconst OrderAdd = () => {\r\n  return <ComingSoon img={ECommerce} />;\r\n};\r\n\r\nexport default OrderAdd;\r\n","export default __webpack_public_path__ + \"static/media/Truck.4164979d.gif\";","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport Truck from '@assets/ComingSoon/Truck.gif';\r\n\r\nconst ShptMgmt = () => {\r\n  return <ComingSoon img={Truck} />;\r\n};\r\n\r\nexport default ShptMgmt;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport DateRangePickerWithLabel from '@components/Input/DateRangePickerWithLabel';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { custStatusCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const orderInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'custID',\r\n    options: [\r\n      { value: 'custID', label: 'Customer ID' },\r\n      { value: 'custNm', label: 'Customer Name' },\r\n    ],\r\n  };\r\n\r\n  const custStatus = {\r\n    placeholder: 'Select Customer Status',\r\n    options: custStatusCat,\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={orderInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel\r\n            label='Customer Status'\r\n            select={custStatus}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel\r\n            label='Birthdate'\r\n            justify='start'\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel label='Registration Date' textSpan={7} />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Sales per Month'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n            justify='start'\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel label='Last Order Date' textSpan={7} />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","const custList: {\r\n  key: string;\r\n  custID: string;\r\n  custNm: string;\r\n  custType: 'agent' | 'drpshpr' | 'cust';\r\n  regDt: string;\r\n  salesMth?: number;\r\n  lastOrderDt: string;\r\n  status: 'active' | 'suspended';\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    custID: 'AGT-12346',\r\n    custNm: 'Tan Yuan Jie',\r\n    custType: 'agent',\r\n    regDt: 'Aug 16, 2020',\r\n    salesMth: 3260,\r\n    lastOrderDt: '23-08-2021 14:30',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '2',\r\n    custID: 'DC-54663',\r\n    custNm: 'Nur Nuraliah binti Haiqal',\r\n    custType: 'cust',\r\n    regDt: 'Jan 03, 2021',\r\n    lastOrderDt: '23-08-2021 12:41',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '3',\r\n    custID: 'DC-46626',\r\n    custNm: 'Jong Cai Tien',\r\n    custType: 'cust',\r\n    regDt: 'April 15, 2021',\r\n    lastOrderDt: '23-08-2021 09:21',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '4',\r\n    custID: 'DS-14153',\r\n    custNm: 'Mohammed Yusni bin Ayyadi',\r\n    custType: 'drpshpr',\r\n    regDt: 'Dec 22, 2019',\r\n    salesMth: 4500.5,\r\n    lastOrderDt: '22-08-2021 21:06',\r\n    status: 'suspended',\r\n  },\r\n  {\r\n    key: '5',\r\n    custID: 'AGT-53531',\r\n    custNm: 'Huzaifi Hafizh bin Zaidi',\r\n    custType: 'agent',\r\n    regDt: 'Sep 26, 2020',\r\n    salesMth: 2600,\r\n    lastOrderDt: '22-08-2021 19:34',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '6',\r\n    custID: 'DC-35354',\r\n    custNm: 'Steven Tan',\r\n    custType: 'cust',\r\n    regDt: 'Oct 01, 2020',\r\n    lastOrderDt: '21-08-2021 17:32',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '7',\r\n    custID: 'DC-92542',\r\n    custNm: 'Kar Ming Xiu',\r\n    custType: 'cust',\r\n    regDt: 'Feb 13, 2021',\r\n    lastOrderDt: '21-08-2021 15:30',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '8',\r\n    custID: 'DS-12454',\r\n    custNm: 'Shoba Bhullar a/l Darma Raja',\r\n    custType: 'drpshpr',\r\n    regDt: 'Aug 21, 2021',\r\n    salesMth: 360,\r\n    lastOrderDt: '21-08-2021 12:01',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '9',\r\n    custID: 'AGT-12425',\r\n    custNm: 'Mohd Ramli Zulkefli bin Nik Bakri',\r\n    custType: 'agent',\r\n    regDt: 'July 30, 2021',\r\n    salesMth: 240,\r\n    lastOrderDt: '20-08-2021 18:00',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '10',\r\n    custID: 'DC-98124',\r\n    custNm: 'Nur Khaliesah binti Yussof',\r\n    custType: 'cust',\r\n    regDt: 'Aug 20, 2021',\r\n    lastOrderDt: '20-08-2021 13:00',\r\n    status: 'active',\r\n  },\r\n];\r\n\r\nexport default custList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport custList from './custList';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { moneyFormatter } from '@utils/numUtils';\r\nimport { ActivateButton, SuspendButton } from '@components/Button/ActionButton';\r\nimport StatusTag from '@components/Tag/StatusTag';\r\nimport { custStatList } from '@utils/optionUtils';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst CustMgmt = () => {\r\n  const { Text } = Typography;\r\n  const [custListFltr, setCustListFltr] = useState(custList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setCustListFltr(\r\n        custList.filter((cust) =>\r\n          searchParams.get('status') !== null\r\n            ? cust.custType === searchParams.get('status')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const custTabList = [\r\n    { key: 'all', tab: 'All' },\r\n    { key: 'cust', tab: 'Direct Customer' },\r\n    { key: 'agent', tab: 'Agent' },\r\n    { key: 'drpshpr', tab: 'Dropshipper' },\r\n  ];\r\n\r\n  const activateBtn = (props: any) => <ActivateButton type='primary' />;\r\n\r\n  const suspendBtn = (props: any) => <SuspendButton type='primary' />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: activateBtn,\r\n      key: 'activate',\r\n      fltr: [{ fld: 'status', value: 'suspended', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: suspendBtn,\r\n      key: 'suspend',\r\n      fltr: [{ fld: 'status', value: 'active', rel: 'eq' }],\r\n    },\r\n  ];\r\n\r\n  const custMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Customer ID',\r\n      dataIndex: 'custID',\r\n      key: 'custID',\r\n      sorter: true,\r\n      fixed: 'left',\r\n      width: 150,\r\n      render: (data: number) => (\r\n        <div className='text-button-wrapper'>\r\n          <Text strong className='text-button'>\r\n            #{data}\r\n          </Text>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      dataIndex: 'custNm',\r\n      key: 'custNm',\r\n      sorter: true,\r\n      width: 200,\r\n    },\r\n    {\r\n      title: 'Customer Type',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (type: string) => (\r\n        <Text type='secondary'>\r\n          {type === 'agent'\r\n            ? 'Agent'\r\n            : type === 'drpshpr'\r\n            ? 'Dropshipper'\r\n            : type === 'cust'\r\n            ? 'Direct Customer'\r\n            : 'Unknown'}\r\n        </Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Registration Date',\r\n      dataIndex: 'regDt',\r\n      key: 'regDt',\r\n      sorter: true,\r\n      width: 160,\r\n    },\r\n    {\r\n      title: 'Sales per Month',\r\n      dataIndex: 'salesMth',\r\n      key: 'salesMth',\r\n      sorter: true,\r\n      width: 160,\r\n      render: (amount: number) =>\r\n        amount !== undefined ? (\r\n          <Text strong>{moneyFormatter(amount)}</Text>\r\n        ) : (\r\n          '-'\r\n        ),\r\n    },\r\n    {\r\n      title: 'Last Order Date',\r\n      dataIndex: 'lastOrderDt',\r\n      key: 'lastOrderDt',\r\n      sorter: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      align: 'center' as const,\r\n      width: 130,\r\n      render: (status: string) => (\r\n        <StatusTag status={status} statusList={custStatList} minWidth='90%' />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: ['custType', 'status'],\r\n      key: 'action',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (_: any, data: { [x: string]: string }) =>\r\n        data['custType'] === 'cust' ? (\r\n          '-'\r\n        ) : data['status'] === 'suspended' ? (\r\n          <ActivateButton type='link' color='info' />\r\n        ) : (\r\n          <SuspendButton type='link' color='info' />\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='cust-mgmt'>\r\n        <MainCard\r\n          tabList={custTabList}\r\n          activeTabKey={\r\n            searchParams.get('status') === null\r\n              ? 'all'\r\n              : searchParams.get('status')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { status: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Customer List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('custAdd'))}\r\n                >\r\n                  Add Customer\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={custListFltr}\r\n              columns={custMgmtColumns}\r\n              buttons={onSelectBtn}\r\n              scroll={{ x: 1200 }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CustMgmt;\r\n","const custRegList: {\r\n  key: string;\r\n  regID: string;\r\n  applicant: string;\r\n  custType: 'agent' | 'drpshpr';\r\n  gender: 'm' | 'f';\r\n  regDt: string;\r\n  contactNum: string;\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    regID: 'R-AGT-24845',\r\n    applicant: 'Nik Irfan Jelani bin Hammani',\r\n    custType: 'agent',\r\n    gender: 'm',\r\n    regDt: 'Aug 22 ,2021',\r\n    contactNum: '012-4567783',\r\n  },\r\n  {\r\n    key: '2',\r\n    regID: 'R-DS-52640',\r\n    applicant: 'Rabiatul binti Hasnan',\r\n    custType: 'drpshpr',\r\n    gender: 'f',\r\n    regDt: 'Aug 21 ,2021',\r\n    contactNum: '011-8721245',\r\n  },\r\n  {\r\n    key: '3',\r\n    regID: 'R-AGT-84449',\r\n    applicant: 'Tse Cho Fan',\r\n    custType: 'agent',\r\n    gender: 'f',\r\n    regDt: 'Aug 21 ,2021',\r\n    contactNum: '016-2215653',\r\n  },\r\n  {\r\n    key: '4',\r\n    regID: 'R-AGT-93651',\r\n    applicant: 'Priya Vadiveloo a/l Sasikumar Pereira',\r\n    custType: 'agent',\r\n    gender: 'f',\r\n    regDt: 'Aug 20 ,2021',\r\n    contactNum: '018-2241234',\r\n  },\r\n];\r\n\r\nexport default custRegList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport custRegList from './custRegList';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { AcceptButton, RejectButton } from '@components/Button/ActionButton';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst CustReg = () => {\r\n  const { Text } = Typography;\r\n  const [custListFltr, setCustListFltr] = useState(custRegList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setCustListFltr(\r\n        custRegList.filter((cust) =>\r\n          searchParams.get('status') !== null\r\n            ? cust.custType === searchParams.get('status')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n  const custTabList = [\r\n    { key: 'all', tab: 'All' },\r\n    { key: 'agent', tab: 'Agent' },\r\n    { key: 'drpshpr', tab: 'Dropshipper' },\r\n  ];\r\n\r\n  const acceptBtn = (props: any) => <AcceptButton type='primary' />;\r\n\r\n  const rejectBtn = (props: any) => <RejectButton type='primary' />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: acceptBtn,\r\n      key: 'accept',\r\n    },\r\n    {\r\n      element: rejectBtn,\r\n      key: 'reject',\r\n    },\r\n  ];\r\n\r\n  const custRegColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Registration ID',\r\n      dataIndex: 'regID',\r\n      key: 'regID',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (data: number) => (\r\n        <div className='text-button-wrapper'>\r\n          <Text strong className='text-button'>\r\n            #{data}\r\n          </Text>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Applicant',\r\n      dataIndex: 'applicant',\r\n      key: 'applicant',\r\n      sorter: true,\r\n      width: 300,\r\n    },\r\n    {\r\n      title: 'Register For',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      sorter: true,\r\n      width: 130,\r\n      render: (type: string) => (\r\n        <Text type='secondary'>\r\n          {type === 'agent'\r\n            ? 'Agent'\r\n            : type === 'drpshpr'\r\n            ? 'Dropshipper'\r\n            : null}\r\n        </Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Gender',\r\n      dataIndex: 'gender',\r\n      key: 'gender',\r\n      sorter: true,\r\n      width: 100,\r\n      render: (gender: string) => (\r\n        <Text type='secondary'>{gender === 'm' ? 'Male' : 'Female'}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Registration Date',\r\n      dataIndex: 'regDt',\r\n      key: 'regDt',\r\n      sorter: true,\r\n      width: 160,\r\n    },\r\n    {\r\n      title: 'Contact Number',\r\n      dataIndex: 'contactNum',\r\n      key: 'contactNum',\r\n      sorter: true,\r\n      width: 160,\r\n    },\r\n\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 120,\r\n      render: () => (\r\n        <Space direction='vertical' size={5}>\r\n          <AcceptButton type='link' />\r\n          <RejectButton type='link' />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='cust-reg'>\r\n        <MainCard\r\n          tabList={custTabList}\r\n          activeTabKey={\r\n            searchParams.get('status') === null\r\n              ? 'all'\r\n              : searchParams.get('status')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { status: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Customer List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('custAdd'))}\r\n                >\r\n                  Add Customer\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={custListFltr}\r\n              columns={custRegColumns}\r\n              buttons={onSelectBtn}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CustReg;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport UploadPicWall from '@components/Upload/UploadPicWall/UploadPicWall';\r\nimport AffixAdd from '@components/Affix/AffixAdd';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Anchor,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\nimport { MaskedInput } from 'antd-mask-input';\r\nimport profilePic from '@assets/avatar.png';\r\nimport { getStates, getCities, getPostcodes } from 'malaysia-postcodes';\r\nimport { sortByOrder } from '@utils/arrayUtils';\r\nimport {\r\n  custPositionCat,\r\n  custStatusCat,\r\n  genderCat,\r\n  maritalStatCat,\r\n  ynOptions,\r\n} from '@utils/optionUtils';\r\n\r\nconst CustAdd = () => {\r\n  const { Title } = Typography;\r\n  const { Option } = Select;\r\n  const { TextArea } = Input;\r\n  const { Link } = Anchor;\r\n  const [custForm] = Form.useForm();\r\n\r\n  const [state, setState] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [courtFlag, setCourtFlag] = useState(false);\r\n  const [criminalFlag, setCriminalFlag] = useState(false);\r\n  const [relativeFlag, setRelativeFlag] = useState(false);\r\n\r\n  const [fileList, setFileList]: any = useState([\r\n    {\r\n      uid: '-1',\r\n      name: 'image.png',\r\n      status: 'done',\r\n      url: profilePic,\r\n    },\r\n  ]);\r\n\r\n  const [targetOffset, setTargetOffset] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const anchorList = [\r\n    { link: 'basicInfo', title: 'Basic Information' },\r\n    { link: 'contactInfo', title: 'Contact Information' },\r\n    { link: 'address', title: 'Address' },\r\n    { link: 'employment', title: 'Employment Details' },\r\n    { link: 'position', title: 'Position' },\r\n    { link: 'declaration', title: 'Declaration Form' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTargetOffset(window.innerHeight / 1.5);\r\n  }, []);\r\n\r\n  return (\r\n    <Form name='custForm' layout='vertical' size='small' form={custForm}>\r\n      <Layout>\r\n        <Col xs={16} xl={19} className='center-flex'>\r\n          <MainCardContainer>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='basicInfo'>\r\n                  Basic Information\r\n                </Title>\r\n                <Form.Item\r\n                  label='Customer Name'\r\n                  name='custNm'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the customer name.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. Tan Yuan Jie'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Customer Photo'\r\n                  name='custImg'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please upload the customer photo.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <UploadPicWall\r\n                    fileList={fileList}\r\n                    onChange={(info) => {\r\n                      setFileList([...info.fileList]);\r\n                    }}\r\n                    maxCount={1}\r\n                    accept='.jpg'\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Gender'\r\n                  name='gender'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please select the customer gender.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={genderCat} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Birthdate'\r\n                  name='birthdate'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please select the customer birthdate.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker style={{ width: '40%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Marital Status' name='maritalStat'>\r\n                  <Radio.Group options={maritalStatCat} />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='contactInfo'>\r\n                  Contact Information\r\n                </Title>\r\n                <div>\r\n                  <Space direction='vertical' size={15} className='full-width'>\r\n                    <Form.Item\r\n                      label='Phone Number'\r\n                      name='phoneNum'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter the customer's phone number.\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <MaskedInput\r\n                        prefix='(+60)'\r\n                        mask='11-111 1111'\r\n                        placeholderChar=' '\r\n                        placeholder='12-345 6789'\r\n                        style={{ width: '20%' }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      label='Email Address'\r\n                      name='email'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter the customer's email address.\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type='email'\r\n                        placeholder='e.g. xxxxx@gmail.com'\r\n                        style={{ width: '40%' }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Space>\r\n                  <Divider />\r\n                  <Space direction='vertical' size={15} className='full-width'>\r\n                    <Title level={5}>Emergency Contact</Title>\r\n\r\n                    <Form.Item\r\n                      label='Name'\r\n                      name='emerg'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message:\r\n                            'Please enter the name of the emergency contact.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        placeholder='e.g. Loo Phaik Cheng'\r\n                        style={{ width: '40%' }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      label='Relationship'\r\n                      name='relationship'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message:\r\n                            'Please justify the relationship with the emergency contact.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        placeholder='e.g. Mother'\r\n                        style={{ width: '40%' }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      label='Contact Number'\r\n                      name='emrgContact'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message:\r\n                            'Please provide the contact number of the emergency contact.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <MaskedInput\r\n                        prefix='(+60)'\r\n                        mask='11-111 1111'\r\n                        placeholderChar=' '\r\n                        placeholder='12-345 6789'\r\n                        style={{ width: '20%' }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Space>\r\n                </div>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='address'>\r\n                  Address\r\n                </Title>\r\n\r\n                <Form.Item\r\n                  label='State'\r\n                  name='state'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's state.\",\r\n                    },\r\n                  ]}\r\n                  style={{ width: '25%' }}\r\n                >\r\n                  <Select\r\n                    placeholder='Please select the state'\r\n                    onChange={(value: string) => {\r\n                      setState(value);\r\n                      custForm.resetFields(['city', 'postcode']);\r\n                      setCity('');\r\n                    }}\r\n                  >\r\n                    {sortByOrder(getStates()).map((state: string) => (\r\n                      <Option key={state}>{state}</Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='City'\r\n                  name='city'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's city.\",\r\n                    },\r\n                  ]}\r\n                  style={{ width: '25%' }}\r\n                >\r\n                  <Select\r\n                    placeholder='Please select the city'\r\n                    disabled={!state}\r\n                    onChange={(value: string) => {\r\n                      setCity(value);\r\n                      custForm.resetFields(['postcode']);\r\n                    }}\r\n                  >\r\n                    {sortByOrder(getCities(state)).map((city: string) => (\r\n                      <Option key={city}>{city}</Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Postal Code'\r\n                  name='postcode'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's postal code.\",\r\n                    },\r\n                  ]}\r\n                  style={{ width: '25%' }}\r\n                >\r\n                  <Select\r\n                    placeholder='Please select the postal code'\r\n                    disabled={!state || !city}\r\n                  >\r\n                    {sortByOrder(getPostcodes(state, city)).map(\r\n                      (postcode: string) => (\r\n                        <Option value={postcode} key={postcode}>\r\n                          {postcode}\r\n                        </Option>\r\n                      )\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Address'\r\n                  name='address'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter the customer's address.\",\r\n                    },\r\n                  ]}\r\n                  style={{ width: '60%' }}\r\n                >\r\n                  <TextArea\r\n                    rows={4}\r\n                    placeholder=\"Please enter customer's address\"\r\n                    showCount\r\n                    maxLength={128}\r\n                    autoSize={{ minRows: 4, maxRows: 12 }}\r\n                  />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='employment'>\r\n                  Employment Details\r\n                </Title>\r\n                <Form.Item\r\n                  label='Current Occupation'\r\n                  name='occupation'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Please enter the customer's current occupation.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. Marketing Manager'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item label='Company Name' name='company'>\r\n                  <Input\r\n                    placeholder='e.g. SHRF Food Industries Sdn Bhd'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='position'>\r\n                  Position\r\n                </Title>\r\n                <Form.Item\r\n                  label=\"Customer's Position\"\r\n                  name='position'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's position.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={custPositionCat} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Status'\r\n                  name='status'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's status.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={custStatusCat} />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='declaration'>\r\n                  Declaration Form\r\n                </Title>\r\n                <Form.Item\r\n                  label='Has the customer been declared bankrupt? '\r\n                  name='bankrupt'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={ynOptions} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Has the customer been charged in court?'\r\n                  name='court'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group\r\n                    options={ynOptions}\r\n                    onChange={(e: any) => setCourtFlag(e.target.value)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Please include any guilty pleas or convictions based on the plea bargain or pretrial diversion program:'\r\n                  name='courtDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                  style={{ marginLeft: 10, width: '60%' }}\r\n                  hidden={!courtFlag}\r\n                >\r\n                  <TextArea\r\n                    rows={4}\r\n                    showCount\r\n                    maxLength={128}\r\n                    autoSize={{ minRows: 4, maxRows: 12 }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Do the customer has any criminal record or any pending criminal case?'\r\n                  name='criminal'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group\r\n                    options={ynOptions}\r\n                    onChange={(e: any) => setCriminalFlag(e.target.value)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Please explain:'\r\n                  name='criminalDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                  style={{ marginLeft: 10, width: '60%' }}\r\n                  hidden={!criminalFlag}\r\n                >\r\n                  <TextArea\r\n                    rows={4}\r\n                    showCount\r\n                    maxLength={128}\r\n                    autoSize={{ minRows: 4, maxRows: 12 }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Are any relatives or family members of the customer currently employed as the agent or drop-shipper in Sharifah Food?'\r\n                  name='relative'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group\r\n                    options={ynOptions}\r\n                    onChange={(e: any) => setRelativeFlag(e.target.value)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Please specify the name(s) of relative(s) or family member(s):'\r\n                  name='relativeDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                  style={{ marginLeft: 10, width: '60%' }}\r\n                  hidden={!relativeFlag}\r\n                >\r\n                  <TextArea\r\n                    rows={4}\r\n                    showCount\r\n                    maxLength={128}\r\n                    autoSize={{ minRows: 4, maxRows: 12 }}\r\n                  />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <AffixAdd offsetBottom={0} label='Customer' />\r\n          </MainCardContainer>\r\n        </Col>\r\n        <Col xs={8} xl={5}>\r\n          <Anchor offsetTop={150} targetOffset={targetOffset}>\r\n            {anchorList.map((anchor) => (\r\n              <Link\r\n                key={anchor.link}\r\n                href={`#${anchor.link}`}\r\n                title={anchor.title}\r\n              />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Layout>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CustAdd;\r\n","import { Col, Row, DatePicker, DatePickerProps } from 'antd';\r\nimport { MdChevronRight } from 'react-icons/md';\r\nimport './MenuDatePicker.less';\r\n\r\ntype MenuDatePickerProps = DatePickerProps & {\r\n  label: string;\r\n};\r\n\r\nconst MenuDatePicker = ({\r\n  label,\r\n  className,\r\n  ...props\r\n}: MenuDatePickerProps) => (\r\n  <Row align='middle' justify='space-between'>\r\n    <Col span={20}>{label}</Col>\r\n    <Col className='center-flex'>\r\n      <MdChevronRight size={20} className='color-grey' />\r\n    </Col>\r\n    <DatePicker\r\n      bordered={false}\r\n      allowClear={false}\r\n      inputReadOnly\r\n      style={{ height: 0, width: 0, padding: 0 }}\r\n      className={`menu-date-picker${\r\n        className !== undefined ? ` ${className}` : ''\r\n      }`}\r\n      {...props}\r\n    />\r\n  </Row>\r\n);\r\n\r\nexport default MenuDatePicker;\r\n","import React, { useState } from 'react';\r\nimport Button from '@components/Button';\r\nimport { Card, Col, Dropdown, Menu, MenuProps, Row } from 'antd';\r\nimport moment from 'moment';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport { HiOutlineCalendar } from 'react-icons/hi';\r\nimport MenuDatePicker from '../MenuDatePicker';\r\nimport {\r\n  getDt,\r\n  getPastDays,\r\n  getPrevDt,\r\n  validateDay,\r\n  validateWeek,\r\n  validateMonth,\r\n  validateYear,\r\n  validateDropdownDate,\r\n  getMomentPrevDt,\r\n} from '@utils/dateUtils';\r\nimport Popover from '@components/Popover';\r\n\r\nexport interface DateInfo {\r\n  date: string;\r\n  label: string;\r\n  cat: string;\r\n}\r\n\r\nexport interface DropdownDateProps extends Omit<MenuProps, 'onChange'> {\r\n  onChange?: (dateInfo: DateInfo) => void;\r\n}\r\n\r\nconst DropdownDate = ({\r\n  onChange = () => '',\r\n  className,\r\n  style,\r\n  ...props\r\n}: DropdownDateProps) => {\r\n  const [date, setDate] = useState(getDt());\r\n  const [label, setLabel] = useState('Today');\r\n  const [dropdownOnBlur, setDropdownOnBlur] = useState(true);\r\n  const [cat, setCat] = useState('tdy');\r\n  const [itemHovered, setItemHovered] = useState(false);\r\n  const [dropdownVisible, setDropdownVisible] = useState(false);\r\n  const [todayPopover, setTodayPopover] = useState(false);\r\n  const [ytdPopover, setYtdPopover] = useState(false);\r\n  const [past7dPopover, setpast7dPopover] = useState(false);\r\n  const [past30dPopover, setpast30dPopover] = useState(false);\r\n  const [dayPicker, setDayPicker] = useState({ ind: false, defVal: moment() });\r\n  const [weekPicker, setWeekPicker] = useState({ ind: false, defVal: null });\r\n  const [mthPicker, setMthPicker] = useState({ ind: false, defVal: null });\r\n  const [yrPicker, setYrPicker] = useState({ ind: false, defVal: null });\r\n  const [disableNext, setDisableNext] = useState(true);\r\n\r\n  const pickerKeys = ['byDay', 'byWeek', 'byMonth', 'byYear'];\r\n\r\n  const getKey = (date, cat) =>\r\n    pickerKeys.includes(cat) ? cat : `${cat}/${date}`;\r\n\r\n  const validateDefOpen = (key: string) =>\r\n    getKey(date, cat).includes(key) && dropdownVisible && !itemHovered;\r\n\r\n  const setNewDt = (dateInfo: DateInfo & { disabledNext?: boolean }) => {\r\n    setDate(dateInfo.date);\r\n    setLabel(dateInfo.label);\r\n    setCat(dateInfo.cat);\r\n    setDisableNext(dateInfo.disabledNext);\r\n    onChange({\r\n      date: dateInfo.date,\r\n      label: dateInfo.label,\r\n      cat: dateInfo.cat,\r\n    });\r\n  };\r\n\r\n  const hideAllPickers = () => {\r\n    setDayPicker({ ind: false, defVal: dayPicker.defVal });\r\n    setWeekPicker({ ind: false, defVal: weekPicker.defVal });\r\n    setMthPicker({ ind: false, defVal: mthPicker.defVal });\r\n    setYrPicker({ ind: false, defVal: yrPicker.defVal });\r\n  };\r\n\r\n  const setPicker = (picker: 'day' | 'week' | 'month' | 'year', value) => {\r\n    if (picker === 'day') {\r\n      setDayPicker({ ind: false, defVal: value });\r\n      setWeekPicker({ ind: weekPicker.ind, defVal: null });\r\n      setMthPicker({ ind: mthPicker.ind, defVal: null });\r\n      setYrPicker({ ind: yrPicker.ind, defVal: null });\r\n    } else if (picker === 'week') {\r\n      setDayPicker({ ind: dayPicker.ind, defVal: null });\r\n      setWeekPicker({ ind: false, defVal: value });\r\n      setMthPicker({ ind: mthPicker.ind, defVal: null });\r\n      setYrPicker({ ind: yrPicker.ind, defVal: null });\r\n    } else if (picker === 'month') {\r\n      setDayPicker({ ind: dayPicker.ind, defVal: null });\r\n      setWeekPicker({ ind: weekPicker.ind, defVal: null });\r\n      setMthPicker({ ind: false, defVal: value });\r\n      setYrPicker({ ind: yrPicker.ind, defVal: null });\r\n    } else if (picker === 'year') {\r\n      setDayPicker({ ind: dayPicker.ind, defVal: null });\r\n      setWeekPicker({ ind: weekPicker.ind, defVal: null });\r\n      setMthPicker({ ind: mthPicker.ind, defVal: null });\r\n      setYrPicker({ ind: false, defVal: value });\r\n    }\r\n  };\r\n\r\n  const handlePickerChange = (\r\n    dateInfo: DateInfo & { disabledNext: boolean },\r\n    picker: 'day' | 'week' | 'month' | 'year',\r\n    value: moment.Moment\r\n  ) => {\r\n    setNewDt(dateInfo);\r\n    setDropdownVisible(false);\r\n    setPicker(picker, value);\r\n  };\r\n\r\n  const addDate = () => {\r\n    handleDateFunc('next');\r\n  };\r\n\r\n  const subtractDate = () => {\r\n    handleDateFunc('previous');\r\n  };\r\n\r\n  const handleDateFunc = (func: 'next' | 'previous') => {\r\n    let dateInfo =\r\n      func === 'next'\r\n        ? validateDropdownDate(date, cat, 'DD-MM-YYYY', undefined, 'next')\r\n        : validateDropdownDate(date, cat, 'DD-MM-YYYY', undefined, 'previous');\r\n    setNewDt(dateInfo);\r\n  };\r\n\r\n  const hideNxtPrevBtn = new RegExp(/^past\\d*d$/).test(cat);\r\n\r\n  const dateLabelMapper = [\r\n    { cat: 'tdy', label: 'Today' },\r\n    { cat: 'ytd', label: 'Yesterday' },\r\n    { cat: 'past7d', label: 'Past 7 Days' },\r\n    { cat: 'past30d', label: 'Past 30 Days' },\r\n  ];\r\n\r\n  const DateMenu = (\r\n    <Menu\r\n      onClick={(item) => {\r\n        let [newDtCat, newDt] = item.key.split('/');\r\n        if (!pickerKeys.includes(item.key)) {\r\n          setNewDt(validateDropdownDate(newDt, newDtCat, 'DD-MM-YYYY'));\r\n          setDropdownVisible(false);\r\n          setDayPicker({ ind: dayPicker.ind, defVal: null });\r\n          setWeekPicker({ ind: weekPicker.ind, defVal: null });\r\n          setMthPicker({ ind: mthPicker.ind, defVal: null });\r\n          setYrPicker({ ind: yrPicker.ind, defVal: null });\r\n        }\r\n      }}\r\n      onMouseOver={() => setDropdownOnBlur(false)}\r\n      onMouseLeave={() => setDropdownOnBlur(true)}\r\n      selectedKeys={[getKey(date, cat)]}\r\n      style={{ width: 150 }}\r\n      {...props}\r\n    >\r\n      <Menu.Item\r\n        key={`tdy/${getDt()}`}\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setTodayPopover(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setTodayPopover(false);\r\n        }}\r\n      >\r\n        <Popover\r\n          visible={todayPopover || validateDefOpen(`tdy/${getDt()}`)}\r\n          key={getDt()}\r\n          content={getDt()}\r\n          placement='right'\r\n          align={{\r\n            points: ['cc', 'cr'],\r\n            offset: [160, 0],\r\n          }}\r\n        >\r\n          {dateLabelMapper.find((mapper) => mapper.cat === 'tdy').label}\r\n        </Popover>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key={`ytd/${getPrevDt()}`}\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setYtdPopover(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setYtdPopover(false);\r\n        }}\r\n      >\r\n        <Popover\r\n          visible={ytdPopover || validateDefOpen(`ytd/${getPrevDt()}`)}\r\n          content={getPrevDt()}\r\n          placement='right'\r\n          align={{\r\n            points: ['cc', 'cr'],\r\n            offset: [140, 0],\r\n          }}\r\n        >\r\n          {dateLabelMapper.find((mapper) => mapper.cat === 'ytd').label}\r\n        </Popover>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key={`past7d/${getPastDays(7)}`}\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setpast7dPopover(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setpast7dPopover(false);\r\n        }}\r\n      >\r\n        <Popover\r\n          visible={past7dPopover || validateDefOpen(`past7d/${getPastDays(7)}`)}\r\n          content={getPastDays(7)}\r\n          placement='right'\r\n          align={{\r\n            points: ['cc', 'cr'],\r\n            offset: [173, 0],\r\n          }}\r\n        >\r\n          {dateLabelMapper.find((mapper) => mapper.cat === 'past7d').label}\r\n        </Popover>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key={`past30d/${getPastDays(30)}`}\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setpast30dPopover(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setpast30dPopover(false);\r\n        }}\r\n      >\r\n        <Popover\r\n          visible={\r\n            past30dPopover || validateDefOpen(`past30d/${getPastDays(30)}`)\r\n          }\r\n          content={getPastDays(30)}\r\n          placement='right'\r\n          align={{\r\n            points: ['cc', 'cr'],\r\n            offset: [166, 0],\r\n          }}\r\n        >\r\n          {dateLabelMapper.find((mapper) => mapper.cat === 'past30d').label}\r\n        </Popover>\r\n      </Menu.Item>\r\n\r\n      <Menu.Divider />\r\n\r\n      <Menu.Item\r\n        key='byDay'\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setDayPicker({ ind: true, defVal: dayPicker.defVal });\r\n        }}\r\n      >\r\n        <MenuDatePicker\r\n          label='By Day'\r\n          open={dayPicker.ind || validateDefOpen('byDay')}\r\n          showToday={false}\r\n          value={dayPicker.defVal !== null && dayPicker.defVal}\r\n          disabledDate={(current) => current > moment()}\r\n          onChange={(value) => {\r\n            handlePickerChange(validateDay(value, 'byDay'), 'day', value);\r\n          }}\r\n          dropdownAlign={{\r\n            points: ['cc', 'cr'],\r\n            offset: [285, -30],\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key='byWeek'\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setWeekPicker({ ind: true, defVal: weekPicker.defVal });\r\n        }}\r\n      >\r\n        <MenuDatePicker\r\n          label='By Week'\r\n          picker='week'\r\n          open={weekPicker.ind || validateDefOpen('byWeek')}\r\n          value={weekPicker.defVal !== null && weekPicker.defVal}\r\n          disabledDate={(current) => current > getMomentPrevDt()}\r\n          onChange={(value) => {\r\n            handlePickerChange(validateWeek(value, 'byWeek'), 'week', value);\r\n          }}\r\n          dropdownAlign={{\r\n            points: ['cc', 'cr'],\r\n            offset: [285, -64],\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key='byMonth'\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setMthPicker({ ind: true, defVal: mthPicker.defVal });\r\n        }}\r\n      >\r\n        <MenuDatePicker\r\n          label='By Month'\r\n          picker='month'\r\n          open={mthPicker.ind || validateDefOpen('byMonth')}\r\n          value={mthPicker.defVal !== null && mthPicker.defVal}\r\n          disabledDate={(current) => current > moment()}\r\n          onChange={(value) => {\r\n            handlePickerChange(validateMonth(value, 'byMonth'), 'month', value);\r\n          }}\r\n          dropdownAlign={{\r\n            points: ['cc', 'cr'],\r\n            offset: [285, -95],\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key='byYear'\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setYrPicker({ ind: true, defVal: yrPicker.defVal });\r\n        }}\r\n      >\r\n        <MenuDatePicker\r\n          label='By Year'\r\n          picker='year'\r\n          open={yrPicker.ind || validateDefOpen('byYear')}\r\n          value={yrPicker.defVal !== null && yrPicker.defVal}\r\n          disabledDate={(current) => current > moment()}\r\n          onChange={(value) => {\r\n            handlePickerChange(validateYear(value, 'byYear'), 'year', value);\r\n          }}\r\n          dropdownAlign={{\r\n            points: ['cc', 'cr'],\r\n            offset: [285, -125],\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      bodyStyle={{ padding: 5, textAlign: 'center' }}\r\n      style={style}\r\n      className={className}\r\n    >\r\n      <Row justify='center' align='middle'>\r\n        <Col>\r\n          <Button\r\n            type='text'\r\n            style={{ background: 'none' }}\r\n            className='center-flex'\r\n            icon={<MdChevronLeft size={25} />}\r\n            onClick={subtractDate}\r\n            hidden={hideNxtPrevBtn}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Dropdown\r\n            visible={dropdownVisible}\r\n            overlay={DateMenu}\r\n            placement='bottomCenter'\r\n          >\r\n            <Button\r\n              type='text'\r\n              icon={<HiOutlineCalendar size={20} style={{ marginRight: 5 }} />}\r\n              style={{ background: 'none' }}\r\n              className='center-flex'\r\n              onBlur={() => {\r\n                if (dropdownOnBlur === true) {\r\n                  setDropdownVisible(false);\r\n                  hideAllPickers();\r\n                }\r\n              }}\r\n              onClick={() => {\r\n                dropdownVisible === false\r\n                  ? setDropdownVisible(true)\r\n                  : setDropdownVisible(false);\r\n                setItemHovered(false);\r\n              }}\r\n            >\r\n              {`${label} (${date})`}\r\n            </Button>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            type='text'\r\n            style={{ background: 'none' }}\r\n            className='center-flex'\r\n            icon={<MdChevronRight size={25} />}\r\n            onClick={addDate}\r\n            disabled={disableNext}\r\n            hidden={hideNxtPrevBtn}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DropdownDate;\r\n","import moment from 'moment';\r\n\r\nconst statisticsData: any = {\r\n  date: moment().format('DD MMMM YYYY'),\r\n  sales: 830,\r\n  profit: 500,\r\n  visitors: 20,\r\n  newCust: 2,\r\n  newOrder: 10,\r\n};\r\n\r\nexport default statisticsData;\r\n","const keyMetricsList: {\r\n  key: string;\r\n  label: string;\r\n  desc: string;\r\n  cat?: 'money' | 'percent';\r\n  toFixed?: number;\r\n}[] = [\r\n  {\r\n    key: 'sales',\r\n    label: 'Sales',\r\n    desc: 'Total value of placed orders over the selected time period, including the cancelled orders.',\r\n    cat: 'money',\r\n    toFixed: 2,\r\n  },\r\n  {\r\n    key: 'revenue',\r\n    label: 'Revenue',\r\n    desc: '',\r\n    cat: 'money',\r\n    toFixed: 2,\r\n  },\r\n  { key: 'orders', label: 'Orders', desc: '' },\r\n  { key: 'visitors', label: 'Visitors', desc: '' },\r\n  { key: 'buyers', label: 'Buyers', desc: '' },\r\n  {\r\n    key: 'conversionRt',\r\n    label: 'Conversion Rate',\r\n    cat: 'percent',\r\n    desc: '',\r\n  },\r\n  {\r\n    key: 'salesPerOrder',\r\n    label: 'Sales per Order',\r\n    cat: 'money',\r\n    desc: 'Average value of a single placed order over selected time period. Total sales divided by the total number of orders.',\r\n    toFixed: 2,\r\n  },\r\n  {\r\n    key: 'avgOrderRev',\r\n    label: 'Average Order Revenue',\r\n    cat: 'money',\r\n    desc: '',\r\n    toFixed: 2,\r\n  },\r\n  { key: 'unitSold', label: 'Unit Sold', desc: '' },\r\n  { key: 'avgBktSize', label: 'Average Basket Size', desc: '' },\r\n];\r\n\r\nexport default keyMetricsList;\r\n","  const topProduct: {\r\n  date: string;\r\n  type: 'sales' | 'units';\r\n  items: {\r\n    label: string;\r\n    cat?: string;\r\n    value: number;\r\n  }[];\r\n} = {\r\n  date: '2021 August',\r\n  type: 'sales',\r\n  items: [\r\n    {\r\n      label: 'Kari Ayam',\r\n      cat: 'Ready-To-Eat',\r\n      value: 80,\r\n    },\r\n    {\r\n      label: 'Sambal Ikan Bilis',\r\n      cat: 'Ready-To-Eat',\r\n      value: 54,\r\n    },\r\n    {\r\n      label: 'Nasi Briyani Bukhari',\r\n      cat: 'Ready-To-Cook',\r\n      value: 47,\r\n    },\r\n    {\r\n      label: 'Rendang Dendeng Daging',\r\n      cat: 'Ready-To-Eat',\r\n      value: 53,\r\n    },\r\n    {\r\n      label: 'Pes Sambal Tumis',\r\n      cat: 'Paste',\r\n      value: 38,\r\n    },\r\n    {\r\n      label: 'Pes Masakan Kerutuk',\r\n      cat: 'Paste',\r\n      value: 22,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default topProduct;\r\n","import React, { useEffect, useState, lazy, Suspense } from 'react';\r\nimport ColorCard from '@components/Card/ColorCard';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport DropdownDate from '@components/Input/DropdownDate';\r\nimport Layout from '@components/Layout';\r\nimport Statistics from '@components/Statistics';\r\nimport statisticsList from '@components/Statistics/statisticsList';\r\nimport { Col, Row, Space, Spin, Typography, message, Checkbox } from 'antd';\r\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport statisticsData from './statisticsData';\r\nimport { formatDt, getDt } from '@utils/dateUtils';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport keyMetricsList from './keyMetricsList';\r\nimport { splitIntoChunks } from '@utils/arrayUtils';\r\nimport { moneyFormatter, percentFormatter } from '@utils/numUtils';\r\nimport RankingList from '@components/List/RankingList';\r\nimport topProduct from './topProducts';\r\nimport { prodCat } from '@utils/optionUtils';\r\nimport Popover from '@components/Popover';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst LineChart = lazy(() => import('@components/Chart/LineChart'));\r\nconst CarouselArrow = lazy(() => import('@components/Carousel/CarouselArrow'));\r\n\r\nconst BusinessStatistics = () => {\r\n  message.config({ duration: 2 });\r\n  const { Text, Title } = Typography;\r\n\r\n  const DashboardContainer = (props) => (\r\n    <Space direction='vertical' size={25} className='full-width'>\r\n      {props.children}\r\n    </Space>\r\n  );\r\n\r\n  const StatisticsDashboard = (props) => {\r\n    const [statisticsDtInfo, setStatisticsDtInfo] = useState({\r\n      date: getDt(),\r\n      label: 'Today',\r\n      cat: 'tdy',\r\n    });\r\n    const [statisticsTdy, setStatisticsTdy] = useState(\r\n      getDt(undefined, undefined, 'HH:mm:ss')\r\n    );\r\n\r\n    useEffect(() => {\r\n      const updateStatistics = setInterval(\r\n        () => setStatisticsTdy(getDt(undefined, undefined, 'HH:mm:ss')),\r\n        600000\r\n      );\r\n      return () => {\r\n        clearInterval(updateStatistics);\r\n      };\r\n    });\r\n\r\n    return (\r\n      <DashboardContainer>\r\n        <DropdownDate\r\n          onChange={(dateInfo) => {\r\n            setStatisticsDtInfo(dateInfo);\r\n          }}\r\n          className='main-card'\r\n        />\r\n        <Row justify='center' gutter={[20, 20]}>\r\n          {statisticsList.map((statistics, index) => (\r\n            <Col key={`col-${statistics.key}`} flex='20%'>\r\n              <MainCard bodyStyle={{ padding: 15 }} style={{ height: 105 }}>\r\n                <Statistics\r\n                  key={statistics.key}\r\n                  value={statisticsData[statistics.key]}\r\n                  title={statistics.title}\r\n                  date={statisticsDtInfo.date}\r\n                  untilTm={\r\n                    statisticsDtInfo.cat === 'tdy'\r\n                      ? `Until ${statisticsTdy}`\r\n                      : ''\r\n                  }\r\n                  icon={statistics.icon}\r\n                  color={statistics.color}\r\n                  prefix={statistics.prefix}\r\n                  suffix={statistics.suffix}\r\n                  toFixed={statistics.toFixed}\r\n                  space={15}\r\n                  valueSize={16}\r\n                  avatarSize={55}\r\n                />\r\n              </MainCard>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </DashboardContainer>\r\n    );\r\n  };\r\n\r\n  const KeyMetricsDashboard = (props) => {\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n\r\n    const [keyMetricsDtInfo, setKeyMetricsDtInfo] = useState({\r\n      date: getDt(),\r\n      label: 'Today',\r\n      cat: 'tdy',\r\n    });\r\n    const [selectedKeyMetrics, setSelectedKeyMetrics] = useState(['Sales']);\r\n\r\n    const minSelectedMetrics = 1;\r\n    const [maxSelectedMetrics, setMaxSelectedMetrics] = useState(5);\r\n\r\n    const handleKeyMetricsClick = (keyMetrics) => {\r\n      if (maxSelectedMetrics === 1) {\r\n        setSelectedKeyMetrics([keyMetrics.label]);\r\n        return;\r\n      }\r\n\r\n      if (\r\n        selectedKeyMetrics.length === minSelectedMetrics &&\r\n        selectedKeyMetrics.includes(keyMetrics.label)\r\n      ) {\r\n        messageApi.open({\r\n          key: 'minSelectedMetrics',\r\n          type: 'warning',\r\n          content: (\r\n            <span>\r\n              You should select at least <strong>{minSelectedMetrics}</strong>{' '}\r\n              Key Metrics.\r\n            </span>\r\n          ),\r\n        });\r\n        setTimeout(() => message.destroy('minSelectedMetrics'), 2000);\r\n        return;\r\n      }\r\n\r\n      if (\r\n        selectedKeyMetrics.length >= maxSelectedMetrics &&\r\n        !selectedKeyMetrics.includes(keyMetrics.label)\r\n      ) {\r\n        messageApi.open({\r\n          key: 'maxSelectedMetrics',\r\n          type: 'warning',\r\n          content: (\r\n            <span>\r\n              You can only select up to <strong>{maxSelectedMetrics}</strong>{' '}\r\n              Key Metrics.\r\n            </span>\r\n          ),\r\n        });\r\n\r\n        setTimeout(() => message.destroy('maxSelectedMetrics'), 2000);\r\n\r\n        return;\r\n      }\r\n      !selectedKeyMetrics.includes(keyMetrics.label)\r\n        ? setSelectedKeyMetrics([...selectedKeyMetrics, keyMetrics.label])\r\n        : setSelectedKeyMetrics([\r\n            ...selectedKeyMetrics.filter(\r\n              (selected) => selected !== keyMetrics.label\r\n            ),\r\n          ]);\r\n    };\r\n\r\n    const data = [\r\n      { Day: '1', Sales: 300, cat: '1' },\r\n      { Day: '2', Sales: 356, cat: '1' },\r\n      { Day: '3', Sales: 481, cat: '1' },\r\n      { Day: '4', Sales: 237, cat: '1' },\r\n      { Day: '5', Sales: 285, cat: '1' },\r\n      { Day: '6', Sales: 300, cat: '1' },\r\n      { Day: '1', Sales: 107, cat: '2' },\r\n      { Day: '2', Sales: 402, cat: '2' },\r\n      { Day: '3', Sales: 266, cat: '2' },\r\n      { Day: '4', Sales: 470, cat: '2' },\r\n      { Day: '5', Sales: 391, cat: '2' },\r\n      { Day: '6', Sales: 379, cat: '2' },\r\n      { Day: '7', Sales: 107, cat: '2' },\r\n      { Day: '8', Sales: 402, cat: '2' },\r\n      { Day: '9', Sales: 266, cat: '2' },\r\n      { Day: '10', Sales: 470, cat: '2' },\r\n      { Day: '11', Sales: 391, cat: '2' },\r\n      { Day: '12', Sales: 379, cat: '2' },\r\n      { Day: '13', Sales: 418, cat: '3' },\r\n      { Day: '14', Sales: 301, cat: '3' },\r\n      { Day: '15', Sales: 317, cat: '3' },\r\n      { Day: '16', Sales: 30, cat: '3' },\r\n      { Day: '17', Sales: 391, cat: '3' },\r\n      { Day: '18', Sales: 106, cat: '3' },\r\n      { Day: '19', Sales: 465, cat: '4' },\r\n      { Day: '20', Sales: 50, cat: '4' },\r\n      { Day: '21', Sales: 321, cat: '4' },\r\n      { Day: '22', Sales: 279, cat: '4' },\r\n      { Day: '23', Sales: 186, cat: '4' },\r\n      { Day: '24', Sales: 500, cat: '4' },\r\n      { Day: '25', Sales: 223, cat: '5' },\r\n      { Day: '26', Sales: 447, cat: '5' },\r\n      { Day: '27', Sales: 70, cat: '5' },\r\n      { Day: '28', Sales: 58, cat: '5' },\r\n      { Day: '29', Sales: 400, cat: '5' },\r\n      { Day: '30', Sales: 600, cat: '5' },\r\n    ];\r\n\r\n    const keyMetricsValList = [\r\n      { key: 'sales', value: 600 },\r\n      { key: 'revenue', value: 324.5 },\r\n      { key: 'conversionRt', value: 0.2949 },\r\n      { key: 'salesPerOrder', value: 40.0 },\r\n      { key: 'visitors', value: 78 },\r\n      { key: 'buyers', value: 32 },\r\n      { key: 'orders', value: 16 },\r\n      { key: 'avgOrderRev', value: 20.25 },\r\n      { key: 'unitSold', value: 42 },\r\n      { key: 'avgBktSize', value: 2.625 },\r\n    ];\r\n\r\n    const getKeyMetricsVal = (keyMetrics) => {\r\n      let value = keyMetricsValList.find(\r\n        (metrics) => metrics.key === keyMetrics.key\r\n      ).value;\r\n\r\n      return keyMetrics.cat === 'money'\r\n        ? moneyFormatter(value, true)\r\n        : keyMetrics.cat === 'percent'\r\n        ? percentFormatter(value, true)\r\n        : value;\r\n    };\r\n\r\n    return (\r\n      <DashboardContainer>\r\n        {contextHolder}\r\n        <DropdownDate\r\n          onChange={(dateInfo) => {\r\n            setKeyMetricsDtInfo(dateInfo);\r\n          }}\r\n          className='main-card'\r\n        />\r\n        <MainCard>\r\n          <DashboardContainer>\r\n            <Row justify='space-between' align='middle'>\r\n              <Col>\r\n                <BoldTitle level={5}>Key Metrics</BoldTitle>\r\n                <Text className='dashboard-grey-text'>\r\n                  {formatDt(\r\n                    keyMetricsDtInfo.date,\r\n                    keyMetricsDtInfo.cat,\r\n                    'DD-MM-YYYY',\r\n                    'MMM DD, YYYY'\r\n                  )}\r\n                </Text>\r\n              </Col>\r\n              <Col>\r\n                <Button type='primary'>Generate Report(s)</Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <CarouselArrow>\r\n              {splitIntoChunks(keyMetricsList, 5).map((chunks, index) => (\r\n                <div key={`keyMetricsChunk-${index}`}>\r\n                  <Row gutter={10}>\r\n                    {chunks.map((keyMetrics) => (\r\n                      <Col key={keyMetrics.key} flex='20%'>\r\n                        <ColorCard\r\n                          backgroundColor={\r\n                            !selectedKeyMetrics.includes(keyMetrics.label)\r\n                              ? 'grey'\r\n                              : 'success'\r\n                          }\r\n                          hover='success'\r\n                          label={\r\n                            <Popover content={keyMetrics.desc}>\r\n                              <Text>{keyMetrics.label}</Text>\r\n                              <QuestionCircleOutlined\r\n                                style={{ padding: '0 5px' }}\r\n                                className='color-grey'\r\n                              />\r\n                            </Popover>\r\n                          }\r\n                          indicator={\r\n                            selectedKeyMetrics.includes(keyMetrics.label)\r\n                              ? 'true'\r\n                              : null\r\n                          }\r\n                          bodyStyle={{ padding: 15 }}\r\n                          onClick={() => handleKeyMetricsClick(keyMetrics)}\r\n                        >\r\n                          <Row gutter={5} style={{ height: 40 }}>\r\n                            <Col>\r\n                              {keyMetrics.cat === 'money' && (\r\n                                <Text strong>RM</Text>\r\n                              )}\r\n                            </Col>\r\n                            <Col>\r\n                              <Title level={4}>\r\n                                {getKeyMetricsVal(keyMetrics)}\r\n                              </Title>\r\n                            </Col>\r\n                            <Col>\r\n                              {keyMetrics.cat === 'percent' && (\r\n                                <Text strong>%</Text>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                        </ColorCard>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n              ))}\r\n            </CarouselArrow>\r\n            <Row justify='space-between' align='middle' gutter={10}>\r\n              <Col>\r\n                <Checkbox\r\n                  className='color-grey'\r\n                  defaultChecked\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setMaxSelectedMetrics(5);\r\n                    } else {\r\n                      setMaxSelectedMetrics(1);\r\n                      setSelectedKeyMetrics([selectedKeyMetrics[0]]);\r\n                    }\r\n                  }}\r\n                >\r\n                  Stack Metrics\r\n                </Checkbox>\r\n              </Col>\r\n              <Col>\r\n                <Space>\r\n                  <Text type='secondary' className='text-sm'>\r\n                    Metrics Selected: {selectedKeyMetrics.length}/\r\n                    {maxSelectedMetrics}\r\n                  </Text>\r\n                  <Button\r\n                    type='link'\r\n                    color='info'\r\n                    style={{ fontSize: 12 }}\r\n                    onClick={() => setSelectedKeyMetrics(['Sales'])}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Space>\r\n              </Col>\r\n            </Row>\r\n            <Suspense\r\n              fallback={\r\n                <div\r\n                  className='center-flex'\r\n                  style={{ width: 1176, height: 400 }}\r\n                >\r\n                  <Spin\r\n                    indicator={\r\n                      <LoadingOutlined style={{ fontSize: 30 }} spin />\r\n                    }\r\n                  />\r\n                </div>\r\n              }\r\n            >\r\n              <LineChart\r\n                data={data}\r\n                tooltipValPrefix='RM '\r\n                tooltipName='Total Sales'\r\n                seriesField='cat'\r\n                yAxis={{\r\n                  label: maxSelectedMetrics !== 1 ? null : undefined,\r\n                }}\r\n              />\r\n            </Suspense>\r\n          </DashboardContainer>\r\n        </MainCard>\r\n      </DashboardContainer>\r\n    );\r\n  };\r\n\r\n  const RankingDashboard = (props) => {\r\n    const [rankingDtInfo, setRankingDtInfo] = useState({\r\n      date: getDt(),\r\n      label: 'Today',\r\n      cat: 'tdy',\r\n    });\r\n\r\n    return (\r\n      <DashboardContainer>\r\n        <DropdownDate\r\n          onChange={(dateInfo) => {\r\n            setRankingDtInfo(dateInfo);\r\n          }}\r\n          className='main-card'\r\n        />\r\n        <Row justify='center' gutter={[30, 20]}>\r\n          <Col span={12}>\r\n            <MainCard>\r\n              <Space direction='vertical' size={5} className='full-width'>\r\n                <div>\r\n                  <BoldTitle level={5}>Product Rankings</BoldTitle>\r\n\r\n                  <Text type='secondary'>\r\n                    {formatDt(\r\n                      rankingDtInfo.date,\r\n                      rankingDtInfo.cat,\r\n                      'DD-MM-YYYY',\r\n                      'MMM DD, YYYY'\r\n                    )}\r\n                  </Text>\r\n                </div>\r\n                <RankingList\r\n                  dataSource={topProduct}\r\n                  cardSelections={[\r\n                    { key: 'bySales', label: 'By Sales', desc: '2323' },\r\n                    { key: 'byUnits', label: 'By Units', desc: '123213' },\r\n                  ]}\r\n                  selectOptions={{\r\n                    placeholder: 'Category',\r\n                    options: prodCat,\r\n                    allowClear: true,\r\n                  }}\r\n                />\r\n              </Space>\r\n            </MainCard>\r\n          </Col>\r\n          <Col span={12}>\r\n            <MainCard>\r\n              <Space direction='vertical' size={5} className='full-width'>\r\n                <div>\r\n                  <BoldTitle level={5}>Promotion Rankings</BoldTitle>\r\n\r\n                  <Text className='dashboard-grey-text'>\r\n                    {formatDt(\r\n                      rankingDtInfo.date,\r\n                      rankingDtInfo.cat,\r\n                      'DD-MM-YYYY',\r\n                      'MMM DD, YYYY'\r\n                    )}\r\n                  </Text>\r\n                </div>\r\n                <RankingList\r\n                  dataSource={topProduct}\r\n                  cardSelections={[\r\n                    { key: 'bySales', label: 'By Sales', desc: '2323' },\r\n                    { key: 'byUnits', label: 'By Units', desc: '123213' },\r\n                  ]}\r\n                />\r\n              </Space>\r\n            </MainCard>\r\n          </Col>\r\n        </Row>\r\n      </DashboardContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='business-statistics'>\r\n        <StatisticsDashboard />\r\n        <KeyMetricsDashboard />\r\n        <RankingDashboard />\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BusinessStatistics;\r\n","import { Tooltip, Typography } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport ColorCard, { ColorCardProps } from '../ColorCard';\r\n\r\nexport interface AnalysisCardProps extends ColorCardProps {\r\n  component: {\r\n    key: string;\r\n    label: string;\r\n    desc: string;\r\n    prodList: string[];\r\n  };\r\n}\r\n\r\nconst AnalysisCard = ({ component, ...props }: AnalysisCardProps) => {\r\n  const { Text } = Typography;\r\n  return (\r\n    <ColorCard\r\n      label={\r\n        component.desc !== undefined ? (\r\n          <Tooltip title={component.desc}>\r\n            <Text\r\n              strong\r\n              type='secondary'\r\n              className='text-break'\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              {component.label}\r\n              <QuestionCircleOutlined\r\n                style={{\r\n                  padding: '0 5px',\r\n                }}\r\n                className='color-grey'\r\n              />\r\n            </Text>\r\n          </Tooltip>\r\n        ) : (\r\n          <Text strong type='secondary' className='text-break'>\r\n            {component.label}\r\n          </Text>\r\n        )\r\n      }\r\n      backgroundColor={component.prodList.length <= 0 ? 'success' : 'error'}\r\n      indicator={component.prodList.length <= 0 ? 'true' : 'false'}\r\n      bodyStyle={{ padding: 15 }}\r\n    >\r\n      {component.prodList.length <= 0 ? (\r\n        <Text strong className='color-primary'>\r\n          All set!\r\n        </Text>\r\n      ) : (\r\n        <>\r\n          <Text strong type='danger'>\r\n            Please add the cost for:\r\n          </Text>\r\n          <ul>\r\n            {component.prodList.map((prod) => (\r\n              <li className='color-error' style={{ fontWeight: 600 }}>\r\n                {prod}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </ColorCard>\r\n  );\r\n};\r\n\r\nexport default AnalysisCard;\r\n","import { Col, Collapse, CollapseProps, Row, Typography } from 'antd';\r\nimport MainCard from '../MainCard';\r\n\r\ninterface CollapseCardProps extends CollapseProps {\r\n  key: string;\r\n  label: string;\r\n  prefixIcon?: React.ReactNode;\r\n  suffixIcon?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst CollapseCard = ({\r\n  key,\r\n  label,\r\n  prefixIcon,\r\n  suffixIcon,\r\n  children,\r\n  ...props\r\n}: CollapseCardProps) => {\r\n  const { Text } = Typography;\r\n  const { Panel } = Collapse;\r\n  return (\r\n    <MainCard bodyStyle={{ padding: 0 }}>\r\n      <Collapse bordered={false} expandIconPosition='right' {...props}>\r\n        <Panel\r\n          header={\r\n            <Row align='middle' gutter={10}>\r\n              {prefixIcon !== undefined ? (\r\n                <Col className='center-flex'>{prefixIcon}</Col>\r\n              ) : null}\r\n              <Col>\r\n                <Text style={{ fontWeight: 500 }} className='text-lg'>\r\n                  {label}\r\n                </Text>\r\n              </Col>\r\n              {suffixIcon !== undefined ? (\r\n                <Col className='center-flex'> {suffixIcon}</Col>\r\n              ) : null}\r\n            </Row>\r\n          }\r\n          key={key}\r\n        >\r\n          {children}\r\n        </Panel>\r\n      </Collapse>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default CollapseCard;\r\n","import { Col, DatePicker,DatePickerProps, Row, Typography } from 'antd';\r\n\r\ntype DateRangePickerWithLabelProps = DatePickerProps & {\r\n  label: string;\r\n  textSpan?: number;\r\n  justify?: 'start' | 'end';\r\n};\r\n\r\nconst DateRangePickerWithLabel = ({\r\n  label,\r\n  textSpan = 5,\r\n  justify = 'end',\r\n  ...props\r\n}: DateRangePickerWithLabelProps) => {\r\n  const { Text } = Typography;\r\n\r\n  return (\r\n    <Row align='middle' gutter={30} className='input-date'>\r\n      <Col span={textSpan} className={justify === 'start' ? '' : 'justify-end'}>\r\n        <Text type='secondary'>{label}</Text>\r\n      </Col>\r\n      <Col span={24 - textSpan}>\r\n        <DatePicker className='full-width' {...props} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DateRangePickerWithLabel;\r\n","import DatePickerWithLabel from '@components/Input/DatePickerWithLabel';\r\nimport FilterInputCol from '@components/Container/FilterInputCol';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { prodCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\nimport moment from 'moment';\r\n\r\ninterface FilterInputsProps {\r\n  onSearch?: (searchParams: string[]) => void;\r\n}\r\n\r\nconst FilterInputs = (props: FilterInputsProps) => {\r\n  const prodInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'prodName',\r\n    options: [\r\n      { value: 'prodName', label: 'Product Name' },\r\n      { value: 'prodSKU', label: 'Product SKU' },\r\n    ],\r\n  };\r\n\r\n  const prodCatSelect = {\r\n    placeholder: 'Select Category',\r\n    options: prodCat,\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={prodInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel label='Category' select={prodCatSelect} />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Demand'\r\n            placeholder={['Start', 'End']}\r\n            min={0}\r\n            justify='start'\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Price'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DatePickerWithLabel\r\n            picker='month'\r\n            disabledDate={(current) => current > moment()}\r\n            defaultValue={moment()}\r\n            defaultPickerValue={moment()}\r\n            allowClear={false}\r\n            dropdownAlign={{ points: ['tc', 'bc'] }}\r\n            label='Analysis Month'\r\n            justify='start'\r\n          />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","import { IconBaseProps } from 'react-icons';\r\nimport { MdInfo, MdOutbound, MdStars } from 'react-icons/md';\r\n\r\nexport interface DescIconProps extends IconBaseProps {\r\n  type: 'info' | 'purpose' | 'benefits';\r\n}\r\n\r\nconst DescIcon = (props: DescIconProps) => {\r\n  return props.type === 'info' ? (\r\n    <MdInfo className='color-blue-400' size={80} {...props} />\r\n  ) : props.type === 'purpose' ? (\r\n    <MdOutbound className='color-red-400' size={80} color='white' {...props} />\r\n  ) : (\r\n    <MdStars className='color-yellow-400' size={80} {...props} />\r\n  );\r\n};\r\n\r\nexport default DescIcon;\r\n","import { Typography } from 'antd';\r\n\r\nexport interface GradeIconProps {\r\n  grade: string;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  fontSize?: number;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n}\r\n\r\nconst GradeIcon = ({\r\n  grade,\r\n  width = 70,\r\n  height = 80,\r\n  fontSize = 40,\r\n  className,\r\n  style,\r\n  ...props\r\n}: GradeIconProps) => {\r\n  const { Text } = Typography;\r\n  return (\r\n    <Text\r\n      style={{\r\n        width: width,\r\n        height: height,\r\n        borderRadius: 12,\r\n        color: 'white',\r\n        fontSize: fontSize,\r\n        userSelect: 'none',\r\n        ...style,\r\n      }}\r\n      className={`center-flex${\r\n        className !== undefined ? ` ${className}` : ' bg-primary'\r\n      }`}\r\n      strong\r\n    >\r\n      {grade}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default GradeIcon;\r\n","export default __webpack_public_path__ + \"static/media/NasiBukhari.6c18478e.png\";","import { GradeIcon } from '../Icons';\r\nimport NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nimport { Col, Row, Image, Space, Typography } from 'antd';\r\nimport { moneyFormatter, percentFormatter } from '@utils/numUtils';\r\nimport { GradeIconProps } from '../Icons/GradeIcon';\r\nimport { tableGradeProps } from '.';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst GradeA = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='A' className='bg-green-400' {...props} />\r\n);\r\nconst GradeB = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='B' className='bg-blue-400' {...props} />\r\n);\r\nconst GradeC = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='C' className='bg-red-400' {...props} />\r\n);\r\n\r\nconst abcDesc = {\r\n  header: 'ABC analysis grades the products based on sales per month.',\r\n  content: [\r\n    {\r\n      key: 'gradeA',\r\n      title: 'Grade A',\r\n      desc: 'Grade A contribute to 80% of revenue. Make sure to keep enough stocks since these products produce the most revenue.',\r\n      icon: <GradeA />,\r\n    },\r\n    {\r\n      key: 'gradeB',\r\n      title: 'Grade B',\r\n      desc: 'Grade B contribute to 15% of revenue. Do not keep too many stocks on hand since these products produce lower revenue.',\r\n      icon: <GradeB />,\r\n    },\r\n    {\r\n      key: 'gradeC',\r\n      title: 'Grade C',\r\n      desc: 'Grade C contribute to 5% of revenue. These products are low in demand. Consider ways to promote these products.',\r\n      icon: <GradeC />,\r\n    },\r\n  ],\r\n};\r\n\r\nconst abcColumns: {\r\n  title: string;\r\n  dataIndex?: string | string[];\r\n  key: string;\r\n  sorter?: boolean;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  fixed?: 'left' | 'right';\r\n  render?: any;\r\n}[] = [\r\n  {\r\n    title: 'Product',\r\n    dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n    key: 'prod',\r\n    sorter: true,\r\n    width: 250,\r\n    fixed: 'left',\r\n    render: (_: any, data: { [x: string]: string }) => (\r\n      <Row gutter={5}>\r\n        <Col span={8}>\r\n          <Image src={data['prodImg']} height={80} width={80} />\r\n        </Col>\r\n        <Col span={16}>\r\n          <Space direction='vertical' size={5}>\r\n            <div className='text-button-wrapper'>\r\n              <Text strong className='text-button'>\r\n                {data['prodNm']}\r\n              </Text>\r\n            </div>\r\n            <Text type='secondary' className='text-sm text-break'>\r\n              {data['prodCat']}\r\n            </Text>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n  },\r\n  {\r\n    title: 'SKU',\r\n    dataIndex: 'prodSKU',\r\n    key: 'prodSKU',\r\n    sorter: true,\r\n    width: 120,\r\n  },\r\n  {\r\n    title: 'Cost per Unit',\r\n    dataIndex: 'costPerUnit',\r\n    key: 'costPerUnit',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Demand',\r\n    dataIndex: 'demand',\r\n    key: 'demand',\r\n    sorter: true,\r\n    width: 100,\r\n  },\r\n  {\r\n    title: 'Consumption Value',\r\n    dataIndex: 'consumpVal',\r\n    key: 'consumpVal',\r\n    sorter: true,\r\n    width: 160,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Demand (%)',\r\n    dataIndex: 'demandPct',\r\n    key: 'demandPct',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{percentFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Consumption Value (%)',\r\n    dataIndex: 'consumpValPct',\r\n    key: 'consumpValPct',\r\n    sorter: true,\r\n    width: 180,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{percentFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Grade',\r\n    dataIndex: 'grade',\r\n    key: 'grade',\r\n    sorter: true,\r\n    width: 100,\r\n    align: 'center' as const,\r\n    fixed: 'right',\r\n    render: (grade: 'a' | 'b' | 'c') => {\r\n      return (\r\n        <div className='center-flex'>\r\n          {grade === 'a' ? (\r\n            <GradeA {...tableGradeProps} />\r\n          ) : grade === 'b' ? (\r\n            <GradeB {...tableGradeProps} />\r\n          ) : (\r\n            <GradeC {...tableGradeProps} />\r\n          )}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst abcData = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    costPerUnit: 17.6,\r\n    demand: 30,\r\n    demandPct: 0.1395,\r\n    consumpVal: 528,\r\n    consumpValPct: 0.2834,\r\n    grade: 'a',\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    costPerUnit: 17.6,\r\n    demand: 70,\r\n    demandPct: 0.3256,\r\n    consumpVal: 455,\r\n    consumpValPct: 0.2442,\r\n    grade: 'b',\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    costPerUnit: 20.8,\r\n    demand: 20,\r\n    demandPct: 0.093,\r\n    consumpVal: 416,\r\n    consumpValPct: 0.2233,\r\n    grade: 'b',\r\n  },\r\n];\r\n\r\nconst abcAnalysis = {\r\n  desc: abcDesc,\r\n  columns: abcColumns,\r\n  tableScroll: 1300,\r\n  data: abcData,\r\n};\r\n\r\nexport default abcAnalysis;\r\n","import { GradeIcon } from '../Icons';\r\nimport NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nimport { Col, Row, Image, Space, Typography } from 'antd';\r\nimport { moneyFormatter, percentFormatter } from '@utils/numUtils';\r\nimport { GradeIconProps } from '../Icons/GradeIcon';\r\nimport { tableGradeProps } from '.';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst GradeH = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='H' className='bg-green-400' {...props} />\r\n);\r\nconst GradeM = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='M' className='bg-blue-400' {...props} />\r\n);\r\nconst GradeL = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='L' className='bg-red-400' {...props} />\r\n);\r\n\r\nconst hmlDesc = {\r\n  header: 'HML analysis grades the products based on sales per month.',\r\n  content: [\r\n    {\r\n      key: 'gradeH',\r\n      title: 'Grade H',\r\n      desc: 'Grade H products make up 75% of the total unit price ratio. These products are costly. Make sure you have strict control on these high-unit-value products.',\r\n      icon: <GradeH />,\r\n    },\r\n    {\r\n      key: 'gradeM',\r\n      title: 'Grade M',\r\n      desc: 'Grade M products make up 15% of the total unit price ratio. These products do not cost too much. Moderate control on these products is sufficient.',\r\n      icon: <GradeM />,\r\n    },\r\n    {\r\n      key: 'gradeL',\r\n      title: 'Grade L',\r\n      desc: 'Grade L products make up 10% of the total unit price ratio. These products are low in unit price. Less control is required for the products.',\r\n      icon: <GradeL />,\r\n    },\r\n  ],\r\n};\r\n\r\nconst hmlColumns: {\r\n  title: string;\r\n  dataIndex?: string | string[];\r\n  key: string;\r\n  sorter?: boolean;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  fixed?: 'left' | 'right';\r\n  render?: any;\r\n}[] = [\r\n  {\r\n    title: 'Product',\r\n    dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n    key: 'prod',\r\n    sorter: true,\r\n    width: 250,\r\n    fixed: 'left',\r\n    render: (_: any, data: { [x: string]: string }) => (\r\n      <Row gutter={5}>\r\n        <Col span={8}>\r\n          <Image src={data['prodImg']} height={80} width={80} />\r\n        </Col>\r\n        <Col span={16}>\r\n          <Space direction='vertical' size={5}>\r\n            <div className='text-button-wrapper'>\r\n              <Text strong className='text-button'>\r\n                {data['prodNm']}\r\n              </Text>\r\n            </div>\r\n            <Text type='secondary' className='text-sm text-break'>\r\n              {data['prodCat']}\r\n            </Text>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n  },\r\n  {\r\n    title: 'SKU',\r\n    dataIndex: 'prodSKU',\r\n    key: 'prodSKU',\r\n    sorter: true,\r\n    width: 120,\r\n  },\r\n  {\r\n    title: 'Stock',\r\n    dataIndex: 'prodStock',\r\n    key: 'prodStock',\r\n    sorter: true,\r\n    width: 120,\r\n  },\r\n  {\r\n    title: 'Cost per Unit',\r\n    dataIndex: 'costPerUnit',\r\n    key: 'costPerUnit',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Cost per Unit (%)',\r\n    dataIndex: 'costPerUnitPct',\r\n    key: 'costPerUnitPct',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{percentFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Grade',\r\n    dataIndex: 'grade',\r\n    key: 'grade',\r\n    sorter: true,\r\n    width: 100,\r\n    align: 'center' as const,\r\n    fixed: 'right',\r\n    render: (grade: 'h' | 'm' | 'l') => {\r\n      return (\r\n        <div className='center-flex'>\r\n          {grade === 'h' ? (\r\n            <GradeH {...tableGradeProps} />\r\n          ) : grade === 'm' ? (\r\n            <GradeM {...tableGradeProps} />\r\n          ) : (\r\n            <GradeL {...tableGradeProps} />\r\n          )}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst hmlData = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    prodStock: 47,\r\n    costPerUnit: 17.6,\r\n    costPerUnitPct: 0.3333,\r\n    grade: 'h',\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    prodStock: 120,\r\n    costPerUnit: 17.6,\r\n    costPerUnitPct: 0.3333,\r\n    grade: 'm',\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    prodStock: 25,\r\n    costPerUnit: 20.8,\r\n    costPerUnitPct: 0.3333,\r\n    grade: 'l',\r\n  },\r\n];\r\n\r\nconst hmlAnalysis = {\r\n  desc: hmlDesc,\r\n  columns: hmlColumns,\r\n  data: hmlData,\r\n};\r\n\r\nexport default hmlAnalysis;\r\n","import { moneyFormatter } from '@utils/numUtils';\r\nimport { Col, Row, Image, Typography, Space } from 'antd';\r\nimport { DescIcon } from '../Icons';\r\nimport NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nimport { EditButton } from '@components/Button/ActionButton';\r\nimport { HiExclamation } from 'react-icons/hi';\r\nimport Popover from '@components/Popover';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst eoqDesc = {\r\n  header: 'EOQ analysis evaluates the products based on sales per month.',\r\n  content: [\r\n    {\r\n      key: 'info',\r\n      title: 'Info',\r\n      desc: 'EOQ stands for Economic Order Quantity. It is the ideal order quantity a company should purchase to minimize inventory costs.',\r\n      icon: <DescIcon type='info' />,\r\n    },\r\n    {\r\n      key: 'purpose',\r\n      title: 'Purpose',\r\n      desc: 'The purpose of EOQ analysis to minimise the ordering and carrying costs incurred in inventory.',\r\n      icon: <DescIcon type='purpose' />,\r\n    },\r\n    {\r\n      key: 'benefits',\r\n      title: 'Benefits',\r\n      desc: 'By using EOQ analysis, we can identify the optimum amount of items to be ordered.',\r\n      icon: <DescIcon type='benefits' />,\r\n    },\r\n  ],\r\n};\r\n\r\nconst eoqComponent = {\r\n  header: 'Components of EOQ Analysis',\r\n  content: [\r\n    {\r\n      key: 'orderCost',\r\n      label: 'Ordering/Reorder Cost',\r\n      desc: 'Cost when reordering the product',\r\n      prodList: ['Sambal Ikan Bilis', 'Pes Mi Goreng'],\r\n    },\r\n    {\r\n      key: 'carryCost',\r\n      label: 'Carrying/Holding Cost',\r\n      desc: 'Cost for holding inventory in stock',\r\n      prodList: [],\r\n    },\r\n  ],\r\n};\r\n\r\nconst eoqColumns: {\r\n  title: string;\r\n  dataIndex?: string | string[];\r\n  key: string;\r\n  sorter?: boolean;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  fixed?: 'left' | 'right';\r\n  render?: any;\r\n}[] = [\r\n  {\r\n    title: 'Product',\r\n    dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n    key: 'prod',\r\n    sorter: true,\r\n    width: 250,\r\n    fixed: 'left',\r\n    render: (_: any, data: { [x: string]: string }) => (\r\n      <Row gutter={5}>\r\n        <Col span={8}>\r\n          <Image src={data['prodImg']} height={80} width={80} />\r\n        </Col>\r\n        <Col span={16}>\r\n          <Space direction='vertical' size={5}>\r\n            <div className='text-button-wrapper'>\r\n              <Text strong className='text-button'>\r\n                {data['prodNm']}\r\n              </Text>\r\n            </div>\r\n            <Text type='secondary' className='text-sm text-break'>\r\n              {data['prodCat']}\r\n            </Text>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n  },\r\n  {\r\n    title: 'SKU',\r\n    dataIndex: 'prodSKU',\r\n    key: 'prodSKU',\r\n    sorter: true,\r\n    width: 120,\r\n  },\r\n  {\r\n    title: 'Demand',\r\n    dataIndex: 'demand',\r\n    key: 'demand',\r\n    sorter: true,\r\n    width: 100,\r\n  },\r\n  {\r\n    title: 'Ordering Cost',\r\n    dataIndex: 'orderCost',\r\n    key: 'orderCost',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n      ) : (\r\n        <Popover content='Please update the holding cost for this product.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Not Found\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Holding Cost',\r\n    dataIndex: 'carryCost',\r\n    key: 'carryCost',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n      ) : (\r\n        <Popover content='Please update the holding cost for this product.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Not Found\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Optimal Order Quantity',\r\n    dataIndex: 'ooq',\r\n    key: 'ooq',\r\n    sorter: true,\r\n    width: 170,\r\n    fixed: 'right',\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n      ) : (\r\n        <Popover content='Please fill up the ordering and holding costs.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Insufficient Info\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    width: 100,\r\n    fixed: 'right',\r\n    render: () => (\r\n      <EditButton type='link' color='info'>\r\n        Edit Costs\r\n      </EditButton>\r\n    ),\r\n  },\r\n];\r\n\r\nconst eoqData = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    demand: 30,\r\n    orderCost: 550,\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    costPerUnit: 17.6,\r\n    demand: 70,\r\n    carryCost: 155,\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    costPerUnit: 20.8,\r\n    demand: 20,\r\n    orderCost: 666,\r\n    carryCost: 329,\r\n    ooq: 169,\r\n  },\r\n];\r\n\r\nconst eoqAnalysis = {\r\n  desc: eoqDesc,\r\n  component: eoqComponent,\r\n  columns: eoqColumns,\r\n  data: eoqData,\r\n};\r\n\r\nexport default eoqAnalysis;\r\n","import { Col, Row, Image, Typography, Space } from 'antd';\r\nimport { DescIcon } from '../Icons';\r\nimport NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nimport { EditButton } from '@components/Button/ActionButton';\r\nimport { HiExclamation } from 'react-icons/hi';\r\nimport Popover from '@components/Popover';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ssDesc = {\r\n  header:\r\n    'Safety Stock analysis evaluates the products based on sales per month.',\r\n  content: [\r\n    {\r\n      key: 'info',\r\n      title: 'Info',\r\n      desc: 'Safety stock is the additional quantity of a product to be stored in the inventory.',\r\n      icon: <DescIcon type='info' />,\r\n    },\r\n    {\r\n      key: 'purpose',\r\n      title: 'Purpose',\r\n      desc: 'The purpose of Safety Stock analysis to prevent an out-of-stock situation. ',\r\n      icon: <DescIcon type='purpose' />,\r\n    },\r\n    {\r\n      key: 'benefits',\r\n      title: 'Benefits',\r\n      desc: 'By using Safety Stock analysis, we can identify the number of reserved stock and reorder point.',\r\n      icon: <DescIcon type='benefits' />,\r\n    },\r\n  ],\r\n};\r\n\r\nconst ssComponent = {\r\n  header: 'Components of Safety Stock Analysis',\r\n  content: [\r\n    {\r\n      key: 'maxLeadTm',\r\n      label: 'Maximum Lead Time',\r\n      desc: 'Maximum Lead Time',\r\n      prodList: [],\r\n    },\r\n    {\r\n      key: 'AvgLeadTm',\r\n      label: 'Average Lead Time',\r\n      desc: 'Average Lead Time',\r\n      prodList: [],\r\n    },\r\n  ],\r\n};\r\n\r\nconst ssColumns: {\r\n  title: string;\r\n  dataIndex?: string | string[];\r\n  key: string;\r\n  sorter?: boolean;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  fixed?: 'left' | 'right';\r\n  render?: any;\r\n}[] = [\r\n  {\r\n    title: 'Product',\r\n    dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n    key: 'prod',\r\n    sorter: true,\r\n    width: 200,\r\n    fixed: 'left',\r\n    render: (_: any, data: { [x: string]: string }) => (\r\n      <Row gutter={5}>\r\n        <Col span={8}>\r\n          <Image src={data['prodImg']} height={80} width={80} />\r\n        </Col>\r\n        <Col span={16}>\r\n          <Space direction='vertical' size={5}>\r\n            <div className='text-button-wrapper'>\r\n              <Text strong className='text-button'>\r\n                {data['prodNm']}\r\n              </Text>\r\n            </div>\r\n            <Text type='secondary' className='text-sm text-break'>\r\n              {data['prodCat']}\r\n            </Text>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n  },\r\n  {\r\n    title: 'SKU',\r\n    dataIndex: 'prodSKU',\r\n    key: 'prodSKU',\r\n    sorter: true,\r\n    width: 100,\r\n  },\r\n  {\r\n    title: 'Max Demand',\r\n    dataIndex: 'maxDemand',\r\n    key: 'maxDemand',\r\n    sorter: true,\r\n    width: 100,\r\n    render: (amount: number) => <Text type='secondary'>{amount} / day</Text>,\r\n  },\r\n  {\r\n    title: 'Avg Demand',\r\n    dataIndex: 'avgDemand',\r\n    key: 'avgDemand',\r\n    sorter: true,\r\n    width: 100,\r\n    render: (amount: number) => <Text type='secondary'>{amount} / day</Text>,\r\n  },\r\n  {\r\n    title: 'Max Lead Time',\r\n    dataIndex: 'maxLeadTm',\r\n    key: 'maxLeadTm',\r\n    sorter: true,\r\n    width: 100,\r\n    render: (day: number) =>\r\n      day !== undefined ? (\r\n        <Text type='secondary'>\r\n          {day} {day !== 1 ? 'days' : 'day'}\r\n        </Text>\r\n      ) : (\r\n        <Popover content='Please update the maximum lead time for this product.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Not Found\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Avg Lead Time',\r\n    dataIndex: 'avgLeadTm',\r\n    key: 'avgLeadTm',\r\n    sorter: true,\r\n    width: 100,\r\n    render: (day: number) =>\r\n      day !== undefined ? (\r\n        <Text type='secondary'>\r\n          {day} {day !== 1 ? 'days' : 'day'}\r\n        </Text>\r\n      ) : (\r\n        <Popover content='Please update the average lead time for this product.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Not Found\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Safety Stock',\r\n    dataIndex: 'safetyStock',\r\n    key: 'safetyStock',\r\n    sorter: true,\r\n    width: 120,\r\n    fixed: 'right',\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{amount}</Text>\r\n      ) : (\r\n        <Popover content='Please fill up the maximum and average amount for the demand and lead time.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Insufficient Info\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Restock Point',\r\n    dataIndex: 'restockPt',\r\n    key: 'restockPt',\r\n    sorter: true,\r\n    width: 120,\r\n    fixed: 'right',\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{amount}</Text>\r\n      ) : (\r\n        <Popover content='Please fill up the maximum and average amount for the demand and lead time.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Insufficient Info\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    width: 100,\r\n    fixed: 'right',\r\n    render: () => (\r\n      <EditButton type='link' color='info'>\r\n        Edit Lead Time\r\n      </EditButton>\r\n    ),\r\n  },\r\n];\r\n\r\nconst ssData = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    maxDemand: 20,\r\n    avgDemand: 15,\r\n    maxLeadTm: 10,\r\n    avgLeadTm: 7,\r\n    safetyStock: 95,\r\n    restockPt: 200,\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    maxDemand: 25,\r\n    avgDemand: 20,\r\n    maxLeadTm: 12,\r\n    avgLeadTm: 10,\r\n    safetyStock: 100,\r\n    restockPt: 300,\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    maxDemand: 6,\r\n    avgDemand: 5,\r\n    maxLeadTm: 10,\r\n    avgLeadTm: 7,\r\n    safetyStock: 25,\r\n    restockPt: 60,\r\n  },\r\n];\r\n\r\nconst ssAnalysis = {\r\n  desc: ssDesc,\r\n  component: ssComponent,\r\n  columns: ssColumns,\r\n  tableScroll: 1500,\r\n  data: ssData,\r\n};\r\n\r\nexport default ssAnalysis;\r\n","import abcAnalysis from './abcAnalysis';\r\nimport hmlAnalysis from './hmlAnalysis';\r\nimport eoqAnalysis from './eoqAnalysis';\r\nimport ssAnalysis from './ssAnalysis';\r\n\r\nconst tableGradeProps = { width: 50, height: 60, fontSize: 30 };\r\n\r\nexport { abcAnalysis, hmlAnalysis, eoqAnalysis, ssAnalysis, tableGradeProps };\r\n","import React, { useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { Space, Typography, Row, Col } from 'antd';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport InformativeTable from '@components/Table/InformativeTable';\r\nimport DescriptionList from '@components/List/DescriptionList';\r\nimport AnalysisCard from '@components/Card/AnalysisCard';\r\nimport CollapseCard from '@components/Card/CollapseCard';\r\nimport { getDt } from '@utils/dateUtils';\r\nimport FilterInputs from './FilterInputs';\r\nimport { abcAnalysis, eoqAnalysis, hmlAnalysis, ssAnalysis } from './Analyses';\r\nimport './InvAnalysis.less';\r\nimport { HiCheckCircle, HiXCircle } from 'react-icons/hi';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst InvAnalysis = () => {\r\n  const { Text } = Typography;\r\n\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get('type') === null) setSearchParams({ type: 'abc' });\r\n  }, [searchParams, setSearchParams]);\r\n\r\n  const invAnalysisTab = [\r\n    { key: 'abc', tab: 'ABC' },\r\n    { key: 'hml', tab: 'HML' },\r\n    { key: 'eoq', tab: 'EOQ' },\r\n    { key: 'ss', tab: 'Safety Stock' },\r\n  ];\r\n\r\n  const getAnalysis = (\r\n    analysis: string\r\n  ): {\r\n    desc: {\r\n      header: string;\r\n      content: {\r\n        key: string;\r\n        title: string;\r\n        desc: string;\r\n        icon: JSX.Element;\r\n      }[];\r\n    };\r\n    component?: {\r\n      header: string;\r\n      content: {\r\n        key: string;\r\n        label: string;\r\n        desc: string;\r\n        prodList: string[];\r\n      }[];\r\n    };\r\n    columns: {\r\n      title: string;\r\n      dataIndex?: string | string[];\r\n      key: string;\r\n      sorter?: boolean;\r\n      align?: 'left' | 'center' | 'right';\r\n      width?: number | string;\r\n      fixed?: 'left' | 'right';\r\n      render?: any;\r\n    }[];\r\n    tableScroll?: number;\r\n    data: any[];\r\n  } =>\r\n    analysis === 'abc'\r\n      ? abcAnalysis\r\n      : analysis === 'hml'\r\n      ? hmlAnalysis\r\n      : analysis === 'eoq'\r\n      ? eoqAnalysis\r\n      : ssAnalysis;\r\n\r\n  const analysis = getAnalysis(searchParams.get('type'));\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer\r\n        className={`inv-analysis${\r\n          ['abc', 'hml'].includes(searchParams.get('type'))\r\n            ? ` grade-analysis`\r\n            : ''\r\n        }`}\r\n      >\r\n        {analysis.desc !== undefined && (\r\n          <CollapseCard\r\n            key={`desc-${searchParams.get('type')}`}\r\n            label={analysis.desc.header}\r\n          >\r\n            <DescriptionList\r\n              grid={{ column: 3 }}\r\n              dataSource={analysis.desc.content}\r\n              titleProps={{ style: { fontSize: 18 } }}\r\n              style={{ borderTop: '1px solid #f0f0f0' }}\r\n            />\r\n          </CollapseCard>\r\n        )}\r\n\r\n        {analysis.component !== undefined && (\r\n          <CollapseCard\r\n            key={`component-${searchParams.get('type')}`}\r\n            label={analysis.component.header}\r\n            suffixIcon={\r\n              analysis.component.content.some(\r\n                (component) => component.prodList.length > 0\r\n              ) ? (\r\n                <HiXCircle size={20} className='color-error' />\r\n              ) : (\r\n                <HiCheckCircle size={20} className='color-primary' />\r\n              )\r\n            }\r\n          >\r\n            <Row gutter={[30, 30]}>\r\n              {analysis.component.content.map((component) => (\r\n                <Col key={component.key} flex='25%'>\r\n                  <AnalysisCard component={component} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </CollapseCard>\r\n        )}\r\n\r\n        <MainCard\r\n          tabList={invAnalysisTab}\r\n          activeTabKey={searchParams.get('type')}\r\n          onTabChange={(key) => {\r\n            setSearchParams({ type: key });\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Space direction='vertical' size={5}>\r\n              <BoldTitle level={4}>\r\n                {`${\r\n                  invAnalysisTab.find(\r\n                    (tab) => tab.key === searchParams.get('type')\r\n                  )?.tab\r\n                } Analysis`}\r\n              </BoldTitle>\r\n              <Text type='secondary'>\r\n                {getDt(undefined, undefined, 'YYYY MMMM')}\r\n              </Text>\r\n            </Space>\r\n            <InformativeTable\r\n              dataSource={analysis.data}\r\n              columns={analysis.columns}\r\n              rowSelectable={false}\r\n              scroll={{\r\n                x:\r\n                  analysis.tableScroll !== undefined\r\n                    ? analysis.tableScroll\r\n                    : undefined,\r\n              }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default InvAnalysis;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport DateRangePickerWithLabel from '@components/Input/DateRangePickerWithLabel';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { custCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const orderInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'voucherCde',\r\n    options: [{ value: 'voucherCde', label: 'Voucher Code' }],\r\n  };\r\n\r\n  const custCatSelect = {\r\n    placeholder: 'Select Customer Type',\r\n    options: custCat,\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={orderInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel\r\n            label='Customer Type'\r\n            select={custCatSelect}\r\n            textSpan={7}\r\n            mode='multiple'\r\n          />\r\n        </FilterInputCol>\r\n\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel\r\n            label='Available Date'\r\n            justify='start'\r\n            textSpan={6}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Availability'\r\n            placeholder={['Start', 'End']}\r\n            min={0}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","const voucherList: {\r\n  key: string;\r\n  voucherCde: string;\r\n  discType: 'amount' | 'percentage';\r\n  discAmt: number;\r\n  minSpend?: number;\r\n  maxDisc?: number;\r\n  custType: ('agent' | 'drpshpr' | 'cust')[];\r\n  availability: number | 'unlimited';\r\n  usageLimit?: number;\r\n  autoApply?: boolean;\r\n  startTm: string;\r\n  endTm?: string;\r\n  status: 'active' | 'hidden' | 'scheduled' | 'expired';\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    voucherCde: 'shrfagent',\r\n    discType: 'percentage',\r\n    discAmt: 0.3,\r\n    minSpend: 150,\r\n    custType: ['agent'],\r\n    availability: 'unlimited',\r\n    autoApply: true,\r\n    startTm: '01-01-2018 00:00',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '2',\r\n    voucherCde: 'shrfdropship',\r\n    discType: 'percentage',\r\n    discAmt: 0.2,\r\n    minSpend: 150,\r\n    custType: ['drpshpr'],\r\n    availability: 'unlimited',\r\n    autoApply: true,\r\n    startTm: '01-01-2018 00:00',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '3',\r\n    voucherCde: 'merdeka64',\r\n    discType: 'amount',\r\n    discAmt: 10,\r\n    minSpend: 50,\r\n    maxDisc: 10,\r\n    custType: ['cust', 'agent', 'drpshpr'],\r\n    availability: 200,\r\n    startTm: '15-09-2021 00:00',\r\n    endTm: '01-09-2021 23:59',\r\n    status: 'hidden',\r\n    usageLimit: 3,\r\n  },\r\n];\r\n\r\nexport default voucherList;\r\n","import { Tooltip as AntdTooltip, TooltipProps as AntdTooltipProps } from 'antd';\r\n\r\nexport type TooltipProps = AntdTooltipProps & {\r\n  title: string;\r\n};\r\n\r\nconst Tooltip = ({ title, children, overlayStyle, ...props }: TooltipProps) => {\r\n  return (\r\n    <AntdTooltip\r\n      title={title}\r\n      overlayStyle={{\r\n        maxWidth: 300,\r\n        textAlign: 'justify',\r\n        ...overlayStyle,\r\n      }}\r\n    >\r\n      <span style={{ cursor: 'help' }}>{children}</span>\r\n    </AntdTooltip>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport voucherList from './voucherList';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { MdAllInclusive, MdSync } from 'react-icons/md';\r\nimport { moneyFormatter, percentFormatter } from '@utils/numUtils';\r\nimport { sortByOrder } from '@utils/arrayUtils';\r\nimport {\r\n  ActivateButton,\r\n  DeleteButton,\r\n  EditButton,\r\n  HideButton,\r\n} from '@components/Button/ActionButton';\r\nimport StatusTag from '@components/Tag/StatusTag';\r\nimport { voucherStatList } from '@utils/optionUtils';\r\nimport Tooltip from '@components/Tooltip';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst VoucherMgmt = () => {\r\n  const { Text } = Typography;\r\n  const [voucherListFltr, setVoucherListFltr] = useState(voucherList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setVoucherListFltr(\r\n        voucherList.filter((voucher) =>\r\n          searchParams.get('status') !== null\r\n            ? voucher.status === searchParams.get('status')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n  const voucherTabList = [\r\n    { key: 'all', tab: 'All' },\r\n    { key: 'active', tab: 'Active' },\r\n    { key: 'hidden', tab: 'Hidden' },\r\n    { key: 'scheduled', tab: 'Scheduled' },\r\n    { key: 'expired', tab: 'Expired' },\r\n  ];\r\n\r\n  const activateBtn = (props: any) => <ActivateButton type='primary' />;\r\n\r\n  const hideBtn = (props: any) => <HideButton type='primary' color='grey' />;\r\n\r\n  const deleteBtn = (props: any) => <DeleteButton type='primary' />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: activateBtn,\r\n      key: 'activate',\r\n      fltr: [{ fld: 'status', value: 'hidden', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: hideBtn,\r\n      key: 'hide',\r\n      fltr: [{ fld: 'status', value: 'active', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: deleteBtn,\r\n      key: 'delete',\r\n    },\r\n  ];\r\n\r\n  const voucherMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Voucher Code',\r\n      dataIndex: ['voucherCde', 'autoApply'],\r\n      key: 'voucherCde',\r\n      sorter: true,\r\n      fixed: 'left',\r\n      width: 150,\r\n      render: (_: any, data: { [x: string]: boolean }) => (\r\n        <Row>\r\n          <Col span={20} className='text-button-wrapper'>\r\n            <Text strong className='text-button'>\r\n              {data['voucherCde']}\r\n            </Text>\r\n          </Col>\r\n          <Col span={4} className='justify-end'>\r\n            {data['autoApply'] === true && (\r\n              <Tooltip title='Automatically applied'>\r\n                <MdSync />\r\n              </Tooltip>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Discount Details',\r\n      dataIndex: ['discType', 'discAmt', 'minSpend', 'maxDisc', 'usageLimit'],\r\n      key: 'discDetl',\r\n      sorter: true,\r\n      width: 280,\r\n      render: (_: any, data) => (\r\n        <>\r\n          <Text strong type='secondary'>\r\n            {data['discType'] === 'amount'\r\n              ? moneyFormatter(data['discAmt'])\r\n              : percentFormatter(data['discAmt'])}{' '}\r\n            off\r\n          </Text>\r\n          <ul>\r\n            {data['minSpend'] !== undefined && (\r\n              <li>Min spend of {moneyFormatter(data['minSpend'])}</li>\r\n            )}\r\n            {data['maxDisc'] !== undefined && (\r\n              <li>Capped at {moneyFormatter(data['maxDisc'])}</li>\r\n            )}\r\n            {data['usageLimit'] !== undefined && (\r\n              <li>Limit for {data['usageLimit']} transactions per user</li>\r\n            )}\r\n          </ul>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Customer Type',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (types: []) => (\r\n        <Space direction='vertical'>\r\n          {sortByOrder(types).map((type: string) => (\r\n            <Text type='secondary'>\r\n              {type === 'agent'\r\n                ? 'Agent'\r\n                : type === 'drpshpr'\r\n                ? 'Dropshipper'\r\n                : type === 'cust'\r\n                ? 'Direct Customer'\r\n                : null}\r\n            </Text>\r\n          ))}\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Availability',\r\n      dataIndex: 'availability',\r\n      key: 'availability',\r\n      sorter: true,\r\n      width: 100,\r\n      render: (availability: string) =>\r\n        availability === 'unlimited' ? (\r\n          <Tooltip title='Unlimited'>\r\n            <MdAllInclusive />\r\n          </Tooltip>\r\n        ) : (\r\n          availability\r\n        ),\r\n    },\r\n    {\r\n      title: 'Start Time',\r\n      dataIndex: 'startTm',\r\n      key: 'startTm',\r\n      sorter: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'End Time',\r\n      dataIndex: 'endTm',\r\n      key: 'endTm',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (endTm: string) => (endTm !== undefined ? endTm : '-'),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 150,\r\n      render: (status: string) => (\r\n        <StatusTag\r\n          status={status}\r\n          statusList={voucherStatList}\r\n          dropdownStatus={['active', 'hidden']}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 100,\r\n      fixed: 'right',\r\n      render: (_: any, data: { [x: string]: string }) => (\r\n        <Space direction='vertical' size={5}>\r\n          <EditButton type='link' color='info' />\r\n          <DeleteButton type='link' color='info' />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='voucher-mgmt'>\r\n        <MainCard\r\n          tabList={voucherTabList}\r\n          activeTabKey={\r\n            searchParams.get('status') === null\r\n              ? 'all'\r\n              : searchParams.get('status')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { status: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Voucher List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('voucherAdd'))}\r\n                >\r\n                  Create Voucher\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={voucherListFltr}\r\n              columns={voucherMgmtColumns}\r\n              buttons={onSelectBtn}\r\n              scroll={{ x: 1200 }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default VoucherMgmt;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport AffixAdd from '@components/Affix/AffixAdd';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Anchor,\r\n  Checkbox,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Radio,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\n\r\nconst VoucherAdd = () => {\r\n  const { Title } = Typography;\r\n  const { Link } = Anchor;\r\n  const [voucherForm] = Form.useForm();\r\n  const [discType, setDiscType] = useState('amount');\r\n  const [usageLimitUltd, setUsageLimitUltd] = useState(false);\r\n  const [availabilityUltd, setAvailabilityUltd] = useState(false);\r\n  const [hideEndTime, setHideEndTime] = useState(true);\r\n  const [targetOffset, setTargetOffset] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const anchorList = [\r\n    { link: 'basicInfo', title: 'Basic Information' },\r\n    { link: 'discSettings', title: 'Discount Settings' },\r\n    { link: 'custEligibility', title: 'Customer Eligibility' },\r\n    { link: 'availPeriod', title: 'Available Period' },\r\n  ];\r\n\r\n  const discCat = [\r\n    { value: 'amount', label: 'Fixed Amount' },\r\n    { value: 'percentage', label: 'Percentage' },\r\n  ];\r\n\r\n  const custCat = [\r\n    { label: 'Direct Customer', value: 'cust' },\r\n    { label: 'Agent', value: 'agent' },\r\n    { label: 'Dropshipper', value: 'drpshpr' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTargetOffset(window.innerHeight / 1.5);\r\n  }, []);\r\n\r\n  return (\r\n    <Form name='voucherForm' layout='vertical' size='small' form={voucherForm}>\r\n      <Layout>\r\n        <Col xs={16} xl={19} className='center-flex'>\r\n          <MainCardContainer>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='basicInfo'>\r\n                  Basic Information\r\n                </Title>\r\n                <Form.Item\r\n                  label='Discount Code'\r\n                  name='voucherCde'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the discount code.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. shrfagent'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item label='Discount Status' name='discStat'>\r\n                  <Checkbox>Hidden</Checkbox>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='discSettings'>\r\n                  Discount Settings\r\n                </Title>\r\n                <Form.Item\r\n                  label='Discount Type'\r\n                  name='discType'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please select the discount type.',\r\n                    },\r\n                  ]}\r\n                  initialValue='amount'\r\n                >\r\n                  <Radio.Group\r\n                    options={discCat}\r\n                    onChange={(e) => setDiscType(e.target.value)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item label='Discount Details' name='discDtls' required>\r\n                  <Row gutter={30} style={{ paddingLeft: 25 }}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='If Order Amount reaches'\r\n                        name='minSpend'\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Discount would be'\r\n                        name='discAmt'\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please enter the discount.',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        {discType === 'percentage' ? (\r\n                          <InputNumber\r\n                            addonAfter='% off'\r\n                            min={0}\r\n                            max={100}\r\n                            placeholder='Input'\r\n                          />\r\n                        ) : (\r\n                          <InputNumber\r\n                            addonBefore='RM'\r\n                            precision={2}\r\n                            min={0}\r\n                            placeholder='Input'\r\n                          />\r\n                        )}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    {discType === 'percentage' && (\r\n                      <Col>\r\n                        <Form.Item label='Capped At' name='maxDisc'>\r\n                          <InputNumber\r\n                            addonBefore='RM'\r\n                            precision={2}\r\n                            min={0}\r\n                            placeholder='Input'\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Total Voucher to be Issued'\r\n                  name='availability'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        'Please enter the availability number for the discount.',\r\n                    },\r\n                  ]}\r\n                  initialValue={0}\r\n                >\r\n                  <Space size={20}>\r\n                    <InputNumber\r\n                      min={0}\r\n                      onChange={(value) =>\r\n                        voucherForm.setFieldsValue({\r\n                          availability: value,\r\n                        })\r\n                      }\r\n                      defaultValue={0}\r\n                      disabled={availabilityUltd}\r\n                    />\r\n                    <Checkbox\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          voucherForm.setFieldsValue({\r\n                            availability: 'unlimited',\r\n                          });\r\n                          setAvailabilityUltd(true);\r\n                        } else {\r\n                          setAvailabilityUltd(false);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Unlimited\r\n                    </Checkbox>\r\n                  </Space>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Usage Limit per User'\r\n                  name='usageLimit'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the usage limit for each user.',\r\n                    },\r\n                  ]}\r\n                  initialValue={0}\r\n                >\r\n                  <Space size={20}>\r\n                    <InputNumber\r\n                      min={0}\r\n                      onChange={(value) =>\r\n                        voucherForm.setFieldsValue({\r\n                          usageLimit: value,\r\n                        })\r\n                      }\r\n                      defaultValue={0}\r\n                      disabled={usageLimitUltd}\r\n                    />\r\n                    <Checkbox\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          voucherForm.setFieldsValue({\r\n                            usageLimit: 'unlimited',\r\n                          });\r\n                          setUsageLimitUltd(true);\r\n                        } else {\r\n                          setUsageLimitUltd(false);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Unlimited\r\n                    </Checkbox>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='custEligibility'>\r\n                  Customer Eligibility\r\n                </Title>\r\n\r\n                <Form.Item\r\n                  label='Applicable to'\r\n                  name='custType'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please select at least one customer role.',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '40%' }}\r\n                >\r\n                  <Checkbox.Group>\r\n                    <Space direction='vertical'>\r\n                      {custCat.map((type) => (\r\n                        <Checkbox key={type.value} value={type.value}>\r\n                          {type.label}\r\n                        </Checkbox>\r\n                      ))}\r\n                    </Space>\r\n                  </Checkbox.Group>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='availPeriod'>\r\n                  Available Period\r\n                </Title>\r\n                <Form.Item\r\n                  label='Start Time'\r\n                  name='packStartTime'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        'Please select the start time to launch the package.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker showTime placeholder='Select Date and Time' />\r\n                </Form.Item>\r\n                <Checkbox\r\n                  onChange={() =>\r\n                    hideEndTime ? setHideEndTime(false) : setHideEndTime(true)\r\n                  }\r\n                >\r\n                  Set End Time\r\n                </Checkbox>\r\n\r\n                <Form.Item\r\n                  label='End Time'\r\n                  name='packEndTime'\r\n                  hidden={hideEndTime}\r\n                >\r\n                  <DatePicker showTime placeholder='Select Date and Time' />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <AffixAdd offsetBottom={0} label='Package' />\r\n          </MainCardContainer>\r\n        </Col>\r\n        <Col xs={8} xl={5}>\r\n          <Anchor offsetTop={150} targetOffset={targetOffset}>\r\n            {anchorList.map((anchor) => (\r\n              <Link\r\n                key={anchor.link}\r\n                href={`#${anchor.link}`}\r\n                title={anchor.title}\r\n              />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Layout>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default VoucherAdd;\r\n","import MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Avatar,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\nimport AvatarImg from '@assets/avatar.png';\r\nimport Button from '@components/Button';\r\nimport moment from 'moment';\r\nimport { genderCat } from '@utils/optionUtils';\r\n\r\nconst ProfileMgmt = () => {\r\n  const { Text, Title } = Typography;\r\n  const ChangeBtn = (props) => (\r\n    <Button type='link' color='info' {...props}>\r\n      <Text underline className='color-info'>\r\n        Change\r\n      </Text>\r\n    </Button>\r\n  );\r\n\r\n  const InputText = (props) => (\r\n    <Text style={{ marginRight: 30 }}>{props.children}</Text>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='profile-mgmt'>\r\n        <MainCard>\r\n          <Space direction='vertical' size={50} className='full-width'>\r\n            <Row justify='center' align='middle' gutter={50}>\r\n              <Col pull={1}>\r\n                <Avatar\r\n                  src={AvatarImg}\r\n                  alt='avatar'\r\n                  size={170}\r\n                  className='avatarDropdown-avatar'\r\n                  style={{\r\n                    filter: 'drop-shadow(2px 4px 10px rgba(0, 0, 0, 0.25))',\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col pull={1}>\r\n                <Space direction='vertical'>\r\n                  <Title level={4}>Tan Yuan Jie</Title>\r\n                  <Title type='secondary' level={5}>\r\n                    Super Admin\r\n                  </Title>\r\n                </Space>\r\n              </Col>\r\n            </Row>\r\n            <Row justify='center'>\r\n              <Form\r\n                name='profileForm'\r\n                size='small'\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ offset: 2 }}\r\n                style={{ width: '50%' }}\r\n              >\r\n                <Form.Item label='Username' name='username'>\r\n                  <InputText>yuanjie</InputText>\r\n                  <ChangeBtn />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Name' name='name' initialValue='Tan Yuan Jie'>\r\n                  <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Email Address' name='email'>\r\n                  <InputText>yuanjie@sharifahfood.com</InputText>\r\n                  <ChangeBtn />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Phone Number' name='phoneNum'>\r\n                  <InputText>+60 123456789</InputText>\r\n                  <ChangeBtn />\r\n                </Form.Item>\r\n                <Form.Item label='Gender' name='gender' initialValue='m'>\r\n                  <Radio.Group options={genderCat} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Birthdate'\r\n                  name='birthdate'\r\n                  initialValue={moment('2000-08-17')}\r\n                >\r\n                  <DatePicker className='full-width' />\r\n                </Form.Item>\r\n                <Row justify='end' style={{ marginTop: 20 }}>\r\n                  <Button htmlType='submit' type='primary' size='large'>\r\n                    Save\r\n                  </Button>\r\n                </Row>\r\n              </Form>\r\n            </Row>\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProfileMgmt;\r\n","import React, { useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport { Space, Typography, Grid } from 'antd';\r\nimport { MdEmail, MdLock, MdPerson, MdPhone } from 'react-icons/md';\r\nimport DescriptionList from '@components/List/DescriptionList';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst AccSettings = () => {\r\n  const { Text } = Typography;\r\n  const { useBreakpoint } = Grid;\r\n  const screens = useBreakpoint();\r\n\r\n  const [username] = useState('yuanjie');\r\n  const [email] = useState('yuanjie@sharifahfood.com');\r\n  const [phoneNum] = useState('+60 123456789');\r\n\r\n  const data: {\r\n    key: string;\r\n    title: string;\r\n    desc?: string;\r\n    content: React.ReactNode;\r\n    icon: React.ReactNode;\r\n  }[] = [\r\n    {\r\n      key: 'username',\r\n      title: 'Username',\r\n      content: username,\r\n      icon: <MdPerson size={25} className='color-grey' />,\r\n    },\r\n    {\r\n      key: 'email',\r\n      title: 'Email',\r\n      content: email,\r\n      icon: <MdEmail size={25} className='color-grey' />,\r\n    },\r\n    {\r\n      key: 'phoneNum',\r\n      title: 'Phone Number',\r\n      content: phoneNum,\r\n      icon: <MdPhone size={25} className='color-grey' />,\r\n    },\r\n    {\r\n      key: 'password',\r\n      title: 'Password',\r\n      content: (\r\n        <Text type='secondary'>\r\n          Password must contains at least 8 characters, including 1 uppercase\r\n          letter, 1 number and 1 symbol\r\n        </Text>\r\n      ),\r\n      icon: <MdLock size={25} className='color-grey' />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='acc-settings'>\r\n        <MainCard>\r\n          <Space direction='vertical' size={30} className='full-width'>\r\n            <BoldTitle level={4}>Login Information</BoldTitle>\r\n            <DescriptionList\r\n              size={screens.xl && screens.xxl ? 'large' : 'default'}\r\n              dataSource={data}\r\n              buttons={['Change']}\r\n              buttonProps={{ type: 'primary' }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AccSettings;\r\n","export default __webpack_public_path__ + \"static/media/Coding.18bcba89.gif\";","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport Coding from '@assets/ComingSoon/Coding.gif';\r\n\r\nconst AdminMgmt = () => {\r\n  return <ComingSoon img={Coding} />;\r\n};\r\n\r\nexport default AdminMgmt;\r\n","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport Coding from '@assets/ComingSoon/Coding.gif';\r\n\r\nconst AdminAdd = () => {\r\n  return <ComingSoon img={Coding} />;\r\n};\r\n\r\nexport default AdminAdd;\r\n","import Layout from '@components/Layout';\r\n\r\nconst Help = () => {\r\n  return <Layout>Help</Layout>;\r\n};\r\n\r\nexport default Help;\r\n","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport Truck from '@assets/ComingSoon/Truck.gif';\r\n\r\nconst ShptFeeMgmt = () => {\r\n  return <ComingSoon img={Truck} />;\r\n};\r\n\r\nexport default ShptFeeMgmt;\r\n","export default __webpack_public_path__ + \"static/media/404.ff2bc4e6.svg\";","import { Col, Row, Image, Layout, Typography, Space } from 'antd';\r\nimport Button from '@components/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport Img404 from '@assets/404.svg';\r\nimport Logo from '@assets/logo.webp';\r\nimport './NotFound.less';\r\nimport { BoldTitle } from '@components/Title';\r\n\r\nconst NotFound = () => {\r\n  const { Header } = Layout;\r\n  const { Text } = Typography;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Layout className='not-found-layout'>\r\n      <div className='header-fixed' />\r\n      <Header className='header' style={{ width: '100%' }}>\r\n        <Row justify='center' align='middle' className='full-height'>\r\n          <Col className='not-found-logo-wrapper'>\r\n            <Image\r\n              src={Logo}\r\n              alt='Logo'\r\n              preview={false}\r\n              height='65px'\r\n              className='not-found-logo'\r\n              onClick={() => navigate(findRoutePath('root'))}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <BoldTitle level={3}>Page Not Found</BoldTitle>\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n      <Row justify='center' align='middle' className='not-found'>\r\n        <Space direction='vertical' size={30}>\r\n          <Row className='not-found-img-container'>\r\n            <Image\r\n              src={Img404}\r\n              alt='img404'\r\n              preview={false}\r\n              className='not-found-img'\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Space\r\n              direction='vertical'\r\n              size={15}\r\n              className='not-found-text-container'\r\n            >\r\n              <BoldTitle className='not-found-title'>Oops!</BoldTitle>\r\n              <Text className='not-found-text'>\r\n                Looks like you followed a bad link. If you think this is a\r\n                problem with us, please tell us.\r\n              </Text>\r\n            </Space>\r\n          </Row>\r\n          <Row justify='center'>\r\n            <Button\r\n              type='primary'\r\n              className='not-found-btn'\r\n              onClick={() => navigate(findRoutePath('root'))}\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </Row>\r\n        </Space>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { Modal, ModalProps, Result } from 'antd';\r\nimport { useState } from 'react';\r\n\r\ninterface SuccessModalProps extends ModalProps {\r\n  title: string;\r\n  subTitle?: string;\r\n  extra?: React.ReactNode;\r\n}\r\n\r\nconst SuccessModal = ({\r\n  title,\r\n  subTitle,\r\n  extra,\r\n  visible,\r\n  onOk,\r\n  onCancel,\r\n  ...props\r\n}: SuccessModalProps) => {\r\n  const [showModal, setShowModal] = useState(visible);\r\n\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      visible={showModal || visible}\r\n      onOk={handleClose}\r\n      onCancel={handleClose}\r\n      footer={null}\r\n      closable={false}\r\n      maskClosable={false}\r\n      centered\r\n    >\r\n      <Result\r\n        status='success'\r\n        title={title}\r\n        subTitle={subTitle}\r\n        extra={extra}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SuccessModal;\r\n","import Login from '@pages/Login/Login';\r\nimport Dashboard from '@pages/Dashboard/Dashboard';\r\nimport ProdMgmt from '@pages/Products/ProdMgmt';\r\nimport ProdInv from '@pages/Products/ProdInv';\r\nimport ProdAdd from '@pages/Products/ProdAdd';\r\nimport PackMgmt from '@pages/Packages/PackMgmt';\r\nimport PackInv from '@pages/Packages/PackInv';\r\nimport PackAdd from '@pages/Packages/PackAdd';\r\nimport OrderMgmt from '@pages/Orders/OrderMgmt';\r\nimport OrderAdd from '@pages/Orders/OrderAdd';\r\nimport ShptMgmt from '@pages/Shipments/ShptMgmt';\r\nimport CustMgmt from '@pages/Customers/CustMgmt';\r\nimport CustReg from '@pages/Customers/CustReg';\r\nimport CustAdd from '@pages/Customers/CustAdd';\r\nimport Statistics from '@pages/BusinessInsights/BusinessStatistics';\r\nimport InvAnalysis from '@pages/BusinessInsights/InvAnalysis';\r\nimport VoucherMgmt from '@pages/Vouchers/VoucherMgmt';\r\nimport VoucherAdd from '@pages/Vouchers/VoucherAdd';\r\nimport ProfileMgmt from '@pages/MyAccount/ProfileMgmt';\r\nimport AccSettings from '@pages/MyAccount/AccSettings';\r\nimport AdminMgmt from '@pages/Admins/AdminMgmt';\r\nimport AdminAdd from '@pages/Admins/AdminAdd';\r\nimport Help from '@pages/Help/Help';\r\nimport ShpFeeMgmt from '@pages/Shipments/ShptFeeMgmt';\r\nimport NotFound from '@pages/Not Found/NotFound';\r\nimport ResetPass from '@pages/Login/ResetPass';\r\n\r\nconst routeList: {\r\n  label: string;\r\n  path: string;\r\n  protected?: boolean;\r\n  component?: (props)=>JSX.Element;\r\n}[] = [\r\n  {\r\n    label: 'notFound',\r\n    path: '/404',\r\n    protected: true,\r\n    component: NotFound ,\r\n  },\r\n  {\r\n    label: 'login',\r\n    path: '/login',\r\n    protected: false,\r\n    component: Login ,\r\n  },\r\n  {\r\n    label: 'dashboard',\r\n    path: '/dashboard',\r\n    protected: true,\r\n    component: Dashboard ,\r\n  },\r\n  {\r\n    label: 'product',\r\n    path: '/product',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'prodMgmt',\r\n    path: '/product/management',\r\n    protected: true,\r\n    component: ProdMgmt ,\r\n  },\r\n  {\r\n    label: 'prodInv',\r\n    path: '/product/inventory',\r\n    protected: true,\r\n    component: ProdInv ,\r\n  },\r\n  {\r\n    label: 'prodAdd',\r\n    path: '/product/add',\r\n    protected: true,\r\n    component: ProdAdd ,\r\n  },\r\n  {\r\n    label: 'package',\r\n    path: '/package',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'packMgmt',\r\n    path: '/package/management',\r\n    protected: true,\r\n    component: PackMgmt ,\r\n  },\r\n  {\r\n    label: 'packInv',\r\n    path: '/package/inventory',\r\n    protected: true,\r\n    component: PackInv ,\r\n  },\r\n  {\r\n    label: 'packAdd',\r\n    path: '/package/add',\r\n    protected: true,\r\n    component: PackAdd ,\r\n  },\r\n  {\r\n    label: 'order',\r\n    path: '/order',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderMgmt',\r\n    path: '/order/management',\r\n    protected: true,\r\n    component: OrderMgmt ,\r\n  },\r\n  {\r\n    label: 'orderPend',\r\n    path: '/order/management?status=toShip',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderCancel',\r\n    path: '/order/management?status=cancel',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderUnpaid',\r\n    path: '/order/management?status=unpaid',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderRefund',\r\n    path: '/order/management?status=refund',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderAdd',\r\n    path: '/order/add',\r\n    protected: true,\r\n    component: OrderAdd ,\r\n  },\r\n\r\n  {\r\n    label: 'shipment',\r\n    path: '/shipment',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'shptMgmt',\r\n    path: '/shipment/management',\r\n    protected: true,\r\n    component: ShptMgmt ,\r\n  },\r\n  {\r\n    label: 'shpFeeMgmt',\r\n    path: '/shipment/shipping-fee',\r\n    protected: true,\r\n    component: ShpFeeMgmt ,\r\n  },\r\n  {\r\n    label: 'customer',\r\n    path: '/customer',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'custMgmt',\r\n    path: '/customer/management',\r\n    protected: true,\r\n    component: CustMgmt ,\r\n  },\r\n  {\r\n    label: 'custReg',\r\n    path: '/customer/registrations',\r\n    protected: true,\r\n    component: CustReg ,\r\n  },\r\n  {\r\n    label: 'custAdd',\r\n    path: '/customer/add',\r\n    protected: true,\r\n    component: CustAdd ,\r\n  },\r\n  {\r\n    label: 'bizInsights',\r\n    path: '/business-insights',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'bizStatistics',\r\n    path: '/business-insights/statistics',\r\n    protected: true,\r\n    component: Statistics ,\r\n  },\r\n  {\r\n    label: 'invAnalysis',\r\n    path: '/business-insights/inventory-analysis',\r\n    protected: true,\r\n    component: InvAnalysis ,\r\n  },\r\n  {\r\n    label: 'voucher',\r\n    path: '/voucher',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'voucherMgmt',\r\n    path: '/voucher/management',\r\n    protected: true,\r\n    component: VoucherMgmt ,\r\n  },\r\n  {\r\n    label: 'voucherAdd',\r\n    path: '/voucher/add',\r\n    protected: true,\r\n    component: VoucherAdd ,\r\n  },\r\n  {\r\n    label: 'myAccount',\r\n    path: '/my-acc',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'profileMgmt',\r\n    path: '/my-acc/profile-management',\r\n    protected: true,\r\n    component: ProfileMgmt ,\r\n  },\r\n  {\r\n    label: 'accSettings',\r\n    path: '/my-acc/acc-settings',\r\n    protected: true,\r\n    component: AccSettings ,\r\n  },\r\n  {\r\n    label: 'admin',\r\n    path: '/admin',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'adminMgmt',\r\n    path: '/admin/management',\r\n    protected: true,\r\n    component: AdminMgmt ,\r\n  },\r\n  {\r\n    label: 'adminAdd',\r\n    path: '/admin/add',\r\n    protected: true,\r\n    component: AdminAdd ,\r\n  },\r\n  {\r\n    label: 'help',\r\n    path: '/help',\r\n    protected: true,\r\n    component: Help ,\r\n  },\r\n  {\r\n    label: 'resetPass',\r\n    path: '/pass_reset',\r\n    protected: false,\r\n    component: ResetPass ,\r\n  },\r\n  {\r\n    label: 'logout',\r\n    path: '/',\r\n  },\r\n  {\r\n    label: 'root',\r\n    path: '/',\r\n  },\r\n];\r\n\r\nexport default routeList;\r\n","import { Col, Row, Form, Typography, Space, Input, message } from 'antd';\r\nimport Button from '@components/Button';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport ColorCard from '@components/Card/ColorCard';\r\nimport { useEffect, useState } from 'react';\r\nimport { MdCancel, MdCheckCircle } from 'react-icons/md';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport {\r\n  checkLength,\r\n  hasDigit,\r\n  hasLowerCaseLetter,\r\n  hasSymbolLetter,\r\n  hasUpperCaseLetter,\r\n} from '@utils/strUtils';\r\nimport { resetPassAPI, validateForgotPassTknAPI } from '@api/services/authAPI';\r\nimport SuccessModal from '@components/Modal/SuccessModal';\r\nimport PageLoad from '@components/Loading/PageLoad';\r\n\r\nconst ResetPass = () => {\r\n  const { Text, Title } = Typography;\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const [resetPassForm] = useForm();\r\n  const [hasNumberic, setHasNumeric] = useState(false);\r\n  const [hasLowerCase, setHasLowerCase] = useState(false);\r\n  const [hasUpperCase, setHasUpperCase] = useState(false);\r\n  const [hasSymbol, setHasSymbol] = useState(false);\r\n  const [passInRange, setPassInRange] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [resetErrMsg, setResetErrMsg] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!searchParams.has('token')) {\r\n      navigate('/');\r\n    } else {\r\n      setPageLoading(true);\r\n      validateForgotPassTknAPI(searchParams.get('token'))\r\n        .catch(() => {\r\n          navigate('/');\r\n        })\r\n        .finally(() => {\r\n          setPageLoading(false);\r\n        });\r\n    }\r\n  }, [navigate, searchParams]);\r\n\r\n  const passValidation = [\r\n    {\r\n      code: 'password_length_validation',\r\n      message: '8 to 16 characters',\r\n      validation: passInRange,\r\n    },\r\n    {\r\n      code: 'password_no_number',\r\n      message: 'At least 1 digit',\r\n      validation: hasNumberic,\r\n    },\r\n    {\r\n      code: 'password_no_upper',\r\n      message: 'At least 1 uppercase letter',\r\n      validation: hasUpperCase,\r\n    },\r\n    {\r\n      code: 'password_no_lower',\r\n      message: 'At least 1 lowercase letter',\r\n      validation: hasLowerCase,\r\n    },\r\n    {\r\n      code: 'password_no_symbol',\r\n      message: 'At least 1 symbol',\r\n      validation: hasSymbol,\r\n    },\r\n  ];\r\n\r\n  const Icon = ({ match, ...props }: IconBaseProps & { match: boolean }) =>\r\n    match ? (\r\n      <MdCheckCircle className='color-success' />\r\n    ) : (\r\n      <MdCancel className='color-error' />\r\n    );\r\n\r\n  interface PassCriteriaListProps {\r\n    errMsg: string;\r\n    validation: boolean;\r\n  }\r\n\r\n  const PassCriteriaList = ({ errMsg, validation }: PassCriteriaListProps) => {\r\n    return (\r\n      <Row align='middle' gutter={5}>\r\n        <Col className='center-flex'>\r\n          <Icon match={validation} />\r\n        </Col>\r\n        <Col>\r\n          <Text>{errMsg}</Text>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const handleResetPass = (values) => {\r\n    setSubmitLoading(true);\r\n    resetPassAPI({\r\n      token: searchParams.get('token'),\r\n      password: values.password,\r\n    })\r\n      .then(() => setSuccessModal(true))\r\n      .catch((err) => {\r\n        if (err.response.status === 400)\r\n          setResetErrMsg(err.response.data.password);\r\n        else {\r\n          message.error('Error encountered. Please try again.');\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setSubmitLoading(false);\r\n      });\r\n  };\r\n\r\n  return !pageLoading ? (\r\n    <Form\r\n      name='resetPass'\r\n      form={resetPassForm}\r\n      layout='vertical'\r\n      onFinish={handleResetPass}\r\n    >\r\n      <Row justify='center' align='middle' style={{ minHeight: '100vh' }}>\r\n        <Col style={{ width: 450 }}>\r\n          <MainCard>\r\n            <Space direction='vertical' size={15} className='full-width'>\r\n              <Title level={4} className='center-flex'>\r\n                Reset Password\r\n              </Title>\r\n              <Space\r\n                direction='vertical'\r\n                size={0}\r\n                align='center'\r\n                className='full-width'\r\n              >\r\n                <Text>Create a new password for</Text>\r\n                <Text className='color-primary'>\r\n                  {searchParams.get('email')}\r\n                </Text>\r\n              </Space>\r\n              <ColorCard backgroundColor='grey' bodyStyle={{ padding: 15 }}>\r\n                <Space direction='vertical' size={0}>\r\n                  <Text>\r\n                    Your password must fulfill the following criteria:\r\n                  </Text>\r\n                  {passValidation.map((err, index) => (\r\n                    <PassCriteriaList\r\n                      key={`passCriteriaList-${index}`}\r\n                      errMsg={err.message}\r\n                      validation={err.validation}\r\n                    />\r\n                  ))}\r\n                </Space>\r\n              </ColorCard>\r\n              <Space direction='vertical' size={10} className='full-width'>\r\n                <Form.Item\r\n                  name='password'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      validator: (_, value) => {\r\n                        if (value.trim() === '')\r\n                          return Promise.reject(\r\n                            new Error('Please enter new password.')\r\n                          );\r\n\r\n                        if (\r\n                          !(\r\n                            hasNumberic &&\r\n                            hasUpperCase &&\r\n                            hasLowerCase &&\r\n                            hasSymbol\r\n                          )\r\n                        ) {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              'The password must follow the criteria above.'\r\n                            )\r\n                          );\r\n                        }\r\n\r\n                        return Promise.resolve();\r\n                      },\r\n                    },\r\n                  ]}\r\n                  validateStatus={resetErrMsg.length > 0 && 'error'}\r\n                  help={resetErrMsg.map((errMsg) => (\r\n                    <ul className='text-sm'>\r\n                      <li style={{ textAlign: 'justify' }}>{errMsg}</li>\r\n                    </ul>\r\n                  ))}\r\n                >\r\n                  <Input.Password\r\n                    placeholder='Password'\r\n                    maxLength={16}\r\n                    onChange={(e) => {\r\n                      const pass = e.target.value.trim();\r\n                      resetPassForm.setFieldsValue({\r\n                        password: pass,\r\n                      });\r\n                      if (hasDigit(pass)) setHasNumeric(true);\r\n                      else setHasNumeric(false);\r\n                      if (hasUpperCaseLetter(pass)) setHasUpperCase(true);\r\n                      else setHasUpperCase(false);\r\n                      if (hasLowerCaseLetter(pass)) setHasLowerCase(true);\r\n                      else setHasLowerCase(false);\r\n                      if (hasSymbolLetter(pass)) setHasSymbol(true);\r\n                      else setHasSymbol(false);\r\n                      if (checkLength(pass, 8, 16)) setPassInRange(true);\r\n                      else setPassInRange(false);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name='confirmPass'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter again the password entered.',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error('Password must be the same.')\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    placeholder='Confirm Password'\r\n                    maxLength={16}\r\n                  />\r\n                </Form.Item>\r\n                <Button\r\n                  htmlType='submit'\r\n                  type='primary'\r\n                  block\r\n                  loading={submitLoading}\r\n                >\r\n                  Reset Password\r\n                </Button>\r\n              </Space>\r\n            </Space>\r\n          </MainCard>\r\n        </Col>\r\n      </Row>\r\n      <SuccessModal\r\n        visible={successModal}\r\n        title='Reset Password Successful'\r\n        subTitle='You can now use the new password to login your account.'\r\n        extra={[\r\n          <Button type='primary' onClick={() => navigate('/')}>\r\n            Go to Login\r\n          </Button>,\r\n        ]}\r\n      />\r\n    </Form>\r\n  ) : (\r\n    <PageLoad />\r\n  );\r\n};\r\n\r\nexport default ResetPass;\r\n","export const hasDigit = (str: string) => /\\d/.test(str);\r\n\r\nexport const hasUpperCaseLetter = (str: string) => /[A-Z]/.test(str);\r\n\r\nexport const hasLowerCaseLetter = (str: string) => /[a-z]/.test(str);\r\n\r\nexport const hasSymbolLetter = (str: string) =>\r\n  /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/.test(str);\r\n\r\nexport const checkLength = (str: string, minRange: number, maxRange: number) =>\r\n  str.length >= minRange && str.length <= maxRange;\r\n","import routeList from '@routes/routeList';\r\nimport siderMenuList from '@components/Layout/Sider/siderMenuList';\r\nimport { IconType } from 'react-icons';\r\n\r\nexport const findRoutePath = (label: string) => {\r\n  let route = routeList.find((route) => route.label === label);\r\n  return route?.path === undefined ? '404' : route.path;\r\n};\r\n\r\nexport const findRouteLabel = (path: string) => {\r\n  let route = routeList.find((route) => route.path === path);\r\n  return route?.label === undefined ? '404' : route.label;\r\n};\r\n\r\nexport const findIcon = (cat: string) => {\r\n  let selected = siderMenuList.map((siderMenuLevel) =>\r\n    siderMenuLevel.items.find((item) => item.key === cat)\r\n  );\r\n  let icons = selected.find((selectedItem) => selectedItem !== undefined);\r\n  let MatchedIcon: IconType = icons!.icon;\r\n  return MatchedIcon;\r\n};\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Modal, ModalProps, Row, Space, Spin, Typography } from 'antd';\r\nimport moment from 'moment';\r\nimport { logoutAPI, refreshTknAPI } from '@api/services/authAPI';\r\nimport Button from '@components/Button';\r\nimport { useTimer } from 'react-timer-hook';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { addStorageItem, getSessionExp } from '@utils/storageUtils';\r\nimport { useIdleTimer } from 'react-idle-timer';\r\nimport { MdAccessTimeFilled } from 'react-icons/md';\r\nimport { getCurUnixTm } from '@utils/dateUtils';\r\n\r\ninterface SessionExtendModalProps extends ModalProps {}\r\n\r\nconst SessionExtendModal = ({ visible, ...props }: SessionExtendModalProps) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { Text, Title } = Typography;\r\n  const [showModal, setShowModal] = useState(visible);\r\n  const [loading, setLoading] = useState(false);\r\n  const [spinLoading, setSpinLoading] = useState(false);\r\n  const idleTimer = useIdleTimer({\r\n    timeout: 10000,\r\n  });\r\n\r\n  const timer = useTimer({\r\n    expiryTimestamp:\r\n      getSessionExp() &&\r\n      moment.unix(getSessionExp()).subtract(15, 'second').toDate(),\r\n    onExpire: () => {\r\n      if (location.pathname === findRoutePath('login')) return;\r\n      if (!(idleTimer.isIdle() || showModal))\r\n        refreshTknAPI().then(() => {\r\n          setShowModal(false);\r\n          timer.restart(\r\n            moment.unix(getSessionExp()).subtract(15, 'second').toDate()\r\n          );\r\n        });\r\n      else {\r\n        setSpinLoading(true);\r\n        logoutAPI().finally(() => {\r\n          setSpinLoading(false);\r\n          addStorageItem('exp', String(getCurUnixTm()));\r\n          navigate(findRoutePath('login'));\r\n          setShowModal(false);\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      timer.days <= 0 &&\r\n      timer.hours <= 0 &&\r\n      timer.minutes < 3 &&\r\n      location.pathname !== findRoutePath('login') &&\r\n      idleTimer.isIdle()\r\n    )\r\n      setShowModal(true);\r\n  }, [idleTimer, location.pathname, timer.days, timer.hours, timer.minutes]);\r\n\r\n  const extendPageSession = () => {\r\n    setLoading(true);\r\n    refreshTknAPI().then(() => {\r\n      timer.restart(\r\n        moment.unix(getSessionExp()).subtract(15, 'second').toDate()\r\n      );\r\n      setShowModal(false);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    navigate(findRoutePath('login'));\r\n    logoutAPI();\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={showModal || visible}\r\n      footer={null}\r\n      centered\r\n      onOk={extendPageSession}\r\n      maskClosable={false}\r\n      closable={false}\r\n      {...props}\r\n    >\r\n      <Spin spinning={spinLoading}>\r\n        <Space direction='vertical' size={20} className='full-width'>\r\n          <Space size={10}>\r\n            <MdAccessTimeFilled size={25} className='color-error' />\r\n            <Text strong>Your session will be expired in</Text>\r\n          </Space>\r\n          <Space align='center' className='center-flex'>\r\n            <Row align='bottom' gutter={5}>\r\n              <Col>\r\n                <Title level={4}>{timer.minutes}</Title>\r\n              </Col>\r\n              <Col>\r\n                <Title level={5}>Minutes</Title>\r\n              </Col>\r\n            </Row>\r\n            <Row align='bottom' gutter={5}>\r\n              <Col>\r\n                <Title level={4}>{timer.seconds}</Title>\r\n              </Col>\r\n              <Col>\r\n                <Title level={5}>Seconds</Title>\r\n              </Col>\r\n            </Row>\r\n          </Space>\r\n          <Text>Do you want to extend your session?</Text>\r\n          <Row gutter={20} justify='end'>\r\n            <Col>\r\n              <Button color='error' onClick={handleClose}>\r\n                Log Out\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                type='primary'\r\n                onClick={extendPageSession}\r\n                loading={loading}\r\n              >\r\n                Stay Logged In\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Space>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SessionExtendModal;\r\n","import { Navigate, Outlet, useLocation } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport Cookies from 'js-cookie';\r\nimport routeList from './routeList';\r\n\r\nconst AuthRoute = (_props) => {\r\n  const location = useLocation();\r\n  const notProtectedRoute = routeList\r\n    .filter((route) => route.protected === false)\r\n    .map((filteredRoute) => filteredRoute.path);\r\n  const access = Cookies.get('access_token');\r\n  if (!(access || notProtectedRoute.includes(location.pathname))) {\r\n    return (\r\n      <Navigate\r\n        to={findRoutePath('login')}\r\n        state={{ from: location }}\r\n        replace\r\n      />\r\n    );\r\n  }\r\n\r\n  if (access && notProtectedRoute.includes(location.pathname)) {\r\n    return <Navigate to='/' replace />;\r\n  }\r\n\r\n  return <Outlet />;\r\n};\r\n\r\nexport default AuthRoute;\r\n","const routeRedirectList: {\r\n  path: string;\r\n  redirect: string;\r\n}[] = [\r\n  { path: '*', redirect: '/404' },\r\n  { path: '/', redirect: '/dashboard' },\r\n  { path: '/product', redirect: '/product/management' },\r\n  { path: '/package', redirect: '/package/management' },\r\n  { path: '/order', redirect: '/order/management' },\r\n  { path: '/shipment', redirect: '/shipment/management' },\r\n  { path: '/customer', redirect: '/customer/management' },\r\n  { path: '/business-insights', redirect: '/business-insights/statistics' },\r\n  { path: '/voucher', redirect: '/voucher/management' },\r\n  { path: '/my-acc', redirect: '/my-acc/profile-management' },\r\n  { path: '/admin', redirect: '/admin/management' },\r\n];\r\n\r\nexport default routeRedirectList;\r\n","import PageLoad from '@components/Loading/PageLoad';\r\nimport SessionExpModal from '@components/Modal/AuthModal/SessionExtendModal';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from 'react-router-dom';\r\nimport AuthRoute from './AuthRoute';\r\nimport routeList from './routeList';\r\nimport routeRedirectList from './routeRedirectList';\r\nimport { useEffect, useState } from 'react';\r\nimport { verifyTknAPI } from '@api/services/authAPI';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\n\r\nexport default function AppRoute() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [sessionExp, setSessionExp] = useState(false);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    verifyTknAPI()\r\n      .then(() => {\r\n        setSessionExp(false);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response?.status === 401) {\r\n          setSessionExp(true);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {sessionExp && (\r\n          <Route element={<Navigate to={findRoutePath('login')} />} />\r\n        )}\r\n        <Route element={<AuthRoute />}>\r\n          {routeRedirectList.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              element={<Navigate to={route.redirect} replace />}\r\n            />\r\n          ))}\r\n          {routeList.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              element={\r\n                loading ? (\r\n                  <PageLoad />\r\n                ) : (\r\n                  <>\r\n                    <route.component/>\r\n                    <SessionExpModal />\r\n                  </>\r\n                )\r\n              }\r\n            />\r\n          ))}\r\n        </Route>\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport siderReducer from './siderSlice';\r\nconst store = configureStore({\r\n  reducer: {\r\n    sider: siderReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import ConfigProvider from 'antd/es/config-provider';\r\nimport './App.less';\r\nimport Routes from '@routes/AppRoutes';\r\nimport { Provider } from 'react-redux';\r\nimport store from './state';\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConfigProvider prefixCls='shrf'>\r\n        <IconContext.Provider\r\n          value={{ style: { verticalAlign: 'middle', textAlign: 'center' } }}\r\n        >\r\n          <Routes />\r\n        </IconContext.Provider>\r\n      </ConfigProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.less';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}