{"version":3,"sources":["components/Card/MainCard/index.tsx","components/Carousel/CarouselArrow.tsx","utils/storageUtils.tsx","api/axiosInstance.ts","assets/Icons/BulkEditIcon.svg","api/services/authAPI.ts","components/Button/index.tsx","assets/Login/Hashtag.svg","assets/Login/LoginBackground.webp","assets/logo.webp","components/Title/BoldTitle/index.tsx","assets/Login/emailSuccess.png","components/Modal/AuthModal/CheckEmailModal.tsx","components/Modal/AuthModal/ForgotPassModal.tsx","components/Modal/AuthModal/index.tsx","pages/Login/Login.tsx","hooks/useRedux.tsx","components/BreadCrumb/breadCrumpList.ts","components/BreadCrumb/index.tsx","components/AvatarDropdown/avatarDropdownList.ts","assets/avatar.png","components/AvatarDropdown/index.tsx","components/NotificationDropdown/notificationDropdownList.tsx","components/NotificationDropdown/index.tsx","components/Layout/Header/index.tsx","state/siderSlice.ts","components/Layout/Sider/siderMenuList.ts","components/Layout/Sider/siderDefKeyList.ts","components/Layout/Sider/index.tsx","utils/dateUtils.tsx","components/Layout/Footer/index.tsx","components/Layout/index.tsx","components/Card/ColorCard/index.tsx","components/Table/index.tsx","components/Statistics/index.tsx","components/Tag/index.tsx","components/Container/MainCardContainer/index.tsx","pages/Dashboard/toDoList.ts","pages/Dashboard/salesData.ts","pages/Dashboard/statisticsData.ts","pages/Dashboard/recentOrders.tsx","pages/Dashboard/topProducts.ts","pages/Dashboard/invAnalysis.ts","utils/arrayUtils.tsx","components/Popover/index.tsx","components/List/RankingList/index.tsx","components/Statistics/statisticsList.ts","utils/optionUtils.tsx","pages/Dashboard/Dashboard.tsx","components/Container/FilterInputCol.tsx","components/Input/InputNumberRange/index.tsx","components/Input/InputSelect/index.tsx","components/Input/SelectWithLabel/index.tsx","pages/Products/FilterInputs.tsx","components/Table/InformativeTable/index.tsx","assets/Product/NasiBukhari.png","pages/Products/prodList.ts","pages/Products/prodTabList.ts","utils/numUtils.tsx","components/Button/ActionButton/AcceptButton.tsx","components/Button/ActionButton/ActivateButton.tsx","components/Button/ActionButton/BulkEditButton.tsx","components/Button/ActionButton/DeleteButton.tsx","components/Button/ActionButton/EditButton.tsx","components/Button/ActionButton/HideButton.tsx","components/Button/ActionButton/PrintButton.tsx","components/Button/ActionButton/RejectButton.tsx","components/Button/ActionButton/SuspendButton.tsx","components/Tag/StatusTag/index.tsx","components/List/DescriptionList/index.tsx","components/Modal/ActionModal/Content.tsx","components/Modal/ActionModal/index.tsx","components/Modal/ActionModal/DeleteModal.tsx","components/Modal/ActionModal/HideModal.tsx","pages/Products/ProdMgmt.tsx","components/Input/InvStockInput/index.tsx","pages/Products/ProdInv.tsx","components/Upload/UploadPicWall/UploadPicWall.tsx","components/Affix/AffixAdd.tsx","components/Input/TextEditor/index.tsx","pages/Products/ProdAdd.tsx","components/Input/DateRangePickerWithLabel/index.tsx","pages/Packages/FilterInputs.tsx","pages/Packages/packageList.ts","assets/Product/PromoRayaQurban.png","pages/Packages/packTabList.ts","pages/Packages/PackMgmt.tsx","pages/Packages/PackInv.tsx","pages/Packages/PackAdd.tsx","pages/Orders/FilterInputs.tsx","pages/Orders/orderList.ts","pages/Orders/orderTabList.ts","components/Button/ActionButton/UpdButton.tsx","pages/Orders/OrderMgmt.tsx","components/Layout/ComingSoon/index.tsx","assets/ComingSoon/eCommerce.gif","pages/Orders/OrderAdd.tsx","assets/ComingSoon/Truck.gif","pages/Shipments/ShptMgmt.tsx","pages/Customers/FilterInputs.tsx","pages/Customers/custList.ts","pages/Customers/CustMgmt.tsx","pages/Customers/custRegList.ts","pages/Customers/CustReg.tsx","pages/Customers/CustAdd.tsx","components/Input/MenuDatePicker/index.tsx","components/Input/DropdownDate/index.tsx","pages/BusinessInsights/BusinessStatistics/statisticsData.ts","pages/BusinessInsights/BusinessStatistics/keyMetricsList.ts","pages/BusinessInsights/BusinessStatistics/topProducts.ts","pages/BusinessInsights/BusinessStatistics/index.tsx","components/Card/AnalysisCard/index.tsx","components/Card/CollapseCard/index.tsx","components/Input/DatePickerWithLabel/index.tsx","pages/BusinessInsights/InvAnalysis/FilterInputs.tsx","pages/BusinessInsights/InvAnalysis/Icons/DescIcon.tsx","pages/BusinessInsights/InvAnalysis/Icons/GradeIcon.tsx","pages/BusinessInsights/InvAnalysis/Analyses/abcAnalysis.tsx","pages/BusinessInsights/InvAnalysis/Analyses/hmlAnalysis.tsx","pages/BusinessInsights/InvAnalysis/Analyses/eoqAnalysis.tsx","pages/BusinessInsights/InvAnalysis/Analyses/ssAnalysis.tsx","pages/BusinessInsights/InvAnalysis/Analyses/index.tsx","pages/BusinessInsights/InvAnalysis/index.tsx","pages/Vouchers/FilterInputs.tsx","pages/Vouchers/voucherList.ts","components/Tooltip/index.tsx","pages/Vouchers/VoucherMgmt.tsx","pages/Vouchers/VoucherAdd.tsx","pages/MyAccount/ProfileMgmt.tsx","pages/MyAccount/AccSettings.tsx","assets/ComingSoon/Coding.gif","pages/Admins/AdminMgmt.tsx","pages/Admins/AdminAdd.tsx","pages/Help/Help.tsx","pages/Shipments/ShptFeeMgmt.tsx","assets/404.svg","pages/Not Found/NotFound.tsx","components/Modal/SuccessModal.tsx","pages/Login/ResetPass.tsx","utils/strUtils.tsx","routes/routeList.tsx","utils/routingUtils.tsx","components/Modal/AuthModal/SessionExtendModal.tsx","routes/AuthRoute.tsx","routes/routeRedirectList.ts","routes/AppRoutes.tsx","state/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MainCard","className","props","bordered","bodyStyle","padding","undefined","CarouselArrow","useState","carouselPrev","setCarouselPrev","carouselNext","setCarouselNext","dots","arrows","prevArrow","nextArrow","afterChange","current","React","Children","count","children","setExp","exp","window","localStorage","setItem","String","getSessionExp","parseInt","getItem","clearStorage","clear","axios","oriAxios","create","baseURL","timeout","headers","Authorization","Cookies","get","accept","withCredentials","interceptors","response","use","res","a","error","originalRequest","config","Promise","reject","status","url","defaults","remove","location","href","data","code","statusText","refreshTknAPI","then","console","log","catch","err","_path","logoutAPI","post","resolve","Button","color","BoldTitle","style","Title","fontWeight","CheckEmailModal","memo","_ref","onOk","Text","onCancel","direction","size","align","textAlign","src","EmailSuccess","alt","width","level","htmlType","type","onClick","ForgotPassModal","useForm","forgotPass","loading","setLoading","name","form","layout","onFinish","values","email","AuthModal","show","Item","rules","required","message","placeholder","AuthModalComponent","checkEmail","visible","setVisible","modalType","setModalType","payloadRef","useRef","useEffect","payload","handleOk","method","handleCancel","footer","destroyOnClose","centered","ModalRender","renderModal","Login","loginErr","setLoginErr","handleLogin","loginDetails","username","password","e","getErrMsg","showIcon","Helmet","content","xs","span","order","sm","md","lg","xl","Hashtag","height","preview","draggable","pointerEvents","userSelect","whitespace","Password","block","marginTop","marginBottom","icon","position","left","justify","Logo","float","Inventory","useAppSelector","useSelector","breadcrumbNameMap","BreadCrumb","pathSnippets","useLocation","pathname","split","filter","i","extraBreadcrumbItems","map","_","index","slice","join","hasOwnProperty","to","breadcrumbItems","concat","separator","top","menuList","key","label","MdPersonOutline","MdOutlineSettings","MdLogout","AvatarDropdown","role","img","navigate","useNavigate","menuAvatarDropdown","defaultSelectedKeys","item","menu","overlay","arrow","placement","gutter","AvatarImg","cat","title","description","timestamp","read","NotificationDropdown","markAllRead","setMarkAllRead","menuNotificationDropdown","substring","length","disabled","cursor","strong","Divider","ItemGroup","word","Icon","findIcon","dot","offset","margin","charAt","toUpperCase","findRoutePath","Header","isSiderCollapsed","state","sider","collapsed","classNames","minWidth","siderSlice","createSlice","initialState","reducers","collapse","expand","actions","items","MdHome","MdShoppingBag","child","MdInventory","MdAssignment","MdLocalShipping","MdGroups","MdInsertChart","MdConfirmationNumber","MdAccountCircle","MdAssignmentInd","MdHelp","siderDefKeyList","path","Sider","SubMenu","collapsedSiderOpen","setCollapsedSiderOpen","dispatch","useDispatch","selectedKeys","find","defKey","search","openKeys","theme","breakpoint","onMouseLeave","onBreakpoint","mode","defaultOpenKeys","inlineIndent","onMouseOver","menuLevel","getDt","date","inputFormat","outputFormat","moment","format","getWeekDt","startOf","endOf","getDayOfWeek","getWeekOfYear","getMth","getMthDt","getYr","getYrDt","getPastDays","num","subtract","getNextDt","add","getMomentNextDt","getNextWeek","getThisWeekTilYtd","getNextMth","getThisMthTilYtd","getNextYr","getThisYrTilYtd","getPrevDt","getPrevWeek","getPrevMth","getPrevYr","validateDay","func","newDt","isMoment","newLbl","newCat","disabledNext","isAfter","validateWeek","isSameOrAfter","isBetween","validateMonth","validateYear","validateDropdownDate","dateInfo","RegExp","test","numDays","formatDt","startDt","endDt","Footer","Layout","Content","hasSider","fallback","ColorCard","backgroundColor","hover","indicator","right","Table","Statistics","space","avatarSize","flex","fontSize","valueSize","prefix","value","toFixed","suffix","untilTm","Tag","maxWidth","border","borderRadius","MainCardContainer","toDoList","quantity","link","dataYear","year","Month","Sales","dataMonth","month","Day","dataWeek","frmDate","toDate","dataDay","Hour","statisticsData","sales","profit","visitors","newCust","newOrder","recentOrders","orderID","custName","custType","orderTime","amount","topProduct","invAnalysis","prodNm","stock","ABC","HML","reorderPt","optimalOrderQty","splitIntoChunks","arr","chunkSize","chunk","push","sortByOrder","obj","des","sorted","sort","b","localeCompare","reverse","Popover","overlayStyle","RankingList","dataSource","cardSelections","selectOptions","onCardSelect","onSelectChange","selectedCard","setSelectedCard","chunks","selection","desc","onChange","renderItem","active","Meta","statisticsList","MdOutlineTrendingUp","MdOutlineAttachMoney","MdOutlineVisibility","MdOutlineAssignment","ynOptions","dateRangeOptions","prodCat","prodStatList","packStatList","orderStatList","custStatList","voucherStatList","genderCat","maritalStatCat","custPositionCat","custStatusCat","custCat","invInputOptions","LineChart","lazy","Dashboard","Typography","salesDateRange","setSalesDateRange","getSalesData","getSalesDate","getChartTitle","includes","getChartTooltipTitlePrefix","getChartTooltipTitleSuffix","More","route","recentOrderColumns","dataIndex","render","id","parseFloat","OrderStatusTag","invAnalysisColumns","text","ToDoList","toDoItem","Group","buttonStyle","marginRight","target","options","optionType","paddingTop","spin","titleX","tooltipName","tooltipTitlePrefix","tooltipTitleSuffix","tooltipValPrefix","StatisticsDashboard","statistics","RecentOrder","columns","pagination","scroll","x","TopProducts","InvAnalysis","FilterInputCol","InputNumberRange","textSpan","prefixWidth","suffixWidth","inputNumWidth","compact","InputSelect","selectBefore","selectAfter","selectWidth","inputSelectBefore","defaultValue","defaultVal","inputSelectAfter","addonBefore","addonAfter","SelectWithLabel","select","allowClear","FilterInputs","prodCatSelect","min","precision","InformativeTable","defPg","buttons","rowSelectable","selectedRowKeys","setSelectedRowKeys","selectedRowCount","setSelectedRowCount","btnShow","setBtnShow","rowSelection","selectedRows","buttonShow","forEach","btn","selected","btnShowCondition","btnToShow","fltr","rel","fld","element","showTotal","total","showSizeChanger","showQuickJumper","defaultPageSize","pageSizeOptions","prodList","prodSKU","prodImg","NasiBriyaniBukhari","prodPrice","prodStock","prodStat","hashtag","prodTabList","tab","moneyFormatter","numOnly","percentFormatter","AcceptButton","ActivateButton","_extends","Object","assign","arguments","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBulkEditIcon","svgRef","titleId","viewBox","fill","xmlns","ref","d","ForwardRef","BulkEditButton","DeleteButton","EditButton","HideButton","PrintButton","RejectButton","SuspendButton","StatusTag","statusList","dropdownStatus","onDropdownSelect","statusItem","matchedStatus","DescriptionList","onButtonClick","buttonProps","titleProps","descProps","avatar","okText","recordType","multi","ActionModalComponent","delete","HiTrash","hide","HiEyeOff","ActionModal","multiItem","setMultiItem","loadParentFunc","afterClose","ProdMgmt","useMessage","messageApi","contextHolder","prodListFltr","setProdListFltr","selectedProds","setSelectedProds","useSearchParams","searchParams","setSearchParams","prod","actionModalProps","showActionMsg","action","open","setTimeout","destroy","onSelectBtn","fetch","prodMgmtColumns","sorter","selectedStatus","tabList","activeTabKey","onTabChange","stat","selectedProd","some","InvStockInput","input","onSave","operation","setOperation","setValue","ProdInv","prodInvColumns","UploadPicWall","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","originFileObj","lastIndexOf","uploadButton","listType","onPreview","multiple","fileList","AffixAdd","showCard","setShowCard","affixed","boxShadow","borderTopLeftRadius","borderTopRightRadius","background","BraftEditor","ColorPicker","clearButtonText","closeButtonText","columnResizable","TextEditor","language","excludeControls","ProdAdd","prodForm","Link","uid","setFileList","targetOffset","setTargetOffset","innerHeight","info","validator","isEmpty","tooltip","offsetBottom","offsetTop","anchor","DatePickerWithLabel","RangePicker","packageList","packNm","packProds","packSKU","packImg","packPrice","packStock","packStat","packTabList","PackMgmt","packageListFltr","setPackageListFltr","pack","packMgmtColumns","products","product","PackInv","packInvColumns","PackAdd","Paragraph","hideEndTime","setHideEndTime","prodColumns","filterOption","notFoundContent","showTime","checked","hidden","custCatSelect","orderList","custNm","orderTm","orderAmt","orderStat","trackNum","orderTabList","UpdButton","OrderMgmt","orderListFltr","setOrderListFltr","orderMgmtColumns","fixed","ComingSoon","OrderAdd","ECommerce","ShptMgmt","Truck","custStatus","custList","custID","regDt","salesMth","lastOrderDt","CustMgmt","custListFltr","setCustListFltr","cust","custMgmtColumns","custRegList","regID","applicant","gender","contactNum","CustReg","custRegColumns","CustAdd","Option","TextArea","custForm","setState","city","setCity","courtFlag","setCourtFlag","criminalFlag","setCriminalFlag","relativeFlag","setRelativeFlag","profilePic","maxCount","mask","placeholderChar","resetFields","getStates","getCities","getPostcodes","postcode","rows","showCount","maxLength","autoSize","minRows","maxRows","marginLeft","MenuDatePicker","inputReadOnly","DropdownDate","setDate","setLabel","dropdownOnBlur","setDropdownOnBlur","setCat","itemHovered","setItemHovered","dropdownVisible","setDropdownVisible","todayPopover","setTodayPopover","ytdPopover","setYtdPopover","past7dPopover","setpast7dPopover","past30dPopover","setpast30dPopover","ind","defVal","dayPicker","setDayPicker","weekPicker","setWeekPicker","mthPicker","setMthPicker","yrPicker","setYrPicker","disableNext","setDisableNext","pickerKeys","getKey","validateDefOpen","setNewDt","hideAllPickers","handlePickerChange","picker","setPicker","handleDateFunc","hideNxtPrevBtn","dateLabelMapper","DateMenu","newDtCat","points","mapper","showToday","disabledDate","dropdownAlign","getMomentPrevDt","onBlur","keyMetricsList","BusinessStatistics","duration","DashboardContainer","statisticsDtInfo","setStatisticsDtInfo","statisticsTdy","setStatisticsTdy","updateStatistics","setInterval","clearInterval","KeyMetricsDashboard","keyMetricsDtInfo","setKeyMetricsDtInfo","selectedKeyMetrics","setSelectedKeyMetrics","maxSelectedMetrics","setMaxSelectedMetrics","keyMetricsValList","getKeyMetricsVal","keyMetrics","metrics","handleKeyMetricsClick","defaultChecked","seriesField","yAxis","RankingDashboard","rankingDtInfo","setRankingDtInfo","AnalysisCard","component","CollapseCard","prefixIcon","suffixIcon","Panel","expandIconPosition","header","DateRangePickerWithLabel","defaultPickerValue","DescIcon","GradeIcon","grade","GradeA","GradeB","GradeC","abcAnalysis","tableGradeProps","tableScroll","costPerUnit","demand","demandPct","consumpVal","consumpValPct","GradeH","GradeM","GradeL","hmlAnalysis","costPerUnitPct","eoqAnalysis","orderCost","carryCost","ooq","ssAnalysis","day","maxDemand","avgDemand","maxLeadTm","avgLeadTm","safetyStock","restockPt","invAnalysisTab","analysis","getAnalysis","grid","column","borderTop","voucherList","voucherCde","discType","discAmt","minSpend","availability","autoApply","startTm","maxDisc","endTm","usageLimit","Tooltip","VoucherMgmt","voucherListFltr","setVoucherListFltr","voucher","voucherMgmtColumns","types","VoucherAdd","voucherForm","setDiscType","usageLimitUltd","setUsageLimitUltd","availabilityUltd","setAvailabilityUltd","initialValue","paddingLeft","max","setFieldsValue","ProfileMgmt","ChangeBtn","underline","InputText","pull","labelCol","wrapperCol","AccSettings","screens","useBreakpoint","phoneNum","xxl","AdminMgmt","Coding","AdminAdd","Help","ShptFeeMgmt","NotFound","Img404","SuccessModal","subTitle","extra","showModal","setShowModal","handleClose","closable","maskClosable","ResetPass","resetPassForm","hasNumberic","setHasNumeric","hasLowerCase","setHasLowerCase","hasUpperCase","setHasUpperCase","hasSymbol","setHasSymbol","passInRange","setPassInRange","pageLoading","setPageLoading","submitLoading","setSubmitLoading","successModal","setSuccessModal","resetErrMsg","setResetErrMsg","token","has","finally","passValidation","validation","match","PassCriteriaList","errMsg","resetPassDetails","minHeight","trim","Error","validateStatus","help","pass","str","hasUpperCaseLetter","hasLowerCaseLetter","hasSymbolLetter","minRange","maxRange","checkLength","getFieldValue","routeList","protected","siderMenuList","siderMenuLevel","selectedItem","SessionExtendModal","idleTimer","useIdleTimer","timer","useTimer","expiryTimestamp","unix","onExpire","isIdle","restart","days","hours","minutes","extendPageSession","seconds","AuthRoute","notProtectedRoute","filteredRoute","access","replace","from","routeRedirectList","redirect","AppRoute","store","configureStore","reducer","siderReducer","App","prefixCls","Provider","verticalAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb8a44ef.chunk.js","sourcesContent":["import { Card, CardProps } from 'antd';\r\nimport './MainCard.less';\r\n\r\nconst MainCard = ({ className, ...props }: CardProps) => {\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 35 }}\r\n      className={`main-card full-width full-height${\r\n        className !== undefined ? ` ${className}` : ''\r\n      }`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainCard;\r\n","import { Carousel, CarouselProps } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport './CarouselArrow.less';\r\n\r\nexport interface CarouselArrowProps extends CarouselProps {}\r\n\r\nconst CarouselArrow = (props: CarouselArrowProps) => {\r\n  const [carouselPrev, setCarouselPrev] = useState(false);\r\n  const [carouselNext, setCarouselNext] = useState(true);\r\n  return (\r\n    <span className='carousel-arrow'>\r\n      <Carousel\r\n        dots={false}\r\n        arrows\r\n        prevArrow={carouselPrev ? <MdChevronLeft /> : <></>}\r\n        nextArrow={carouselNext ? <MdChevronRight /> : <></>}\r\n        afterChange={(current) => {\r\n          if (current > 0) setCarouselPrev(true);\r\n          else setCarouselPrev(false);\r\n\r\n          if (\r\n            current !== React.Children.count(props.children) - 1 ||\r\n            current === 0\r\n          )\r\n            setCarouselNext(true);\r\n          else setCarouselNext(false);\r\n        }}\r\n        {...props}\r\n      >\r\n        {props.children}\r\n      </Carousel>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default CarouselArrow;\r\n","import Cookies from 'js-cookie';\r\nimport jwt_decode, { JwtPayload } from 'jwt-decode';\r\n\r\ninterface AdminType {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\nexport const decodedJWT = () =>\r\n  Cookies.get('access_token') !== undefined\r\n    ? jwt_decode<JwtPayload & AdminType>(Cookies.get('access_token'))\r\n    : null;\r\n\r\nexport const getAdminInfo = (): AdminType => {\r\n  const jwt = decodedJWT();\r\n  return {\r\n    id: jwt.id,\r\n    name: jwt.name,\r\n    role: jwt.role,\r\n  };\r\n};\r\n\r\nexport const setExp = (exp: number) => {\r\n  window.localStorage.setItem('exp', String(exp));\r\n};\r\n\r\nexport const getSessionExp = (): number =>\r\n  parseInt(window.localStorage.getItem('exp'));\r\n\r\nexport const clearStorage = () => {\r\n  window.localStorage.clear();\r\n};\r\n","import { clearStorage } from '@/utils/storageUtils';\r\nimport oriAxios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { refreshTknAPI } from './services/authAPI';\r\nconst baseURL = 'http://127.0.0.1:8000/api/';\r\n\r\nconst axios = oriAxios.create({\r\n  baseURL: baseURL,\r\n  timeout: 10000,\r\n  headers: {\r\n    Authorization: Cookies.get('access_token')\r\n      ? `JWT ${Cookies.get('access_token')}`\r\n      : null,\r\n    'Content-Type': 'application/json',\r\n    accept: 'application/json',\r\n  },\r\n  withCredentials: true,\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (typeof error.response === 'undefined') {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === 'token/refresh/'\r\n    ) {\r\n      delete axios.defaults.headers['Authorization'];\r\n      Cookies.remove('access_token');\r\n      clearStorage();\r\n      window.location.href = '';\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === 'token_not_valid' &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === 'Unauthorized' &&\r\n      originalRequest.url !== 'token/verify/'\r\n    ) {\r\n      return refreshTknAPI()\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          originalRequest.headers['Authorization'] = `JWT ${Cookies.get(\r\n            'access_token'\r\n          )}`;\r\n          return axios(originalRequest);\r\n        })\r\n        .catch((err) => Promise.reject(err));\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axios;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBulkEditIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.536 5.64148C15.4625 5.72883 15.3957 5.80891 15.3356 5.87442L15.1753 6.04912C15.1218 6.10736 15.0751 6.15831 15.0283 6.19471L13.2249 4.21473C13.2984 4.13466 13.3852 4.0473 13.4921 3.93811C13.599 3.82892 13.6858 3.74885 13.7593 3.69062C13.9396 3.53775 14.1266 3.46496 14.3337 3.48679C14.5407 3.50863 14.701 3.55231 14.828 3.61782C14.9615 3.6979 15.1085 3.82892 15.2755 4.02547C15.4424 4.22201 15.5694 4.42583 15.6562 4.63693C15.7029 4.77524 15.7297 4.93538 15.743 5.11737C15.7564 5.29935 15.6896 5.47406 15.536 5.64148ZM10.433 7.2575L12.5036 5.0009L14.307 6.96632C13.5522 7.78889 12.8576 8.53866 12.2364 9.20836C11.9692 9.49225 11.7087 9.76887 11.4549 10.0455C11.2011 10.3221 10.9673 10.5696 10.7603 10.788C10.5532 11.0064 10.3796 11.1883 10.246 11.3339L10.0055 11.596C9.94542 11.6615 9.87195 11.7343 9.7918 11.7998C9.71164 11.8653 9.62481 11.9236 9.52462 11.9745C9.42444 12.0255 9.29085 12.0837 9.11719 12.1492C8.94353 12.2147 8.76319 12.2802 8.57617 12.3458C8.38915 12.4113 8.20881 12.4695 8.04183 12.5205C7.87485 12.5714 7.74126 12.6078 7.65443 12.6151C7.48745 12.6369 7.39394 12.6151 7.38058 12.5641C7.36723 12.5132 7.37391 12.3894 7.40062 12.2074C7.4073 12.1128 7.43402 11.9672 7.46741 11.778C7.50081 11.5887 7.54089 11.3994 7.57428 11.2029C7.60768 11.0064 7.64775 10.8244 7.68783 10.6569C7.72791 10.4895 7.7613 10.3658 7.78802 10.3003C7.83477 10.1911 7.88153 10.1037 7.92828 10.0236C7.97504 9.94357 8.04851 9.85622 8.13534 9.76159L10.433 7.2575ZM14.9615 9.36851C15.1486 9.36851 15.3289 9.41946 15.4959 9.51409C15.6629 9.60872 15.7497 9.81254 15.7497 10.111V13.4158C15.7497 13.6852 15.7029 13.9399 15.6094 14.1656C15.5159 14.3913 15.389 14.5951 15.2287 14.7625C15.0684 14.9299 14.8881 15.061 14.681 15.1556C14.474 15.2502 14.2669 15.2939 14.0532 15.2939H6.59911C6.38538 15.2939 6.17832 15.2429 5.97126 15.141C5.7642 15.0391 5.58386 14.9008 5.43024 14.7261C5.27662 14.5514 5.14971 14.3476 5.04952 14.1074C4.94934 13.8671 4.90258 13.6124 4.90258 13.343V5.23384C4.90258 5.0373 4.94934 4.84075 5.04952 4.62965C5.14971 4.41855 5.27662 4.22929 5.43024 4.06186C5.58386 3.89444 5.7642 3.74885 5.9579 3.63966C6.1516 3.53047 6.35198 3.47224 6.54568 3.47224H10.9941C11.2412 3.47224 11.4215 3.57415 11.5217 3.77069C11.6219 3.96723 11.6753 4.17105 11.6753 4.37487C11.6753 4.5787 11.6219 4.77524 11.5217 4.9645C11.4215 5.15376 11.2412 5.2484 10.9941 5.2484H7.2136C7.02658 5.2484 6.87296 5.32119 6.75941 5.4595C6.64587 5.5978 6.58575 5.77251 6.58575 5.97633V12.8189C6.58575 13.0155 6.64587 13.1756 6.75941 13.3066C6.87296 13.4377 7.02658 13.5032 7.2136 13.5032H13.3986C13.5856 13.5032 13.7459 13.4377 13.8795 13.3066C14.0131 13.1756 14.0799 13.0155 14.0799 12.8189V10.111C14.0799 9.97269 14.1066 9.85622 14.1667 9.76159C14.2268 9.66696 14.2936 9.58689 14.3804 9.52865C14.4673 9.47042 14.5608 9.42674 14.661 9.4049C14.7678 9.38306 14.868 9.36851 14.9615 9.36851ZM10.3195 5.1756C10.2193 5.1756 10.1191 5.16104 10.0189 5.13921C9.9187 5.11737 9.82519 5.07369 9.73836 5.01546C9.65153 4.95722 9.58474 4.87715 9.52462 4.78252C9.46451 4.68789 9.43779 4.57142 9.43779 4.43311V3.18106C9.43779 2.98452 9.371 2.82437 9.23742 2.69335C9.10383 2.56232 8.94353 2.4968 8.75651 2.4968H2.57152C2.3845 2.4968 2.23088 2.56232 2.11733 2.69335C2.00378 2.82437 1.94367 2.98452 1.94367 3.18106V10.0236C1.94367 10.2275 2.00378 10.4022 2.11733 10.5405C2.23088 10.6788 2.3845 10.7516 2.57152 10.7516H5.01613C5.26326 10.7516 5.4436 10.8462 5.54379 11.0355C5.64398 11.2247 5.69741 11.4213 5.69741 11.6251C5.69741 11.8289 5.64398 12.0327 5.54379 12.2293C5.4436 12.4258 5.26326 12.5277 5.01613 12.5277H1.90359C1.7099 12.5277 1.50952 12.4695 1.31582 12.3603C1.12212 12.2511 0.941782 12.1055 0.788159 11.9381C0.634536 11.7707 0.50763 11.5814 0.407442 11.3703C0.307253 11.1592 0.260498 10.9627 0.260498 10.7661V2.65695C0.260498 2.38761 0.307253 2.13284 0.407442 1.89262C0.50763 1.6524 0.634536 1.44858 0.788159 1.27387C0.941782 1.09917 1.12212 0.960862 1.32918 0.858951C1.53624 0.757041 1.74329 0.706085 1.95703 0.706085H9.41108C9.62481 0.706085 9.83187 0.749761 10.0389 0.844393C10.246 0.939024 10.4263 1.07005 10.5866 1.23748C10.7469 1.4049 10.8738 1.60872 10.9673 1.83438C11.0609 2.06004 11.1076 2.31482 11.1076 2.58416V4.43311C11.1076 4.73156 11.0208 4.93538 10.8538 5.03002C10.6868 5.12465 10.5065 5.1756 10.3195 5.1756Z\",\n    fill: \"current\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBulkEditIcon);\nexport default __webpack_public_path__ + \"static/media/BulkEditIcon.af597cc0.svg\";\nexport { ForwardRef as ReactComponent };","import { clearStorage, setExp } from '@/utils/storageUtils';\r\nimport Cookies from 'js-cookie';\r\nimport axios from '../axiosInstance';\r\n\r\ninterface LoginDetailsProps {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const loginAPI = (loginDetails: LoginDetailsProps) => {\r\n  return axios\r\n    .post(`login/`, loginDetails)\r\n    .then((res) => {\r\n      axios.defaults.headers['Authorization'] = `JWT ${Cookies.get(\r\n        'access_token'\r\n      )}`;\r\n      setExp(res.data.exp);\r\n      window.location.href = '';\r\n      return Promise.resolve(res);\r\n    })\r\n    .catch((error) => Promise.reject(error));\r\n};\r\n\r\nexport const logoutAPI = () => {\r\n  delete axios.defaults.headers['Authorization'];\r\n  Cookies.remove('access_token');\r\n  clearStorage();\r\n  return axios.post('logout/');\r\n};\r\n\r\nexport const verifyTknAPI = () => axios.post('token/verify/');\r\n\r\nexport const refreshTknAPI = () =>\r\n  axios\r\n    .post('token/refresh/')\r\n    .then((res) => {\r\n      setExp(res.data.exp);\r\n      axios.defaults.headers['Authorization'] = `JWT ${Cookies.get(\r\n        'access_token'\r\n      )}`;\r\n      return Promise.resolve(res);\r\n    })\r\n    .catch((err) => {\r\n      delete axios.defaults.headers['Authorization'];\r\n      Cookies.remove('access_token');\r\n      clearStorage();\r\n      return Promise.reject(err);\r\n    });\r\n\r\nexport const forgotPassAPI = (email: string) =>\r\n  axios\r\n    .post('password_reset/', {\r\n      email: email,\r\n    })\r\n    .then((res) => Promise.resolve(res))\r\n    .catch((err) => Promise.reject(err));\r\n\r\nexport const validateForgotPassTknAPI = (token: string) =>\r\n  axios\r\n    .post('password_reset/validate_token/', {\r\n      token: token,\r\n    })\r\n    .then((res) => Promise.resolve(res))\r\n    .catch((err) => Promise.reject(err));\r\n\r\ninterface ResetPassProps {\r\n  token: string;\r\n  password: string;\r\n}\r\n\r\nexport const resetPassAPI = (resetPassDetails: ResetPassProps) =>\r\n  axios\r\n    .post('password_reset/confirm/', resetPassDetails)\r\n    .then((res) => Promise.resolve(res))\r\n    .catch((err) => Promise.reject(err));\r\n","import './Button.less';\r\nimport { Button as AntdButton, ButtonProps as AntdButtonProps } from 'antd';\r\n\r\nexport interface ButtonProps extends AntdButtonProps {\r\n  color?: 'success' | 'warning' | 'error' | 'info' | 'grey';\r\n}\r\n\r\nconst Button = ({ color, className, ...props }: ButtonProps) => {\r\n  return (\r\n    <AntdButton\r\n      className={`${className !== undefined ? className : ''}${\r\n        color !== undefined ? ` btn-${color}` : ''\r\n      }`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Button;\r\nexport declare type ButtonType = (props: ButtonProps) => JSX.Element;\r\n","export default __webpack_public_path__ + \"static/media/Hashtag.50d6b2b6.svg\";","export default __webpack_public_path__ + \"static/media/LoginBackground.8c86c99d.webp\";","export default __webpack_public_path__ + \"static/media/logo.de2890c3.webp\";","import { Typography } from 'antd';\r\nimport { TitleProps } from 'antd/es/typography/Title';\r\n\r\nconst BoldTitle = ({ style, ...props }: TitleProps) => {\r\n  const { Title } = Typography;\r\n  return <Title style={{ fontWeight: 700, ...style }} {...props} />;\r\n};\r\n\r\nexport default BoldTitle;\r\n","export default __webpack_public_path__ + \"static/media/emailSuccess.c3d975be.png\";","import React, { memo } from 'react';\r\nimport { Space, Typography } from 'antd';\r\nimport Button from '@/components/Button';\r\nimport { AuthModalContentProps } from '.';\r\nimport EmailSuccess from '@assets/Login/emailSuccess.png';\r\n\r\nconst CheckEmailModal = memo(\r\n  ({ onOk, onCancel, ...props }: AuthModalContentProps, _ref) => {\r\n    const { Text, Title } = Typography;\r\n\r\n    return (\r\n      <Space\r\n        direction='vertical'\r\n        size={20}\r\n        align='center'\r\n        style={{ textAlign: 'center' }}\r\n        className='full-width'\r\n      >\r\n        <img src={EmailSuccess} alt='emailSuccess' width={120} />\r\n        <Title level={5}>Check Your Email</Title>\r\n        <Text>\r\n          We sent you an email with instructions on how to reset your password.\r\n          <br />\r\n          You will only receive our email if your email is registered in our\r\n          system.\r\n        </Text>\r\n        <Button htmlType='submit' type='primary' onClick={onOk}>\r\n          Got it\r\n        </Button>\r\n      </Space>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CheckEmailModal;\r\n","import React, { memo, useState } from 'react';\r\nimport { Form, Input, Space, Typography } from 'antd';\r\nimport Button from '@/components/Button';\r\nimport AuthModal, { AuthModalContentProps } from '.';\r\nimport { forgotPassAPI } from '@/api/services/authAPI';\r\nimport { useForm } from 'antd/lib/form/Form';\r\n\r\nconst ForgotPassModal = memo(\r\n  ({ onOk, onCancel, ...props }: AuthModalContentProps, _ref) => {\r\n    const { Text, Title } = Typography;\r\n    const [forgotPass] = useForm();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = (values) => {\r\n      setLoading(true);\r\n      forgotPassAPI(values.email).then(() => {\r\n        setLoading(false);\r\n        AuthModal.show('checkEmail')\r\n      });\r\n    };\r\n\r\n    return (\r\n      <Form name='forgotPass' form={forgotPass} layout='vertical' onFinish={handleSubmit}>\r\n        <Space\r\n          direction='vertical'\r\n          size={20}\r\n          align='center'\r\n          style={{ textAlign: 'center' }}\r\n          className='full-width'\r\n        >\r\n          <Title level={4} className='color-primary'>\r\n            Forgot Password\r\n          </Title>\r\n          <Text>\r\n            Please enter your email address below and we will send you further\r\n            insturctions on how to reset your password.\r\n          </Text>\r\n          <Form.Item\r\n            name='email'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter valid email address.',\r\n                type: 'email',\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder='Email address' style={{ width: 420 }} />\r\n          </Form.Item>\r\n          <Button htmlType='submit' type='primary' loading={loading}>\r\n            Reset Password\r\n          </Button>\r\n        </Space>\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ForgotPassModal;\r\n","import { Modal as AntdModal, ModalProps } from 'antd';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport CheckEmailModal from './CheckEmailModal';\r\nimport ForgotPassModal from './ForgotPassModal';\r\n\r\nexport type AuthModalPayload = {\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n};\r\n\r\nexport const AuthModalComponent = {\r\n  forgotPass: ForgotPassModal,\r\n  checkEmail: CheckEmailModal,\r\n};\r\n\r\nexport type AuthModalType = 'forgotPass' | 'checkEmail';\r\n\r\nexport interface AuthModalContentProps extends ModalProps {\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nexport type AuthModalProps = Omit<ModalProps, 'onOk' | 'onCancel'> &\r\n  AuthModalContentProps;\r\n\r\ntype AuthModalReturnProps = React.FC<Partial<AuthModalProps>> & {\r\n  show?: (type: AuthModalType, AuthModalPayload?: AuthModalPayload) => void;\r\n};\r\n\r\nconst AuthModal: AuthModalReturnProps = memo((props: AuthModalProps, _ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [modalType, setModalType] = useState<AuthModalType>(null);\r\n  const payloadRef = useRef<AuthModalPayload>({});\r\n\r\n  useEffect(() => {\r\n    AuthModal.show = (type: AuthModalType, payload: AuthModalPayload) => {\r\n      setVisible(true);\r\n      setModalType(type);\r\n      payloadRef.current = payload;\r\n    };\r\n  }, []);\r\n\r\n  const handleOk = (method?: () => void) => () => {\r\n    method && method();\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = (method?: () => void) => () => {\r\n    method && method();\r\n    setVisible(false);\r\n  };\r\n\r\n  const renderModal = () => {\r\n    const ModalRender = AuthModalComponent[modalType]\r\n      ? AuthModalComponent[modalType]\r\n      : null;\r\n    return (\r\n      <ModalRender\r\n        onOk={handleOk(payloadRef.current?.onOk)}\r\n        onCancel={handleCancel(payloadRef.current?.onCancel)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AntdModal\r\n      visible={visible}\r\n      onOk={handleOk(payloadRef.current?.onOk)}\r\n      onCancel={handleCancel(payloadRef.current?.onCancel)}\r\n      footer={null}\r\n      bodyStyle={{ padding: 30 }}\r\n      destroyOnClose\r\n      centered\r\n      {...props}\r\n    >\r\n      {renderModal()}\r\n    </AntdModal>\r\n  );\r\n});\r\n\r\nexport default AuthModal;\r\n","import React, { useState } from 'react';\r\nimport { Col, Form, Input, Image, Row, Space, Alert, Typography } from 'antd';\r\nimport { CaretLeftOutlined } from '@ant-design/icons';\r\nimport Button from '@components/Button';\r\nimport './Login.less';\r\nimport Hashtag from '@assets/Login/Hashtag.svg';\r\nimport Inventory from '@assets/Login/LoginBackground.webp';\r\nimport Logo from '@assets/logo.webp';\r\nimport { Helmet } from 'react-helmet';\r\nimport { BoldTitle } from '@/components/Title';\r\nimport { loginAPI } from '@/api/services/authAPI';\r\nimport AuthModal from '@/components/Modal/AuthModal';\r\n\r\nconst Login = () => {\r\n  const { Text } = Typography;\r\n  const [loginErr, setLoginErr] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const handleLogin = async (values) => {\r\n    setLoading(true);\r\n    await loginAPI({\r\n      username: values.username,\r\n      password: values.password,\r\n    })\r\n      .then((res) => {\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setLoginErr(e.response?.status);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const getErrMsg = loginErr && (\r\n    <Alert\r\n      message={\r\n        <Text type='danger'>\r\n          {loginErr === 401 ? (\r\n            <>\r\n              Invalid username or password.\r\n              <br />\r\n              Please try again.\r\n            </>\r\n          ) : (\r\n            <>\r\n              Your account has been locked.\r\n              <br />\r\n              Please retry after an hour.\r\n            </>\r\n          )}\r\n        </Text>\r\n      }\r\n      type='error'\r\n      showIcon\r\n    />\r\n  );\r\n  return (\r\n    <div className='login'>\r\n      <Helmet>\r\n        <meta name='viewport' content='width=576'></meta>\r\n      </Helmet>\r\n      {/*Left half screen*/}\r\n      <Row className='login-container'>\r\n        <Col\r\n          xs={{ span: 24, order: 2 }}\r\n          sm={{ span: 24, order: 2 }}\r\n          md={{ span: 24, order: 2 }}\r\n          lg={{ span: 14, order: 1 }}\r\n          xl={{ span: 14, order: 1 }}\r\n        >\r\n          {/* Top-left image*/}\r\n          <div className='login-hashtag'>\r\n            <Image\r\n              src={Hashtag}\r\n              alt='hashtag'\r\n              width='70%'\r\n              height='auto'\r\n              preview={false}\r\n              draggable='false'\r\n              style={{ pointerEvents: 'none', userSelect: 'none' }}\r\n            />\r\n          </div>\r\n          {/*Login Form*/}\r\n          <Row className='login-form-container'>\r\n            <Col span={24}>\r\n              <div className='login-form'>\r\n                {/*Title*/}\r\n                <BoldTitle level={3} style={{ padding: 20 }}>\r\n                  Login\r\n                </BoldTitle>\r\n                {getErrMsg}\r\n                <Form name='loginForm' layout='vertical' onFinish={handleLogin}>\r\n                  <Space direction='vertical' className='full-width'>\r\n                    <Form.Item\r\n                      name='username'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please enter your Username!',\r\n                          whitespace: true,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        size='large'\r\n                        placeholder='Username'\r\n                        className='login-input'\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name='password'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please enter your Password!',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        size='large'\r\n                        placeholder='Password'\r\n                        className='login-input'\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                      <Button\r\n                        type='primary'\r\n                        size='large'\r\n                        htmlType='submit'\r\n                        block\r\n                        loading={loading}\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </Form.Item>\r\n                    <Form.Item style={{ marginTop: -20 }}>\r\n                      <Button\r\n                        type='link'\r\n                        color='info'\r\n                        className='login-right-align'\r\n                        onClick={() => {\r\n                          AuthModal.show('forgotPass');\r\n                        }}\r\n                      >\r\n                        Forgot Password\r\n                      </Button>\r\n                    </Form.Item>\r\n                    <Form.Item style={{ marginTop: -20, marginBottom: 0 }}>\r\n                      <Button\r\n                        type='link'\r\n                        color='info'\r\n                        icon={\r\n                          <CaretLeftOutlined\r\n                            style={{ position: 'relative', left: 5 }}\r\n                          />\r\n                        }\r\n                        className='login-left-align'\r\n                      >\r\n                        Go to Sharifah Food E-commerce\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </Space>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          xs={{ span: 24, order: 1 }}\r\n          sm={{ span: 24, order: 1 }}\r\n          md={{ span: 24, order: 1 }}\r\n          lg={{ span: 10, order: 2 }}\r\n          xl={{ span: 10, order: 2 }}\r\n          className='login-right-panel'\r\n        >\r\n          <Row justify='center' className='login-display-panel'>\r\n            <Col\r\n              xs={{ span: 24, order: 3 }}\r\n              sm={{ span: 24, order: 3 }}\r\n              md={{ span: 24, order: 3 }}\r\n              lg={{ span: 24, order: 1 }}\r\n              xl={{ span: 24, order: 1 }}\r\n              className='login-logo-wrapper'\r\n            >\r\n              <Image\r\n                src={Logo}\r\n                alt='logo'\r\n                width='20%'\r\n                preview={false}\r\n                draggable='false'\r\n                style={{\r\n                  float: 'right',\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs={{ span: 24, order: 2 }}\r\n              sm={{ span: 24, order: 2 }}\r\n              md={{ span: 24, order: 2 }}\r\n              lg={{ span: 24, order: 2 }}\r\n              xl={{ span: 24, order: 2 }}\r\n              className='login-responsive-img-wrapper'\r\n            >\r\n              <Image\r\n                src={Inventory}\r\n                alt='inventory'\r\n                preview={false}\r\n                draggable='false'\r\n                className='login-responsive-img'\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs={{ span: 24, order: 1 }}\r\n              sm={{ span: 24, order: 1 }}\r\n              md={{ span: 24, order: 1 }}\r\n              lg={{ span: 24, order: 3 }}\r\n              xl={{ span: 24, order: 3 }}\r\n            >\r\n              <div className='login-title-container'>\r\n                <BoldTitle level={2}>Inventory Management System</BoldTitle>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <AuthModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '@state/index';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","const breadcrumbNameMap: any = {\r\n  '/dashboard': 'Dashboard',\r\n  '/product': 'Product',\r\n  '/product/inventory': 'Product Inventory',\r\n  '/product/add': 'Add Product',\r\n  '/package': 'Package',\r\n  '/package/inventory': 'Package Inventory',\r\n  '/package/add': 'Add Package',\r\n  '/order': 'Order',\r\n  '/order/add': 'Add Order',\r\n  '/shipment': 'Shipment',\r\n  '/shipment/shipping-fee': 'Shipping Fee Management',\r\n  '/customer': 'Customer',\r\n  '/customer/registrations': 'Agent/Dropshipper Registration',\r\n  '/customer/add': 'Add Customer',\r\n  '/business-insights': 'Business Insights',\r\n  '/business-insights/inventory-analysis': 'Inventory Analysis',\r\n  '/voucher': 'Voucher',\r\n  '/voucher/add': 'Add Voucher',\r\n  '/my-acc': 'My Account',\r\n  '/my-acc/acc-settings': 'Account Settings',\r\n  '/admin': 'Admin',\r\n  '/admin/add': 'Add Admin',\r\n  '/help': 'Help',\r\n};\r\n\r\nexport default breadcrumbNameMap;\r\n","import { Breadcrumb as AntdBreadcrumb } from 'antd';\r\nimport { CaretRightOutlined } from '@ant-design/icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport breadcrumbNameMap from './breadCrumpList';\r\n\r\nconst BreadCrumb = () => {\r\n  const location = useLocation();\r\n  const pathSnippets = location.pathname.split('/').filter((i: any) => i);\r\n  const extraBreadcrumbItems = pathSnippets.map((_: any, index: number) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return breadcrumbNameMap.hasOwnProperty(url) && url !== '/dashboard' ? (\r\n      <AntdBreadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbNameMap[url]}</Link>\r\n      </AntdBreadcrumb.Item>\r\n    ) : (\r\n      <AntdBreadcrumb.Item key='none'></AntdBreadcrumb.Item>\r\n    );\r\n  });\r\n  const breadcrumbItems = [\r\n    <AntdBreadcrumb.Item key='/dashboard'>\r\n      <Link to='/dashboard'>\r\n        Dashboard\r\n      </Link>\r\n    </AntdBreadcrumb.Item>,\r\n  ].concat(extraBreadcrumbItems);\r\n  return (\r\n    <AntdBreadcrumb\r\n      separator={\r\n        <CaretRightOutlined style={{ position: 'relative', top: '-2px' }} />\r\n      }\r\n    >\r\n      {breadcrumbItems}\r\n    </AntdBreadcrumb>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import { MdPersonOutline, MdOutlineSettings, MdLogout } from 'react-icons/md';\r\n\r\nconst menuList = [\r\n  {\r\n    key: '/my-acc/profile-management',\r\n    label: 'Manage Profile',\r\n    icon: MdPersonOutline,\r\n  },\r\n  {\r\n    key: '/my-acc/acc-settings',\r\n    label: 'Account Settings',\r\n    icon: MdOutlineSettings,\r\n  },\r\n  { key: '/', label: 'Logout', icon: MdLogout },\r\n];\r\n\r\nexport default menuList;\r\n","export default __webpack_public_path__ + \"static/media/avatar.94eae908.png\";","import { Avatar, Col, Dropdown, DropDownProps, Menu, Row } from 'antd';\r\nimport menuList from './avatarDropdownList';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './AvatarDropdown.less';\r\nimport AvatarImg from '@assets/avatar.png';\r\nimport { logoutAPI } from '@api/services/authAPI';\r\n\r\nexport interface AvatarDropdownProps extends DropDownProps {\r\n  name: string;\r\n  role: string;\r\n  img?: React.ReactNode;\r\n}\r\n\r\nconst AvatarDropdown = ({\r\n  name,\r\n  role,\r\n  img,\r\n  ...props\r\n}: Omit<AvatarDropdownProps, 'overlay'>) => {\r\n  let navigate = useNavigate();\r\n  let location = useLocation();\r\n  const menuAvatarDropdown = (\r\n    <Menu\r\n      defaultSelectedKeys={[location.pathname]}\r\n      onClick={(item) => {\r\n        navigate(item.key);\r\n      }}\r\n    >\r\n      {menuList.map((menu) => (\r\n        <Menu.Item\r\n          key={menu.key}\r\n          icon={<menu.icon size={20} />}\r\n          style={{ fontWeight: 500 }}\r\n          onClick={() => {\r\n            if (menu.label === 'Logout') {\r\n              logoutAPI();\r\n            }\r\n          }}\r\n        >\r\n          {menu.label}\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={menuAvatarDropdown}\r\n      arrow\r\n      placement='bottomCenter'\r\n      className='avatar-dropdown'\r\n    >\r\n      <Row align='middle' gutter={10}>\r\n        <Col className='avatar-dropdown-account'>\r\n          <Row justify='end' className='avatar-dropdown-name'>\r\n            {name}\r\n          </Row>\r\n          <Row justify='end' className='avatar-dropdown-role'>\r\n            {role}\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Avatar\r\n            src={img !== undefined ? img : AvatarImg}\r\n            alt='avatar'\r\n            size={42}\r\n            className='avatarDropdown-avatar'\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default AvatarDropdown;\r\n","const menuList: {\r\n  cat: string;\r\n  status: 'success' | 'error' | 'processing' | 'default' | 'warning';\r\n  title: string;\r\n  description: JSX.Element;\r\n  timestamp: string;\r\n  read: boolean;\r\n}[] = [\r\n  {\r\n    cat: 'order',\r\n    status: 'success',\r\n    title: 'New Order',\r\n    description: (\r\n      <>\r\n        <p>\r\n          <span>Tan Yuan Jie has placed new order!</span>\r\n        </p>\r\n        <p>\r\n          <span>Please proceed with his order.</span>\r\n        </p>\r\n      </>\r\n    ),\r\n    timestamp: '08-11-2021 16:00',\r\n    read: false,\r\n  },\r\n  {\r\n    cat: 'product',\r\n    status: 'error',\r\n    title: 'Low Stock',\r\n    description: (\r\n      <>\r\n        <p>\r\n          <span>Kari Ayam is currently in low stock.</span>\r\n        </p>\r\n        <p>\r\n          <span>Please consider restocking it.</span>\r\n        </p>\r\n      </>\r\n    ),\r\n    timestamp: '07-11-2021 18:00',\r\n    read: true,\r\n    },\r\n    {\r\n      cat: 'product',\r\n      status: 'error',\r\n      title: 'Low Stock',\r\n      description: (\r\n        <>\r\n          <p>\r\n            <span>Kari Ayam is currently in low stock.</span>\r\n          </p>\r\n          <p>\r\n            <span>Please consider restocking it.</span>\r\n          </p>\r\n        </>\r\n      ),\r\n      timestamp: '07-11-2021 18:00',\r\n      read: true,\r\n    },\r\n    {\r\n      cat: 'product',\r\n      status: 'error',\r\n      title: 'Low Stock',\r\n      description: (\r\n        <>\r\n          <p>\r\n            <span>Kari Ayam is currently in low stock.</span>\r\n          </p>\r\n          <p>\r\n            <span>Please consider restocking it.</span>\r\n          </p>\r\n        </>\r\n      ),\r\n      timestamp: '07-11-2021 18:00',\r\n      read: true,\r\n    },\r\n    {\r\n      cat: 'product',\r\n      status: 'error',\r\n      title: 'Low Stock',\r\n      description: (\r\n        <>\r\n          <p>\r\n            <span>Kari Ayam is currently in low stock.</span>\r\n          </p>\r\n          <p>\r\n            <span>Please consider restocking it.</span>\r\n          </p>\r\n        </>\r\n      ),\r\n      timestamp: '07-11-2021 18:00',\r\n      read: true,\r\n    },\r\n    {\r\n      cat: 'product',\r\n      status: 'error',\r\n      title: 'Low Stock',\r\n      description: (\r\n        <>\r\n          <p>\r\n            <span>Kari Ayam is currently in low stock.</span>\r\n          </p>\r\n          <p>\r\n            <span>Please consider restocking it.</span>\r\n          </p>\r\n        </>\r\n      ),\r\n      timestamp: '07-11-2021 18:00',\r\n      read: true,\r\n    },\r\n];\r\n\r\nexport default menuList;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Dropdown,\r\n  Menu,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Space,\r\n  Divider,\r\n} from 'antd';\r\nimport Button from '@components/Button';\r\nimport { MdNotifications } from 'react-icons/md';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport menuList from './notificationDropdownList';\r\nimport { findRoutePath, findIcon } from '@utils/routingUtils';\r\nimport './NotificationDropdown.less';\r\n\r\nconst NotificationDropdown = () => {\r\n  let navigate = useNavigate();\r\n  const { Text } = Typography;\r\n\r\n  const [markAllRead, setMarkAllRead] = useState(false);\r\n\r\n  const capitalize = (word: string) => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  };\r\n\r\n  const menuNotificationDropdown = (\r\n    <Menu\r\n      onClick={(item: { key: string }) => {\r\n        navigate(item.key.substring(0, item.key.length - 2));\r\n      }}\r\n      className='notification-menu'\r\n    >\r\n      <Menu.Item\r\n        key='noti-header'\r\n        disabled\r\n        style={{ cursor: 'default', padding: 15 }}\r\n      >\r\n        <Row align='middle' justify='space-between'>\r\n          <Col>\r\n            <Text strong>Recent Notifications</Text>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              color='info'\r\n              type='link'\r\n              onClick={() => {\r\n                setMarkAllRead(true);\r\n              }}\r\n            >\r\n              Mark all as read\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Menu.Item>\r\n      <Menu.Divider key='notification-header-divider' />\r\n      <Menu.ItemGroup\r\n        key={'notification-content'}\r\n        className='notification-menu-item-group'\r\n      >\r\n        {menuList.map((menu, index) => {\r\n          const Icon = findIcon(menu.cat);\r\n          return (\r\n            <>\r\n              <Menu.Item\r\n                key={`${findRoutePath(menu.cat)}-${index}`}\r\n                className='notification-menu-item'\r\n              >\r\n                <Row align='middle'>\r\n                  <Col className='notification-menu-item-avatar'>\r\n                    <Badge\r\n                      dot={menu.read}\r\n                      offset={[-5, 5]}\r\n                      status={menu.status}\r\n                      className='notification-menu-item-badge'\r\n                    >\r\n                      <Avatar\r\n                        icon={<Icon size={24} />}\r\n                        size={42}\r\n                        className={`center-flex ${menu.status}Background`}\r\n                      />\r\n                    </Badge>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row className='notification-menu-item-title'>\r\n                      {menu.title}\r\n                    </Row>\r\n                    {menu.description}\r\n                    <Row>\r\n                      <Space\r\n                        split={\r\n                          <Divider\r\n                            type='vertical'\r\n                            style={{ margin: 0 }}\r\n                            className='notification-menu-item-split'\r\n                          />\r\n                        }\r\n                      >\r\n                        <Text className='notification-menu-item-info'>\r\n                          {capitalize(menu.cat)}\r\n                        </Text>\r\n                        <Text className='notification-menu-item-info'>\r\n                          {menu.timestamp}\r\n                        </Text>\r\n                      </Space>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Menu.Item>\r\n              {index !== menuList.length - 1 && <Menu.Divider />}\r\n            </>\r\n          );\r\n        })}\r\n      </Menu.ItemGroup>\r\n\r\n      <Menu.Divider key='noti-footer-divider' />\r\n      <Menu.Item\r\n        key='noti-footer'\r\n        disabled\r\n        style={{ cursor: 'default', padding: '15px 0', textAlign: 'center' }}\r\n      >\r\n        <Button type='link' color='info'>\r\n          View All Notifications\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={menuNotificationDropdown} arrow>\r\n      <span className='notification-container'>\r\n        <Badge\r\n          dot={!markAllRead}\r\n          offset={[-7, 5]}\r\n          status='success'\r\n          className='notification-badge'\r\n        >\r\n          <MdNotifications className='notification' />\r\n        </Badge>\r\n      </span>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NotificationDropdown;\r\n","import { useAppSelector } from '@/hooks/useRedux';\r\nimport { Col, Divider, Layout, Row, Space } from 'antd';\r\nimport Breadcrumb from '@components/BreadCrumb';\r\nimport AvatarDropdown from '@components/AvatarDropdown';\r\nimport NotificationDropdown from '@components/NotificationDropdown';\r\nimport classNames from 'classnames';\r\n\r\nconst Header = () => {\r\n  const { Header } = Layout;\r\n  const isSiderCollapsed = useAppSelector((state) => state.sider.collapsed);\r\n  return (\r\n    <div className='header-fixed'>\r\n      <Header\r\n        className={classNames(\r\n          'header',\r\n          { 'header-collapsed': isSiderCollapsed },\r\n          { 'header-expanded': !isSiderCollapsed }\r\n        )}\r\n        style={{ minWidth: 1060 }}\r\n      >\r\n        <Row align='middle' justify='space-between' style={{ height: 80 }}>\r\n          <Col>\r\n            <Breadcrumb />\r\n          </Col>\r\n          <Col>\r\n            <Space\r\n              size='large'\r\n              split={<Divider type='vertical' style={{ height: 42 }} />}\r\n            >\r\n              <NotificationDropdown />\r\n              <AvatarDropdown name='Tan Yuan Jie' role='Super Admin' />\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  collapsed: false,\r\n};\r\n\r\nexport const siderSlice = createSlice({\r\n  name: 'isSiderCollapsed',\r\n  initialState,\r\n  reducers: {\r\n    collapse: (state) => {\r\n      state.collapsed = true;\r\n    },\r\n    expand: (state) => {\r\n      state.collapsed = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { collapse, expand } = siderSlice.actions;\r\n\r\nexport default siderSlice.reducer;\r\n","import { IconType } from 'react-icons';\r\nimport {\r\n  MdHome,\r\n  MdShoppingBag,\r\n  MdAssignment,\r\n  MdLocalShipping,\r\n  MdGroups,\r\n  MdInsertChart,\r\n  MdConfirmationNumber,\r\n  MdAccountCircle,\r\n  MdAssignmentInd,\r\n  MdHelp,\r\n  MdInventory,\r\n  MdLogout,\r\n} from 'react-icons/md';\r\n\r\nconst menuList: {\r\n  level: number;\r\n  items: {\r\n    key: string;\r\n    label: string;\r\n    icon: IconType;\r\n    child?: {\r\n      key: string;\r\n      label: string;\r\n    }[];\r\n  }[];\r\n}[] = [\r\n  {\r\n    level: 1,\r\n    items: [\r\n      { key: 'dashboard', label: 'Dashboard', icon: MdHome },\r\n      {\r\n        key: 'product',\r\n        label: 'Products',\r\n        icon: MdShoppingBag,\r\n        child: [\r\n          { key: 'prodMgmt', label: 'Manage Products' },\r\n          { key: 'prodInv', label: 'Product Inventory' },\r\n          { key: 'prodAdd', label: 'Add Product' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'package',\r\n        label: 'Packages',\r\n        icon: MdInventory,\r\n        child: [\r\n          { key: 'packMgmt', label: 'Manage Packages' },\r\n          { key: 'packInv', label: 'Package Inventory' },\r\n          { key: 'packAdd', label: 'Add Package' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'order',\r\n        label: 'Orders',\r\n        icon: MdAssignment,\r\n        child: [\r\n          { key: 'orderMgmt', label: 'Manage Orders' },\r\n          { key: 'orderPend', label: 'Pending Orders' },\r\n          { key: 'orderCancel', label: 'Cancellation' },\r\n          { key: 'orderAdd', label: 'Add Order' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'shipment',\r\n        label: 'Shipments',\r\n        icon: MdLocalShipping,\r\n        child: [\r\n          { key: 'shptMgmt', label: 'Manage Shipments' },\r\n          { key: 'shpFeeMgmt', label: 'Manage Shipping Fees' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'customer',\r\n        label: 'Customers',\r\n        icon: MdGroups,\r\n        child: [\r\n          { key: 'custMgmt', label: 'Manage Customers' },\r\n          { key: 'custReg', label: 'Manage Registrations' },\r\n          { key: 'custAdd', label: 'Add Customer' },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'business-insights',\r\n        label: 'Business Insights',\r\n        icon: MdInsertChart,\r\n        child: [\r\n          { key: 'bizStatistics', label: 'Statistics' },\r\n          {\r\n            key: 'invAnalysis',\r\n            label: 'Inventory Analysis',\r\n          },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: 'voucher',\r\n        label: 'Vouchers',\r\n        icon: MdConfirmationNumber,\r\n        child: [\r\n          { key: 'voucherMgmt', label: 'Manage Vouchers' },\r\n          { key: 'voucherAdd', label: 'Add Voucher' },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    level: 2,\r\n    items: [\r\n      {\r\n        key: 'my-acc',\r\n        label: 'My Account',\r\n        icon: MdAccountCircle,\r\n        child: [\r\n          { key: 'profileMgmt', label: 'Manage Profile' },\r\n          { key: 'accSettings', label: 'Account Settings' },\r\n        ],\r\n      },\r\n      {\r\n        key: 'admin',\r\n        label: 'Admins',\r\n        icon: MdAssignmentInd,\r\n        child: [\r\n          { key: 'adminMgmt', label: 'Manage Admins' },\r\n          { key: 'adminAdd', label: 'Add Admin' },\r\n        ],\r\n      },\r\n      { key: 'help', label: 'Help', icon: MdHelp },\r\n    ],\r\n  },\r\n  {\r\n    level: 3,\r\n    items: [{ key: 'logout', label: 'Logout', icon: MdLogout }],\r\n  },\r\n];\r\n\r\nexport default menuList;\r\n","const siderDefKeyList: {\r\n  path: string;\r\n  key: string;\r\n}[] = [\r\n  {\r\n    path: '/order/management?stat=toShip',\r\n    key: 'orderPend',\r\n  },\r\n  {\r\n    path: '/order/management?stat=cancel',\r\n    key: 'orderCancel',\r\n  },\r\n];\r\n\r\nexport default siderDefKeyList;\r\n","import React, { useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@/hooks/useRedux';\r\nimport { collapse, expand } from '@state/siderSlice';\r\nimport { Layout, Menu, Image } from 'antd';\r\nimport { SiderProps as AntdSiderProps } from 'antd/lib/layout';\r\nimport menuList from './siderMenuList';\r\nimport Logo from '@assets/logo.webp';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport classNames from 'classnames';\r\nimport siderDefKeyList from './siderDefKeyList';\r\n\r\nexport interface SiderProps extends AntdSiderProps {}\r\n\r\nconst Sider = (props) => {\r\n  const { Sider } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [collapsedSiderOpen, setCollapsedSiderOpen] = useState(true);\r\n  const isSiderCollapsed = useAppSelector((state) => state.sider.collapsed);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const selectedKeys =\r\n    siderDefKeyList.find(\r\n      (defKey) => defKey.path === location.pathname + location.search\r\n    ) !== undefined\r\n      ? [\r\n          findRoutePath(\r\n            siderDefKeyList.find(\r\n              (defKey) => defKey.path === location.pathname + location.search\r\n            ).key\r\n          ),\r\n        ]\r\n      : [location.pathname];\r\n\r\n  const openKeys = [location.pathname.split('/')[1]];\r\n\r\n  return (\r\n    <span\r\n      className={classNames(\r\n        { 'sider-collapsed-fixed': isSiderCollapsed },\r\n        { 'sider-fixed': !isSiderCollapsed }\r\n      )}\r\n    >\r\n      <Sider\r\n        theme='light'\r\n        breakpoint='xl'\r\n        width={220}\r\n        collapsed={!collapsedSiderOpen}\r\n        onMouseLeave={() => isSiderCollapsed && setCollapsedSiderOpen(false)}\r\n        onBreakpoint={(breakpoint) => {\r\n          if (breakpoint) {\r\n            dispatch(collapse());\r\n            setCollapsedSiderOpen(false);\r\n          } else {\r\n            dispatch(expand());\r\n            setCollapsedSiderOpen(true);\r\n          }\r\n        }}\r\n        className='sider'\r\n      >\r\n        <div className='sider-logo-fixed'>\r\n          <div\r\n            className={classNames(\r\n              { 'sider-logo-collapsed-wrapper': !collapsedSiderOpen },\r\n              { 'sider-logo-wrapper': collapsedSiderOpen }\r\n            )}\r\n            onClick={() => {\r\n              navigate(findRoutePath('dashboard'));\r\n            }}\r\n          >\r\n            <Image\r\n              src={Logo}\r\n              alt='Logo'\r\n              preview={false}\r\n              height={!collapsedSiderOpen ? 25 : 65}\r\n              className='sider-logo'\r\n            />\r\n          </div>\r\n        </div>\r\n        <Menu\r\n          mode='inline'\r\n          selectedKeys={selectedKeys}\r\n          defaultOpenKeys={openKeys}\r\n          inlineIndent={15}\r\n          onClick={(item: { key: string }) => {\r\n            navigate(item.key);\r\n          }}\r\n          onMouseOver={() => setCollapsedSiderOpen(true)}\r\n          className='sider-menu'\r\n        >\r\n          {menuList.map((menuLevel) => [\r\n            menuLevel.items.map((item) =>\r\n              item.child ? (\r\n                <SubMenu\r\n                  key={item.key}\r\n                  title={item.label}\r\n                  icon={<item.icon size={20} />}\r\n                >\r\n                  {item.child.map((child) => (\r\n                    <Menu.Item key={findRoutePath(child.key)}>\r\n                      {child.label}\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item\r\n                  key={findRoutePath(item.key)}\r\n                  icon={<item.icon size={20} />}\r\n                  className='sider-menu-item'\r\n                >\r\n                  {item.label}\r\n                </Menu.Item>\r\n              )\r\n            ),\r\n            menuLevel.level !== menuList.length ? (\r\n              <Menu.Divider\r\n                key={menuLevel.level}\r\n                style={{ margin: '24px 0' }}\r\n              />\r\n            ) : (\r\n              <div style={{ height: 35 }} />\r\n            ),\r\n          ])}\r\n        </Menu>\r\n      </Sider>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Sider;\r\n","import moment from 'moment';\r\n\r\nexport const getDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).format(outputFormat);\r\n\r\nexport const getWeekDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat).startOf('week').format(outputFormat)} ~ ${moment(\r\n    date,\r\n    inputFormat\r\n  )\r\n    .endOf('week')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getDayOfWeek = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string\r\n) => moment(date, inputFormat).format('dddd');\r\n\r\nexport const getWeekOfYear = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string\r\n) =>\r\n  `Week ${moment(date, inputFormat).format('w')} of ${moment(date, inputFormat)\r\n    .endOf('week')\r\n    .format('YYYY')}`;\r\n\r\nexport const getMth = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'MMMM'\r\n) => moment(date, inputFormat).format(outputFormat);\r\n\r\nexport const getMthDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .startOf('month')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .endOf('month')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getYr = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'YYYY'\r\n) => moment(date, inputFormat).format(outputFormat);\r\n\r\nexport const getYrDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat).startOf('year').format(outputFormat)} ~ ${moment(\r\n    date,\r\n    inputFormat\r\n  )\r\n    .endOf('year')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getPastDays = (num: number, outputFormat: string = 'DD-MM-YYYY') =>\r\n  `${moment().subtract(num, 'd').format(outputFormat)} ~ ${moment().format(\r\n    outputFormat\r\n  )}`;\r\n\r\nexport const getNextDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).add(1, 'day').format(outputFormat);\r\n\r\nexport const getMomentNextDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).add(1, 'day');\r\n\r\nexport const getNextWeek = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .add(1, 'week')\r\n    .startOf('week')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .add(1, 'week')\r\n    .endOf('week')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getThisWeekTilYtd = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .startOf('week')\r\n    .format(outputFormat)} ~ ${moment()\r\n    .subtract(1, 'day')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getNextMth = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .add(1, 'month')\r\n    .startOf('month')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .add(1, 'month')\r\n    .endOf('month')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getThisMthTilYtd = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .startOf('month')\r\n    .format(outputFormat)} ~ ${moment()\r\n    .subtract(1, 'day')\r\n    .format('DD-MM-YYYY')}`;\r\n\r\nexport const getNextYr = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .add(1, 'year')\r\n    .startOf('year')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .add(1, 'year')\r\n    .endOf('year')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getThisYrTilYtd = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .startOf('year')\r\n    .format(outputFormat)} ~ ${moment()\r\n    .subtract(1, 'day')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getPrevDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).subtract(1, 'day').format(outputFormat);\r\n\r\nexport const getMomentPrevDt = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) => moment(date, inputFormat).subtract(1, 'day');\r\n\r\nexport const getPrevWeek = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .subtract(1, 'week')\r\n    .startOf('week')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .subtract(1, 'week')\r\n    .endOf('week')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getPrevMth = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .subtract(1, 'month')\r\n    .startOf('month')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .subtract(1, 'month')\r\n    .endOf('month')\r\n    .format(outputFormat)}`;\r\n\r\nexport const getPrevYr = (\r\n  date?: moment.Moment | string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n) =>\r\n  `${moment(date, inputFormat)\r\n    .subtract(1, 'year')\r\n    .startOf('year')\r\n    .format(outputFormat)} ~ ${moment(date, inputFormat)\r\n    .subtract(1, 'year')\r\n    .endOf('year')\r\n    .format(outputFormat)}`;\r\n\r\nexport const validateDay = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext: boolean;\r\n} => {\r\n  let newDt = moment.isMoment(date)\r\n    ? date.format(outputFormat)\r\n    : func === 'next'\r\n    ? getNextDt(date, inputFormat, outputFormat)\r\n    : func === 'previous'\r\n    ? getPrevDt(date, inputFormat, outputFormat)\r\n    : date;\r\n  let newLbl = '';\r\n  let newCat = cat;\r\n  let disabledNext = getMomentNextDt(newDt, outputFormat).isAfter(moment());\r\n\r\n  if (newDt === getDt()) {\r\n    newLbl = 'Today';\r\n    newCat = 'tdy';\r\n  } else if (newDt === getPrevDt()) {\r\n    newLbl = 'Yesterday';\r\n    newCat = 'ytd';\r\n  } else {\r\n    newLbl = getDayOfWeek(moment(newDt, outputFormat));\r\n    newCat = 'byDay';\r\n  }\r\n\r\n  return {\r\n    date: newDt,\r\n    label: newLbl,\r\n    cat: newCat,\r\n    disabledNext: disabledNext,\r\n  };\r\n};\r\n\r\nexport const validateWeek = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext: boolean;\r\n} => {\r\n  let newDt: moment.Moment | string =\r\n    func === 'next'\r\n      ? (date = moment(\r\n          getNextWeek(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : func === 'previous'\r\n      ? (date = moment(\r\n          getPrevWeek(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : moment(date, inputFormat);\r\n  let newLbl = '';\r\n  let disabledNext = moment(getNextWeek(newDt), 'DD-MM-YYYY').isSameOrAfter(\r\n    moment(),\r\n    'week'\r\n  );\r\n  if (\r\n    moment(newDt).isBetween(moment().startOf('week'), moment().endOf('week'))\r\n  ) {\r\n    newDt = getThisWeekTilYtd(newDt, undefined, outputFormat);\r\n    newLbl = getWeekOfYear(getThisWeekTilYtd(newDt), outputFormat);\r\n  } else {\r\n    newDt = getWeekDt(newDt, undefined, outputFormat);\r\n    newLbl = getWeekOfYear(newDt, outputFormat);\r\n  }\r\n\r\n  return { date: newDt, label: newLbl, cat: cat, disabledNext: disabledNext };\r\n};\r\n\r\nexport const validateMonth = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext: boolean;\r\n} => {\r\n  let newDt: moment.Moment | string =\r\n    func === 'next'\r\n      ? (date = moment(\r\n          getNextMth(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : func === 'previous'\r\n      ? (date = moment(\r\n          getPrevMth(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : moment(date, inputFormat);\r\n  let newLbl = '';\r\n  let disabledNext = moment(getNextMth(newDt), 'DD-MM-YYYY').isAfter(\r\n    moment(),\r\n    'month'\r\n  );\r\n\r\n  if (getMth(newDt) === getMth()) {\r\n    newDt = getThisMthTilYtd(newDt, undefined, outputFormat);\r\n    newLbl = getMth(getThisWeekTilYtd(newDt), outputFormat);\r\n  } else {\r\n    newDt = getMthDt(newDt, undefined, outputFormat);\r\n    newLbl = getMth(newDt, outputFormat);\r\n  }\r\n\r\n  return { date: newDt, label: newLbl, cat: cat, disabledNext: disabledNext };\r\n};\r\n\r\nexport const validateYear = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext: boolean;\r\n} => {\r\n  let newDt: moment.Moment | string =\r\n    func === 'next'\r\n      ? (date = moment(\r\n          getNextYr(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : func === 'previous'\r\n      ? (date = moment(\r\n          getPrevYr(date, inputFormat).split(' ~ ')[0],\r\n          'DD-MM-YYYY'\r\n        ))\r\n      : moment(date, inputFormat);\r\n  let newLbl = '';\r\n  let disabledNext = moment(getNextYr(newDt), 'DD-MM-YYYY').isAfter(\r\n    moment(),\r\n    'year'\r\n  );\r\n\r\n  if (getYr(newDt) === getYr()) {\r\n    newDt = getThisYrTilYtd(newDt, undefined, outputFormat);\r\n    newLbl = getYr(getThisWeekTilYtd(newDt), outputFormat);\r\n  } else {\r\n    newDt = getYrDt(newDt, undefined, outputFormat);\r\n    newLbl = getYr(newDt, outputFormat);\r\n  }\r\n\r\n  return { date: newDt, label: newLbl, cat: cat, disabledNext: disabledNext };\r\n};\r\n\r\nexport const validateDropdownDate = (\r\n  date: moment.Moment | string,\r\n  cat: string,\r\n  inputFormat?: string,\r\n  outputFormat: string = 'DD-MM-YYYY',\r\n  func?: 'next' | 'previous'\r\n): {\r\n  date: string;\r\n  cat: string;\r\n  label: string;\r\n  disabledNext?: boolean;\r\n} => {\r\n  let dateInfo = {\r\n    date: moment.isMoment(date) ? date.format(outputFormat) : date,\r\n    cat: cat,\r\n    label: '',\r\n  };\r\n  if (cat === 'tdy' || cat === 'ytd' || cat === 'byDay')\r\n    dateInfo = validateDay(date, cat, inputFormat, outputFormat, func);\r\n  else if (cat === 'byWeek')\r\n    dateInfo = validateWeek(date, cat, inputFormat, outputFormat, func);\r\n  else if (cat === 'byMonth')\r\n    dateInfo = validateMonth(date, cat, inputFormat, outputFormat, func);\r\n  else if (cat === 'byYear')\r\n    dateInfo = validateYear(date, cat, inputFormat, outputFormat, func);\r\n  else if (new RegExp(/^past\\d*d$/).test(cat)) {\r\n    let numDays = cat.substring(4, cat.length - 1);\r\n    dateInfo = {\r\n      date: moment.isMoment(date) ? date.format(outputFormat) : date,\r\n      cat: cat,\r\n      label: `Past ${numDays} Days`,\r\n    };\r\n  }\r\n\r\n  return dateInfo;\r\n};\r\n\r\nexport const formatDt = (\r\n  date: string,\r\n  cat: string,\r\n  inputFormat: string,\r\n  outputFormat: string = 'DD-MM-YYYY'\r\n): string => {\r\n  if (cat === 'tdy' || cat === 'ytd' || cat === 'byDay') {\r\n    return moment(date, inputFormat).format(outputFormat);\r\n  } else {\r\n    let [startDt, endDt] = date.split(' ~ ');\r\n    return `${moment(startDt, inputFormat).format(outputFormat)} - ${moment(\r\n      endDt,\r\n      inputFormat\r\n    ).format(outputFormat)}`;\r\n  }\r\n};\r\n","import { Layout } from 'antd';\r\nimport CopyrightCircleOutlined from '@ant-design/icons/CopyrightOutlined';\r\nimport { getYr } from '@utils/dateUtils';\r\n\r\nconst Footer = () => {\r\n  const { Footer } = Layout;\r\n  return (\r\n    <Footer className='footer'>\r\n      <CopyrightCircleOutlined className='footer-icon' /> {getYr()} Sharifah\r\n      Food. All rights reserved.\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Suspense } from 'react';\r\nimport { Layout as AntdLayout, Row, RowProps, Spin } from 'antd';\r\nimport { Helmet } from 'react-helmet';\r\nimport Header from './Header';\r\nimport Sider from './Sider';\r\nimport Footer from './Footer';\r\nimport './Layout.less';\r\n\r\nexport interface CustomLayoutProps extends RowProps {\r\n  justify?: 'start' | 'end' | 'center' | 'space-around' | 'space-between';\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Layout = ({ justify = 'center', ...props }: CustomLayoutProps) => {\r\n  const { Content } = AntdLayout;\r\n  return (\r\n    <AntdLayout hasSider>\r\n      <Helmet>\r\n        <meta name='viewport' content='width=1600' />\r\n      </Helmet>\r\n      <Sider />\r\n      <AntdLayout>\r\n        <Header />\r\n        <Suspense\r\n          fallback={\r\n            <div className='center-flex height-fill-vp'>\r\n              <Spin size='large' />\r\n            </div>\r\n          }\r\n        >\r\n          <Content className='content' style={{ minWidth: 1280 }}>\r\n            <Row justify={justify} {...props}>\r\n              {props.children}\r\n            </Row>\r\n          </Content>\r\n          <Footer />\r\n        </Suspense>\r\n      </AntdLayout>\r\n    </AntdLayout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Card, CardProps, Col, Row, Space } from 'antd';\r\nimport React from 'react';\r\nimport { HiCheckCircle, HiXCircle } from 'react-icons/hi';\r\nimport './ColorCard.less';\r\n\r\nexport interface ColorCardProps extends CardProps {\r\n  backgroundColor?:\r\n    | 'default'\r\n    | 'white'\r\n    | 'success'\r\n    | 'warning'\r\n    | 'error'\r\n    | 'info'\r\n    | 'grey';\r\n  hover?: boolean | 'success' | 'warning' | 'error' | 'info' | 'grey';\r\n  label?: React.ReactNode;\r\n  indicator?: 'true' | 'false';\r\n}\r\n\r\nconst ColorCard = ({\r\n  backgroundColor = 'default',\r\n  hover = false,\r\n  label,\r\n  indicator,\r\n  className,\r\n  ...props\r\n}: ColorCardProps) => {\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      {...props}\r\n      className={`small-card${\r\n        backgroundColor !== undefined ? `-${backgroundColor} ` : ''\r\n      }${\r\n        hover === true\r\n          ? `small-card-${backgroundColor}-hover`\r\n          : hover !== false\r\n          ? ` small-card-${hover}-hover`\r\n          : ''\r\n      } full-height ${className !== undefined ? ` ${className}` : ''}`}\r\n    >\r\n      <Space direction='vertical' size={20} className='full-width'>\r\n        {label !== undefined || indicator !== undefined ? (\r\n          <Row justify='space-between'>\r\n            <Col span={22} className='text-break'>\r\n              {label}\r\n            </Col>\r\n            <Col\r\n              style={{ position: 'absolute', right: 10 }}\r\n              className='center-flex'\r\n            >\r\n              {indicator === 'true' ? (\r\n                <HiCheckCircle size={20} className='color-primary' />\r\n              ) : indicator === 'false' ? (\r\n                <HiXCircle size={20} className='color-error' />\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        {props.children !== undefined && <div>{props.children}</div>}\r\n      </Space>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ColorCard;\r\n","import { Table as AntdTable, TableProps as AntdTableProps } from 'antd';\r\n\r\ninterface RecordType {\r\n  key: string;\r\n}\r\n\r\nexport interface TableProps extends AntdTableProps<RecordType> {}\r\n\r\nconst Table = ({ className, ...props }: TableProps) => {\r\n  return (\r\n    <AntdTable\r\n      className={`full-width${className !== undefined ? ` ${className}` : ''}`}\r\n      {...props}\r\n    ></AntdTable>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { Avatar, Col, Row, Space, Typography } from 'antd';\r\nimport { IconType } from 'react-icons';\r\n\r\nexport interface StatisticsProps {\r\n  value: number;\r\n  title: string;\r\n  date?: string;\r\n  untilTm?: string;\r\n  icon: IconType;\r\n  color: string;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  toFixed?: number;\r\n  space?: number;\r\n  valueSize?: number;\r\n  avatarSize?: number;\r\n}\r\n\r\nconst Statistics = ({\r\n  space = 40,\r\n  avatarSize = 48,\r\n  ...props\r\n}: StatisticsProps) => {\r\n  const { Text, Title } = Typography;\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={space} align='middle'>\r\n        <Col>\r\n          <Avatar\r\n            icon={<props.icon size={avatarSize * 0.6} color={props.color} />}\r\n            size={avatarSize}\r\n            className='center-flex'\r\n            style={{ backgroundColor: `${props.color}33` }} //background opacity = 20%\r\n          />\r\n        </Col>\r\n        <Col flex='auto'>\r\n          <Space direction='vertical' size={0}>\r\n            <Title level={5} style={{ fontSize: props.valueSize }}>\r\n              {props.prefix}\r\n              {props.value.toFixed(props.toFixed)}\r\n              {props.suffix}\r\n            </Title>\r\n            <Text type='secondary'>{props.title}</Text>\r\n            {props.date !== undefined && (\r\n              <Text type='secondary' style={{ fontSize: 10 }}>\r\n                {props.date}\r\n              </Text>\r\n            )}\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n      {props.untilTm !== undefined && (\r\n        <Row justify='end'>\r\n          <Text type='secondary' style={{ fontSize: 10 }}>\r\n            {props.untilTm}\r\n          </Text>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import { Tag as AntdTag, TagProps as AntdTagProps } from 'antd';\r\n\r\nexport interface TagProps extends AntdTagProps {\r\n  children?: React.ReactNode;\r\n  width?: number | string;\r\n  minWidth?: number | string;\r\n  maxWidth?: number | string;\r\n  height?: number | string;\r\n  justify?: 'start' | 'center' | 'end';\r\n  border?: number;\r\n}\r\n\r\nconst Tag = ({\r\n  width = 'auto',\r\n  minWidth = 'auto',\r\n  maxWidth = 'auto',\r\n  height = '100%',\r\n  justify = 'center',\r\n  border = 10,\r\n  style,\r\n  ...props\r\n}: TagProps) => {\r\n  return (\r\n    <AntdTag\r\n      style={{\r\n        width: width,\r\n        minWidth: minWidth,\r\n        maxWidth: maxWidth,\r\n        height: height,\r\n        borderRadius: border,\r\n        textAlign: justify,\r\n        margin: 0,\r\n        ...style,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import { Space, SpaceProps } from 'antd';\r\nimport './MainCardContainer.less';\r\n\r\nexport interface MainCardContainerProps extends SpaceProps {}\r\n\r\nconst MainCardContainer = ({ className, ...props }: MainCardContainerProps) => {\r\n  return (\r\n    <Space\r\n      direction='vertical'\r\n      size={20}\r\n      className={`main-card-container${\r\n        className !== undefined ? ` ${className}` : ''\r\n      }`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainCardContainer;\r\n","const toDoList: {\r\n  label: string;\r\n  quantity: number;\r\n  link: string;\r\n}[] = [\r\n  {\r\n    label: 'Pending Orders',\r\n    quantity: 5,\r\n    link: 'orderPend',\r\n  },\r\n  {\r\n    label: 'Unpaid Orders',\r\n    quantity: 3,\r\n    link: 'orderUnpaid',\r\n  },\r\n  {\r\n    label: 'Pending Return/Refund',\r\n    quantity: 0,\r\n    link: 'orderRefund',\r\n  },\r\n  {\r\n    label: 'Out-of-Stock Products',\r\n    quantity: 0,\r\n    link: 'prodMgmt',\r\n  },\r\n  {\r\n    label: 'Out-of-Stock Packages',\r\n    quantity: 0,\r\n    link: 'packMgmt',\r\n  },\r\n  {\r\n    label: 'Pending Agent Registration',\r\n    quantity: 3,\r\n    link: 'custReg',\r\n  },\r\n  {\r\n    label: 'Pending Dropshipper Registration',\r\n    quantity: 1,\r\n    link: 'custReg',\r\n  },\r\n];\r\n\r\nexport default toDoList;\r\n","import moment from \"moment\";\r\n\r\nconst dataYear: {\r\n  year: string;\r\n  data: {\r\n    Month: string;\r\n    Sales: number;\r\n  }[];\r\n} = {\r\n  year: moment().format('YYYY'),\r\n  data: [\r\n    { Month: 'Jan', Sales: 4000 },\r\n    { Month: 'Feb', Sales: 4500 },\r\n    { Month: 'Mar', Sales: 5500 },\r\n    { Month: 'Apr', Sales: 4300 },\r\n    { Month: 'May', Sales: 4100 },\r\n    { Month: 'Jun', Sales: 6000 },\r\n    { Month: 'Jul', Sales: 4700 },\r\n    { Month: 'Aug', Sales: 4200 },\r\n    { Month: 'Sep', Sales: 6100 },\r\n    { Month: 'Oct', Sales: 5030 },\r\n    { Month: 'Nov', Sales: 4954 },\r\n    { Month: 'Dec', Sales: 5310 },\r\n  ],\r\n};\r\n\r\nconst dataMonth: {\r\n  month: string;\r\n  data: {\r\n    Day: string;\r\n    Sales: number;\r\n  }[];\r\n} = {\r\n  month: '2021 August',\r\n  data: [\r\n    { Day: '1', Sales: 300 },\r\n    { Day: '2', Sales: 356 },\r\n    { Day: '3', Sales: 481 },\r\n    { Day: '4', Sales: 237 },\r\n    { Day: '5', Sales: 285 },\r\n    { Day: '6', Sales: 300 },\r\n    { Day: '7', Sales: 107 },\r\n    { Day: '8', Sales: 402 },\r\n    { Day: '9', Sales: 266 },\r\n    { Day: '10', Sales: 470 },\r\n    { Day: '11', Sales: 391 },\r\n    { Day: '12', Sales: 379 },\r\n    { Day: '13', Sales: 418 },\r\n    { Day: '14', Sales: 301 },\r\n    { Day: '15', Sales: 317 },\r\n    { Day: '16', Sales: 30 },\r\n    { Day: '17', Sales: 391 },\r\n    { Day: '18', Sales: 106 },\r\n    { Day: '19', Sales: 465 },\r\n    { Day: '20', Sales: 50 },\r\n    { Day: '21', Sales: 321 },\r\n    { Day: '22', Sales: 279 },\r\n    { Day: '23', Sales: 186 },\r\n    { Day: '24', Sales: 500 },\r\n    { Day: '25', Sales: 223 },\r\n    { Day: '26', Sales: 447 },\r\n    { Day: '27', Sales: 70 },\r\n    { Day: '28', Sales: 58 },\r\n    { Day: '29', Sales: 400 },\r\n    { Day: '30', Sales: 600 },\r\n  ],\r\n};\r\n\r\nconst dataWeek: {\r\n  frmDate: string;\r\n  toDate: string;\r\n  data: {\r\n    Day: string;\r\n    Sales: number;\r\n  }[];\r\n} = {\r\n  frmDate: '10 August 2021',\r\n  toDate: '17 August 2021',\r\n  data: [\r\n    { Day: 'Monday', Sales: 200 },\r\n    { Day: 'Tuesday', Sales: 126 },\r\n    { Day: 'Wednesday', Sales: 481 },\r\n    { Day: 'Thursday', Sales: 237 },\r\n    { Day: 'Friday', Sales: 285 },\r\n    { Day: 'Saturday', Sales: 300 },\r\n    { Day: 'Sunday', Sales: 107 },\r\n  ],\r\n};\r\n\r\nconst dataDay: {\r\n  date: string;\r\n  data: {\r\n    Hour: string;\r\n    Sales: number;\r\n  }[];\r\n} = {\r\n  date: '17 August 2021',\r\n  data: [\r\n    { Hour: '00', Sales: 10 },\r\n    { Hour: '01', Sales: 0 },\r\n    { Hour: '02', Sales: 0 },\r\n    { Hour: '03', Sales: 0 },\r\n    { Hour: '04', Sales: 0 },\r\n    { Hour: '05', Sales: 0 },\r\n    { Hour: '06', Sales: 0 },\r\n    { Hour: '07', Sales: 30 },\r\n    { Hour: '08', Sales: 0 },\r\n    { Hour: '09', Sales: 20 },\r\n    { Hour: '10', Sales: 0 },\r\n    { Hour: '11', Sales: 40 },\r\n    { Hour: '12', Sales: 13.6 },\r\n    { Hour: '13', Sales: 15 },\r\n    { Hour: '14', Sales: 16.5 },\r\n    { Hour: '15', Sales: 0 },\r\n    { Hour: '16', Sales: 30.2 },\r\n    { Hour: '17', Sales: 0 },\r\n    { Hour: '18', Sales: 0 },\r\n    { Hour: '19', Sales: 0 },\r\n    { Hour: '20', Sales: 0 },\r\n    { Hour: '21', Sales: 0 },\r\n    { Hour: '22', Sales: 0 },\r\n    { Hour: '23', Sales: 0 },\r\n  ],\r\n};\r\n\r\nexport { dataYear, dataMonth, dataWeek, dataDay };\r\n","import moment from 'moment';\r\n\r\nconst statisticsData: any = {\r\n  date: moment().format('DD MMMM YYYY'),\r\n  sales: 830,\r\n  profit: 500,\r\n  visitors: 20,\r\n  newCust: 2,\r\n  newOrder: 10,\r\n};\r\n\r\nexport default statisticsData;\r\n","const recentOrders: {\r\n  key: string;\r\n  orderID: string;\r\n  custName: string;\r\n  custType: string;\r\n  orderTime: string;\r\n  amount: number;\r\n  status: string;\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    orderID: '#2908724',\r\n    custName: 'Tan Yuan Jie',\r\n    custType: 'Agent',\r\n    orderTime: '23-08-2021 14:30',\r\n    amount: 60.0,\r\n    status: 'toShip',\r\n  },\r\n  {\r\n    key: '2',\r\n    orderID: '#1659883',\r\n    custName: 'Nur Nuraliah binti Haiqal',\r\n    custType: 'Direct Customer',\r\n    orderTime: '23-08-2021 12:41',\r\n    amount: 120.0,\r\n    status: 'toShip',\r\n  },\r\n  {\r\n    key: '3',\r\n    orderID: '#7156802',\r\n    custName: 'Jong Cai Tien',\r\n    custType: 'Direct Customer',\r\n    orderTime: '23-08-2021 09:21',\r\n    amount: 32.0,\r\n    status: 'shipping',\r\n  },\r\n  {\r\n    key: '4',\r\n    orderID: '#1605044',\r\n    custName: 'Mohammed Yusni bin Ayyadi',\r\n    custType: 'Dropshipper',\r\n    orderTime: '22-08-2021 21:06',\r\n    amount: 88.2,\r\n    status: 'shipping',\r\n  },\r\n  {\r\n    key: '5',\r\n    orderID: '#1487160',\r\n    custName: 'Huzaifi Hafizh bin Zaidi',\r\n    custType: 'Agent',\r\n    orderTime: '22-08-2021 19:34',\r\n    amount: 29.9,\r\n    status: 'completed',\r\n  },\r\n  {\r\n    key: '6',\r\n    orderID: '#7698033',\r\n    custName: 'Steven Tan',\r\n    custType: 'Direct Customer',\r\n    orderTime: '21-08-2021 17:32',\r\n    amount: 164.5,\r\n    status: 'cancel',\r\n  },\r\n];\r\n\r\nexport default recentOrders;\r\n","const topProduct: {\r\n  date: string;\r\n  type: 'sales' | 'units';\r\n  items: {\r\n    label: string;\r\n    cat?: string;\r\n    value: number;\r\n  }[];\r\n} = {\r\n  date: '2021 August',\r\n  type: 'sales',\r\n  items: [\r\n    {\r\n      label: 'Kari Ayam',\r\n      cat: 'Ready-To-Eat',\r\n      value: 80,\r\n    },\r\n    {\r\n      label: 'Sambal Ikan Bilis',\r\n      cat: 'Ready-To-Eat',\r\n      value: 54,\r\n    },\r\n    {\r\n      label: 'Nasi Briyani Bukhari',\r\n      cat: 'Ready-To-Cook',\r\n      value: 47,\r\n    },\r\n    {\r\n      label: 'Rendang Dendeng Daging',\r\n      cat: 'Ready-To-Eat',\r\n      value: 53,\r\n    },\r\n    {\r\n      label: 'Pes Sambal Tumis',\r\n      cat: 'Paste',\r\n      value: 38,\r\n    },\r\n    {\r\n      label: 'Pes Masakan Kerutuk',\r\n      cat: 'Paste',\r\n      value: 22,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default topProduct;\r\n","const invAnalysis: {\r\n  key: string;\r\n  prodNm: string;\r\n  stock: number;\r\n  ABC: string;\r\n  HML: string;\r\n  reorderPt: number;\r\n  optimalOrderQty: number;\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Kari Ayam',\r\n    stock: 25,\r\n    ABC: 'A',\r\n    HML: 'L',\r\n    reorderPt: 50,\r\n    optimalOrderQty: 200,\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Sambal Ikan Bilis',\r\n    stock: 75,\r\n    ABC: 'B',\r\n    HML: 'L',\r\n    reorderPt: 30,\r\n    optimalOrderQty: 300,\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    stock: 120,\r\n    ABC: 'A',\r\n    HML: 'M',\r\n    reorderPt: 45,\r\n    optimalOrderQty: 200,\r\n  },\r\n  {\r\n    key: '4',\r\n    prodNm: 'Rendang Dendeng Daging',\r\n    stock: 47,\r\n    ABC: 'A',\r\n    HML: 'H',\r\n    reorderPt: 25,\r\n    optimalOrderQty: 150,\r\n  },\r\n  {\r\n    key: '5',\r\n    prodNm: 'Pes Sambal Tumis',\r\n    stock: 90,\r\n    ABC: 'B',\r\n    HML: 'L',\r\n    reorderPt: 30,\r\n    optimalOrderQty: 175,\r\n  },\r\n  {\r\n    key: '6',\r\n    prodNm: 'Pes Masakan Keruntuk',\r\n    stock: 200,\r\n    ABC: 'C',\r\n    HML: 'L',\r\n    reorderPt: 15,\r\n    optimalOrderQty: 145,\r\n        },\r\n        {\r\n            key: '7',\r\n            prodNm: 'Pes Nasi Goreng Kampung',\r\n            stock: 130,\r\n            ABC: 'B',\r\n            HML: 'M',\r\n            reorderPt: 50,\r\n            optimalOrderQty: 124,\r\n          },\r\n];\r\n\r\nexport default invAnalysis;\r\n","export const splitIntoChunks = (arr, chunkSize) => {\r\n  const res = [];\r\n  for (let i = 0; i < arr.length; i += chunkSize) {\r\n      const chunk = arr.slice(i, i + chunkSize);\r\n      res.push(chunk);\r\n  }\r\n  return res;\r\n}\r\n\r\nexport const sortByOrder = (obj: any, des: boolean = false) => {\r\n  let sorted = obj.sort((a: string, b: string) => a.localeCompare(b));\r\n  return des === true ? sorted.reverse() : sorted;\r\n};\r\n","import { Popover as AntdPopover, PopoverProps as AntdPopoverProps } from 'antd';\r\n\r\nexport interface PopoverProps extends AntdPopoverProps {}\r\n\r\nconst Popover = ({ children, overlayStyle, ...props }: AntdPopoverProps) => {\r\n  return (\r\n    <AntdPopover\r\n      overlayStyle={{\r\n        maxWidth: 300,\r\n        textAlign: 'justify',\r\n        ...overlayStyle,\r\n      }}\r\n      {...props}\r\n    >\r\n      <span style={{ cursor: 'pointer' }}>{children}</span>\r\n    </AntdPopover>\r\n  );\r\n};\r\n\r\nexport default Popover;\r\n","import React, { useState } from 'react';\r\nimport ColorCard from '@components/Card/ColorCard';\r\nimport {\r\n  List,\r\n  ListProps,\r\n  Skeleton,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Select,\r\n  SelectProps,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport './RankingList.less';\r\nimport CarouselArrow from '@components/Carousel/CarouselArrow';\r\nimport { splitIntoChunks } from '@utils/arrayUtils';\r\nimport Popover from '@/components/Popover';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nexport interface RankingListProps extends Omit<ListProps<any>, 'dataSource'> {\r\n  dataSource: {\r\n    date: string;\r\n    type: 'sales' | 'units';\r\n    items: {\r\n      label: string;\r\n      cat?: string;\r\n      value: number;\r\n    }[];\r\n  };\r\n  cardSelections?: { key: string; label: string; desc?: string }[];\r\n  selectOptions?: SelectProps;\r\n  onCardSelect?: (selected: string) => void;\r\n  onSelectChange?: (selected: string) => void;\r\n}\r\n\r\nconst RankingList = ({\r\n  dataSource,\r\n  cardSelections,\r\n  selectOptions,\r\n  onCardSelect = () => '',\r\n  onSelectChange = () => '',\r\n\r\n  ...props\r\n}: RankingListProps) => {\r\n  const { Text } = Typography;\r\n\r\n  const [selectedCard, setSelectedCard] = useState('bySales');\r\n  return (\r\n    <Space direction='vertical' className='full-width'>\r\n      {cardSelections !== undefined ||\r\n        (selectOptions !== undefined && (\r\n          <Row justify='space-between' align='middle'>\r\n            <Col span={13}>\r\n              {cardSelections !== undefined && (\r\n                <CarouselArrow style={{ width: 274 }}>\r\n                  {splitIntoChunks(cardSelections, 2).map((chunks, index) => (\r\n                    <div key={`rankingSelections-${index}`}>\r\n                      <Row gutter={20}>\r\n                        {chunks.map((selection) => (\r\n                          <Col key={`col-${selection.key}`}>\r\n                            <ColorCard\r\n                              key={selection.key}\r\n                              bodyStyle={{ padding: 15 }}\r\n                              style={{ minWidth: 125 }}\r\n                              backgroundColor={\r\n                                selectedCard === selection.key\r\n                                  ? 'success'\r\n                                  : 'grey'\r\n                              }\r\n                              hover={\r\n                                selectedCard !== selection.key\r\n                                  ? 'success'\r\n                                  : null\r\n                              }\r\n                              label={\r\n                                <>\r\n                                  <Text className='text-break'>\r\n                                    {selection.label}\r\n                                  </Text>\r\n                                  {selection.desc !== undefined && (\r\n                                    <Popover content={selection.desc}>\r\n                                      <QuestionCircleOutlined\r\n                                        style={{\r\n                                          padding: '0 5px',\r\n                                        }}\r\n                                        className='color-grey'\r\n                                      />\r\n                                    </Popover>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                              indicator={\r\n                                selectedCard === selection.key ? 'true' : null\r\n                              }\r\n                              onClick={() => {\r\n                                setSelectedCard(selection.key);\r\n                                onCardSelect(selection.key);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        ))}\r\n                      </Row>\r\n                    </div>\r\n                  ))}\r\n                </CarouselArrow>\r\n              )}\r\n            </Col>\r\n            {selectOptions !== undefined && (\r\n              <Col span={7}>\r\n                <Select\r\n                  {...selectOptions}\r\n                  className='full-width'\r\n                  onChange={(value) => onSelectChange(value)}\r\n                />\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        ))}\r\n      <List\r\n        dataSource={dataSource.items}\r\n        renderItem={(item: {\r\n          label: string;\r\n          cat?: string;\r\n          value: number;\r\n          loading: boolean;\r\n        }) => (\r\n          <List.Item key={item.label}>\r\n            <Skeleton title={false} active loading={item.loading}>\r\n              <List.Item.Meta\r\n                key={item.label}\r\n                title={<Text className='ranking-list-title'>{item.label}</Text>}\r\n                description={\r\n                  <Text type='secondary' className='ranking-list-cat'>\r\n                    {item.cat}\r\n                  </Text>\r\n                }\r\n              />\r\n              <Row align='middle' gutter={[5, 5]}>\r\n                <Col>\r\n                  <BoldTitle level={5} className='ranking-list-value'>\r\n                    {item.value}\r\n                  </BoldTitle>\r\n                </Col>\r\n                <Col>\r\n                  <Text className='ranking-list-sales'>\r\n                    {dataSource.type === 'sales' ? 'sales' : 'units'}\r\n                  </Text>\r\n                </Col>\r\n              </Row>\r\n            </Skeleton>\r\n          </List.Item>\r\n        )}\r\n        {...props}\r\n      />\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default RankingList;\r\n","import { IconType } from 'react-icons/lib';\r\nimport {\r\n  MdOutlineAssignment,\r\n  MdOutlineAttachMoney,\r\n  MdOutlineTrendingUp,\r\n  MdOutlineVisibility,\r\n  MdPersonOutline,\r\n} from 'react-icons/md';\r\n\r\nconst statisticsList: {\r\n  key: string;\r\n  title: string;\r\n  icon: IconType;\r\n  color: string;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  toFixed?: number;\r\n}[] = [\r\n  {\r\n    key: 'sales',\r\n    title: 'Sales',\r\n    icon: MdOutlineTrendingUp,\r\n    color: '#7367F0',\r\n    prefix: 'RM ',\r\n    toFixed: 2,\r\n  },\r\n  {\r\n    key: 'profit',\r\n    title: 'Profit',\r\n    icon: MdOutlineAttachMoney,\r\n    color: '#28C76F',\r\n    prefix: 'RM ',\r\n    toFixed: 2,\r\n  },\r\n  {\r\n    key: 'visitors',\r\n    title: 'Visitors',\r\n    icon: MdOutlineVisibility,\r\n    color: '#FDBA39',\r\n  },\r\n  {\r\n    key: 'newCust',\r\n    title: 'New Customers',\r\n    icon: MdPersonOutline,\r\n    color: '#00CFE8',\r\n  },\r\n  {\r\n    key: 'newOrder',\r\n    title: 'New Orders',\r\n    icon: MdOutlineAssignment,\r\n    color: '#EA5455',\r\n  },\r\n];\r\n\r\nexport default statisticsList;\r\n","import { MdAdd, MdRemove } from 'react-icons/md';\r\nimport { Typography } from 'antd';\r\nexport const { Text } = Typography;\r\n\r\nexport const ynOptions = [\r\n  { value: true, label: 'Yes' },\r\n  { value: false, label: 'No' },\r\n];\r\n\r\nexport const dateRangeOptions = [\r\n  { value: 'year', label: 'Year' },\r\n  { value: 'month', label: 'Month' },\r\n  { value: 'week', label: 'Week' },\r\n  { value: 'day', label: 'Day' },\r\n];\r\n\r\nexport const prodCat = [\r\n  { value: 'rte', label: 'Ready-To-Eat' },\r\n  { value: 'rtc', label: 'Ready-To-Cook' },\r\n  { value: 'paste', label: 'Paste' },\r\n];\r\n\r\nexport const prodStatList = [\r\n  { status: 'active', label: 'Active', color: 'success' },\r\n  { status: 'oos', label: 'Out of Stock', color: 'error' },\r\n  { status: 'hidden', label: 'Hidden', color: 'default' },\r\n];\r\n\r\nexport const packStatList = [\r\n  { status: 'active', label: 'Active', color: 'success' },\r\n  { status: 'oos', label: 'Out of Stock', color: 'error' },\r\n  { status: 'scheduled', label: 'Scheduled', color: 'processing' },\r\n  { status: 'expired', label: 'Expired', color: 'warning' },\r\n  { status: 'hidden', label: 'Hidden', color: 'default' },\r\n];\r\n\r\nexport const orderStatList = [\r\n  { status: 'completed', label: 'Completed', color: 'success' },\r\n  { status: 'cancel', label: 'Cancellation', color: 'error' },\r\n  { status: 'unpaid', label: 'Unpaid', color: 'error' },\r\n  { status: 'toShip', label: 'To Ship', color: 'warning' },\r\n  { status: 'shipping', label: 'Shipping', color: 'processing' },\r\n];\r\n\r\nexport const custStatList = [\r\n  { status: 'active', label: 'Active', color: 'success' },\r\n  { status: 'suspended', label: 'Suspended', color: 'error' },\r\n];\r\n\r\nexport const voucherStatList = [\r\n  { status: 'active', label: 'Active', color: 'success' },\r\n  { status: 'scheduled', label: 'Scheduled', color: 'processing' },\r\n  { status: 'expired', label: 'Expired', color: 'error' },\r\n  { status: 'hidden', label: 'Hidden', color: 'default' },\r\n];\r\n\r\nexport const genderCat = [\r\n  { value: 'm', label: 'Male' },\r\n  { value: 'f', label: 'Female' },\r\n];\r\n\r\nexport const maritalStatCat = [\r\n  { value: 'single', label: 'Single' },\r\n  { value: 'married', label: 'Married' },\r\n  { value: 'seperated', label: 'Seperated' },\r\n  { value: 'divorced', label: 'Divorced' },\r\n];\r\n\r\nexport const custPositionCat = [\r\n  { value: 'agent', label: 'Agent' },\r\n  { value: 'drpshpr', label: 'Dropshipper' },\r\n];\r\n\r\nexport const custStatusCat = [\r\n  { value: 'active', label: 'Active' },\r\n  { value: 'suspended', label: 'Suspended' },\r\n];\r\nexport const discCat = [\r\n  { value: 'amount', label: 'Fixed Amount' },\r\n  { value: 'percentage', label: 'Percentage' },\r\n];\r\n\r\nexport const custCat = [\r\n  { label: 'Agent', value: 'agent' },\r\n  { label: 'Direct Customer', value: 'cust' },\r\n  { label: 'Dropshipper', value: 'drpshpr' },\r\n];\r\n\r\nexport const invInputOptions = [\r\n  {\r\n    value: '+',\r\n    label: <MdAdd size={20} />,\r\n  },\r\n  {\r\n    value: '-',\r\n    label: <MdRemove size={20} />,\r\n  },\r\n  {\r\n    value: 'set',\r\n    label: (\r\n      <Text strong style={{ color: 'white', padding: '0 12px' }}>\r\n        Set\r\n      </Text>\r\n    ),\r\n  },\r\n];\r\n\r\n","import React, { lazy, useState, Suspense } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Col from 'antd/es/col';\r\nimport Row from 'antd/es/row';\r\nimport Space from 'antd/es/space';\r\nimport Spin from 'antd/es/spin';\r\nimport Typography from 'antd/es/typography';\r\nimport Radio from 'antd/es/radio';\r\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\r\nimport { MdArrowRight, MdChevronRight } from 'react-icons/md';\r\nimport Layout from '@components/Layout';\r\nimport ColorCard from '@components/Card/ColorCard';\r\nimport Button from '@components/Button';\r\nimport Table from '@components/Table';\r\nimport Statistics from '@components/Statistics';\r\nimport Tag from '@components/Tag';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport toDoList from './toDoList';\r\nimport { dataYear, dataMonth, dataWeek, dataDay } from './salesData';\r\nimport statisticsData from './statisticsData';\r\nimport recentOrders from './recentOrders';\r\nimport topProduct from './topProducts';\r\nimport invAnalysis from './invAnalysis';\r\nimport './Dashboard.less';\r\nimport RankingList from '@components/List/RankingList';\r\nimport statisticsList from '@components/Statistics/statisticsList';\r\nimport { dateRangeOptions } from '@utils/optionUtils';\r\nimport { BoldTitle } from '@/components/Title';\r\nimport axios from '@/api/axiosInstance';\r\n\r\nconst LineChart = lazy(() => import('@components/Chart/LineChart'));\r\nconst MainCard = lazy(() => import('@components/Card/MainCard'));\r\nconst Dashboard = () => {\r\n  const { Text } = Typography;\r\n\r\n  const navigate = useNavigate();\r\n  const [salesDateRange, setSalesDateRange] = useState('year');\r\n\r\n  const getSalesData =\r\n    salesDateRange === 'month'\r\n      ? dataMonth.data\r\n      : salesDateRange === 'week'\r\n      ? dataWeek.data\r\n      : salesDateRange === 'day'\r\n      ? dataDay.data\r\n      : dataYear.data;\r\n\r\n  const getSalesDate =\r\n    salesDateRange === 'month'\r\n      ? dataMonth.month\r\n      : salesDateRange === 'week'\r\n      ? dataWeek.frmDate + ' - ' + dataWeek.toDate\r\n      : salesDateRange === 'day'\r\n      ? dataDay.date\r\n      : dataYear.year;\r\n\r\n  const getChartTitle = ['month', 'week'].includes(salesDateRange)\r\n    ? 'Day'\r\n    : salesDateRange === 'day'\r\n    ? 'Hour'\r\n    : 'Month';\r\n\r\n  const getChartTooltipTitlePrefix = salesDateRange === 'month' ? 'Day ' : '';\r\n\r\n  const getChartTooltipTitleSuffix = salesDateRange === 'day' ? ':00' : '';\r\n\r\n  const More = ({ route }: { route: string }) => (\r\n    <Button\r\n      type='link'\r\n      color='info'\r\n      onClick={() => navigate(findRoutePath(route))}\r\n      className='dashboard-more-btn center-flex'\r\n    >\r\n      More\r\n      <MdChevronRight size={23} style={{ position: 'relative', right: 3 }} />\r\n    </Button>\r\n  );\r\n\r\n  const recentOrderColumns: {\r\n    title: string;\r\n    dataIndex: string | string[];\r\n    key: string;\r\n    width: number;\r\n    align?: 'left' | 'center' | 'right';\r\n    render?: (status: string) => any;\r\n  }[] = [\r\n    {\r\n      title: 'Order ID',\r\n      dataIndex: 'orderID',\r\n      key: 'orderID',\r\n      width: 120,\r\n      render: (id: string) => <Text strong>{id}</Text>,\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'custName',\r\n      key: 'custName',\r\n      width: 300,\r\n    },\r\n    {\r\n      title: 'Customer Type',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      width: 140,\r\n    },\r\n    {\r\n      title: 'Order Time',\r\n      dataIndex: 'orderTime',\r\n      key: 'orderTime',\r\n      width: 160,\r\n    },\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'amount',\r\n      key: 'amount',\r\n      width: 140,\r\n      render: (amount: string) => (\r\n        <Text strong>RM {parseFloat(amount).toFixed(2)}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 170,\r\n      align: 'center' as const,\r\n      render: (status: string) => {\r\n        type OrderStatusTagProps = {\r\n          color: string;\r\n          children: React.ReactNode;\r\n        };\r\n        const OrderStatusTag = ({ color, children }: OrderStatusTagProps) => (\r\n          <Tag minWidth='80%' maxWidth='100%' color={color}>\r\n            {children}\r\n          </Tag>\r\n        );\r\n        return status === 'completed' ? (\r\n          <OrderStatusTag color='success'>Completed</OrderStatusTag>\r\n        ) : status === 'shipping' ? (\r\n          <OrderStatusTag color='processing'>Shipping</OrderStatusTag>\r\n        ) : status === 'toShip' ? (\r\n          <OrderStatusTag color='warning'>To Ship</OrderStatusTag>\r\n        ) : status === 'cancel' ? (\r\n          <OrderStatusTag color='error'>Cancelled</OrderStatusTag>\r\n        ) : null;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const invAnalysisColumns: {\r\n    title: string;\r\n    dataIndex: string | string[];\r\n    key: string;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    width?: string | number;\r\n    render?: (status: string) => any;\r\n  }[] = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: 'prodNm',\r\n      key: 'prodNm',\r\n      render: (text: string) => <Text strong>{text}</Text>,\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'stock',\r\n      key: 'stock',\r\n      align: 'center' as const,\r\n    },\r\n    {\r\n      title: 'ABC Grade',\r\n      dataIndex: 'ABC',\r\n      key: 'ABC',\r\n      align: 'center' as const,\r\n    },\r\n    {\r\n      title: 'HML Grade',\r\n      dataIndex: 'HML',\r\n      key: 'HML',\r\n      align: 'center' as const,\r\n    },\r\n    {\r\n      title: 'Reorder Point',\r\n      dataIndex: 'reorderPt',\r\n      key: 'reorderPt',\r\n      align: 'center' as const,\r\n    },\r\n    {\r\n      title: 'Optimal Order Quantity',\r\n      dataIndex: 'optimalOrderQty',\r\n      key: 'optimalOrderQty',\r\n      align: 'center' as const,\r\n    },\r\n  ];\r\n\r\n  const ToDoList = () => (\r\n    <MainCard bodyStyle={{ padding: '35px 35px' }}>\r\n      <Space direction='vertical' size={15} className='full-width'>\r\n        <BoldTitle level={5}>To Do List</BoldTitle>\r\n        <Row gutter={[30, 30]}>\r\n          {toDoList.map((toDoItem) => (\r\n            <Col\r\n              key={toDoItem.label}\r\n              flex='25%'\r\n              onClick={() => navigate(findRoutePath(toDoItem.link))}\r\n              className='dashboard-toDoList-col'\r\n            >\r\n              <ColorCard\r\n                backgroundColor='grey'\r\n                hover='success'\r\n                bodyStyle={{\r\n                  padding: '25px 12px 15px',\r\n                }}\r\n              >\r\n                <Space direction='vertical' size={15}>\r\n                  <BoldTitle\r\n                    level={5}\r\n                    type={toDoItem.quantity === 0 ? 'secondary' : undefined}\r\n                  >\r\n                    {toDoItem.quantity}\r\n                  </BoldTitle>\r\n                  <div>\r\n                    <Text className='dashboard-grey-text'>\r\n                      {toDoItem.label}\r\n                    </Text>\r\n                    <MdArrowRight\r\n                      size={19}\r\n                      className='dashboard-grey-text dashboard-right-arrow'\r\n                    />\r\n                  </div>\r\n                </Space>\r\n              </ColorCard>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const Sales = () => (\r\n    <MainCard>\r\n      <Space direction='vertical' size={5} className='full-width'>\r\n        <Row justify='space-between'>\r\n          <Col>\r\n            <BoldTitle level={5}>Sales</BoldTitle>\r\n          </Col>\r\n          <Col>\r\n            <More route='bizStatistics' />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify='space-between'>\r\n          <Col>\r\n            <Text className='dashboard-grey-text'>{getSalesDate}</Text>\r\n          </Col>\r\n          <Col>\r\n            <Radio.Group\r\n              buttonStyle='solid'\r\n              size='large'\r\n              style={{ marginRight: 30 }}\r\n              onChange={(e) => {\r\n                setSalesDateRange(e.target.value);\r\n                axios.get('admin/');\r\n              }}\r\n              value={salesDateRange}\r\n              options={dateRangeOptions}\r\n              optionType='button'\r\n            ></Radio.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ paddingTop: 15 }}>\r\n          <Suspense\r\n            fallback={\r\n              <div className='center-flex full-height full-width'>\r\n                <Spin\r\n                  indicator={<LoadingOutlined style={{ fontSize: 30 }} spin />}\r\n                />\r\n              </div>\r\n            }\r\n          >\r\n            <Space direction='vertical' className='full-width' size={20}>\r\n              <Text strong type='secondary'>\r\n                RM\r\n              </Text>\r\n              <LineChart\r\n                data={getSalesData}\r\n                titleX={getChartTitle}\r\n                tooltipName='Total Sales'\r\n                tooltipTitlePrefix={getChartTooltipTitlePrefix}\r\n                tooltipTitleSuffix={getChartTooltipTitleSuffix}\r\n                tooltipValPrefix='RM '\r\n                toFixed={2}\r\n              />\r\n            </Space>\r\n          </Suspense>\r\n        </Row>\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const StatisticsDashboard = () => (\r\n    <MainCard>\r\n      <BoldTitle level={5}>Statistics</BoldTitle>\r\n\r\n      <Text className='dashboard-grey-text'>{statisticsData.date}</Text>\r\n\r\n      <Space\r\n        direction={'vertical'}\r\n        size={20}\r\n        style={{ width: '100%', paddingTop: 25 }}\r\n      >\r\n        {statisticsList.map((statistics) => (\r\n          <Statistics\r\n            key={statistics.key}\r\n            title={statistics.title}\r\n            icon={statistics.icon}\r\n            color={statistics.color}\r\n            value={statisticsData[statistics.key]}\r\n            prefix={statistics.prefix}\r\n            suffix={statistics.suffix}\r\n            toFixed={statistics.toFixed}\r\n          />\r\n        ))}\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const RecentOrder = () => (\r\n    <MainCard>\r\n      <Space direction='vertical' size={15} className='full-width'>\r\n        <Row justify='space-between'>\r\n          <Col>\r\n            <Row>\r\n              <BoldTitle level={5}>Recent Orders</BoldTitle>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <More route='orderMgmt' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            dataSource={recentOrders}\r\n            columns={recentOrderColumns}\r\n            pagination={false}\r\n            scroll={{ x: 1000 }}\r\n          ></Table>\r\n        </Row>\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const TopProducts = () => (\r\n    <MainCard>\r\n      <Space direction='vertical' size={5} className='full-width'>\r\n        <div>\r\n          <Row justify='space-between'>\r\n            <Col>\r\n              <BoldTitle level={5}>Top Products</BoldTitle>\r\n            </Col>\r\n            <Col>\r\n              <More route='bizStatistics' />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Text className='dashboard-grey-text'>{topProduct.date}</Text>\r\n          </Row>\r\n        </div>\r\n        <RankingList dataSource={topProduct} />\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  const InvAnalysis = () => (\r\n    <MainCard>\r\n      <Space direction='vertical' size={30} className='full-width'>\r\n        <Row justify='space-between'>\r\n          <Col>\r\n            <Row>\r\n              <BoldTitle level={5}>Inventory Analysis</BoldTitle>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <More route='orderMgmt' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            dataSource={invAnalysis}\r\n            columns={invAnalysisColumns}\r\n            pagination={false}\r\n            scroll={{ x: 800 }}\r\n          ></Table>\r\n        </Row>\r\n      </Space>\r\n    </MainCard>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='dashboard'>\r\n        <ToDoList />\r\n        <Sales />\r\n        <Row justify='center' gutter={[30, 20]}>\r\n          <Col span={7}>\r\n            <StatisticsDashboard />\r\n          </Col>\r\n          <Col span={17}>\r\n            <RecentOrder />\r\n          </Col>\r\n        </Row>\r\n        <Row justify='center' gutter={[30, 20]}>\r\n          <Col span={9}>\r\n            <TopProducts />\r\n          </Col>\r\n          <Col span={15}>\r\n            <InvAnalysis />\r\n          </Col>\r\n        </Row>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { Col, ColProps } from 'antd';\r\n\r\nexport interface FilterInputColProps extends ColProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst FilterInputCol = (props: FilterInputColProps) => (\r\n  <Col span={12} {...props}>\r\n    {props.children}\r\n  </Col>\r\n);\r\n\r\nexport default FilterInputCol;\r\n","import {\r\n  Input,\r\n  InputNumber,\r\n  InputNumberProps,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n} from 'antd';\r\nimport './InputNumberRange.less';\r\n\r\nexport interface InputNumberRangeProps\r\n  extends Omit<InputNumberProps, 'placeholder' | 'addonBefore' | 'addonAfter'> {\r\n  label?: string;\r\n  placeholder?: string[];\r\n  textSpan?: number;\r\n  justify?: 'start' | 'end';\r\n}\r\n\r\ntype AdvInputNumberRangeProps = InputNumberRangeProps &\r\n  (\r\n    | {\r\n        prefix?: never;\r\n        prefixWidth?: never;\r\n      }\r\n    | {\r\n        prefix: string;\r\n        prefixWidth?: number | string;\r\n      }\r\n  ) &\r\n  (\r\n    | {\r\n        suffix?: never;\r\n        suffixWidth?: never;\r\n      }\r\n    | {\r\n        suffix: string;\r\n        suffixWidth?: number | string;\r\n      }\r\n  );\r\n\r\nconst InputNumberRange = ({\r\n  label,\r\n  justify = 'end',\r\n  placeholder = ['', ''],\r\n  textSpan = 5,\r\n  prefix,\r\n  suffix,\r\n  prefixWidth = prefix !== undefined ? 80 : 0,\r\n  suffixWidth = suffix !== undefined ? 80 : 0,\r\n  className,\r\n  ...props\r\n}: AdvInputNumberRangeProps) => {\r\n  const { Text } = Typography;\r\n  const inputNumWidth = `calc((100% - (28px + ${prefixWidth}px + ${suffixWidth}px)) / 2)`;\r\n\r\n  return (\r\n    <Row align='middle' gutter={30} className='input-range'>\r\n      {label !== undefined && (\r\n        <Col\r\n          span={textSpan}\r\n          className={justify === 'start' ? '' : 'justify-end'}\r\n        >\r\n          <Text type='secondary'>{label}</Text>\r\n        </Col>\r\n      )}\r\n      <Col span={24 - textSpan}>\r\n        <Input.Group compact>\r\n          {prefix !== undefined && (\r\n            <Input\r\n              value={prefix}\r\n              disabled\r\n              style={{ width: prefixWidth }}\r\n              className='input-range-prefix color-grey'\r\n            />\r\n          )}\r\n          <InputNumber\r\n            placeholder={placeholder[0]}\r\n            style={{\r\n              width: inputNumWidth,\r\n            }}\r\n            className={`input-range-left${\r\n              className !== undefined ? ` ${className}` : ''\r\n            }`}\r\n            {...props}\r\n          />\r\n          <Input\r\n            style={{ width: 30 }}\r\n            value='-'\r\n            disabled\r\n            className='input-range-splitter'\r\n          />\r\n          <InputNumber\r\n            placeholder={placeholder[1]}\r\n            style={{\r\n              width: inputNumWidth,\r\n            }}\r\n            className={`input-range-right${\r\n              className !== undefined ? ` ${className}` : ''\r\n            }`}\r\n            {...props}\r\n          />\r\n          {suffix !== undefined && (\r\n            <Input\r\n              value={suffix}\r\n              disabled\r\n              style={{ width: suffixWidth }}\r\n              className='input-range-suffix color-grey'\r\n            />\r\n          )}\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InputNumberRange;\r\n","import { Input, InputProps as AntdInputProps, Select } from 'antd';\r\n\r\nexport interface InputProps extends AntdInputProps {\r\n  width?: number | string;\r\n  selectBefore?: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  };\r\n  selectAfter?: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  };\r\n  selectWidth?: number | string;\r\n}\r\n\r\nconst InputSelect = ({\r\n  width = '100%',\r\n  selectBefore,\r\n  selectAfter,\r\n  selectWidth = 'fit-content',\r\n  ...props\r\n}: InputProps) => {\r\n  const inputSelectBefore = selectBefore !== undefined && (\r\n    <Select\r\n      defaultValue={selectBefore?.defaultVal}\r\n      options={selectBefore.options}\r\n      style={{ width: selectWidth }}\r\n    />\r\n  );\r\n\r\n  const inputSelectAfter = selectAfter !== undefined && (\r\n    <Select\r\n      defaultValue={selectAfter?.defaultVal}\r\n      options={selectAfter.options}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      addonBefore={inputSelectBefore}\r\n      addonAfter={inputSelectAfter}\r\n      style={{ width: width }}\r\n      {...props}\r\n    ></Input>\r\n  );\r\n};\r\n\r\nexport default InputSelect;\r\n","import { Col, Row, Select, SelectProps, Typography } from 'antd';\r\n\r\nexport interface SelectLabelProps extends SelectProps<any> {\r\n  label: string;\r\n  select: {\r\n    placeholder: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  };\r\n  textSpan?: number;\r\n  justify?: 'start' | 'end';\r\n}\r\n\r\nconst SelectWithLabel = ({\r\n  label,\r\n  select,\r\n  textSpan = 5,\r\n  justify = 'end',\r\n  className,\r\n  ...props\r\n}: SelectLabelProps) => {\r\n  const { Text } = Typography;\r\n\r\n  return (\r\n    <Row align='middle' gutter={30} className='input-select-label'>\r\n      <Col span={textSpan} className={justify === 'start' ? '' : 'justify-end'}>\r\n        <Text type='secondary'>{label}</Text>\r\n      </Col>\r\n      <Col span={24 - textSpan}>\r\n        <Select\r\n          placeholder={select.placeholder}\r\n          options={select.options}\r\n          allowClear\r\n          className={`full-width${className !== undefined ? ` ${className}` : ''}`}\r\n          {...props}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SelectWithLabel;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { prodCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const prodInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'prodName',\r\n    options: [\r\n      { value: 'prodName', label: 'Product Name' },\r\n      { value: 'prodSKU', label: 'Product SKU' },\r\n    ],\r\n  };\r\n\r\n  const prodCatSelect = {\r\n    placeholder: 'Select Category',\r\n    options: prodCat,\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={prodInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel label='Category' select={prodCatSelect} />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Stock'\r\n            placeholder={['Start', 'End']}\r\n            min={0}\r\n            justify='start'\r\n            textSpan={4}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Price'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n          />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","import React, { useState } from 'react';\r\nimport { Col, Row, Typography, Space } from 'antd';\r\nimport './InformativeTable.less';\r\nimport { ButtonType } from '@components/Button';\r\nimport Table, { TableProps } from '@components/Table';\r\n\r\ntype InformativeTableButtonProps = {\r\n  element: ButtonType;\r\n  key: string;\r\n  fltr?: {\r\n    fld: string;\r\n    value: string | number | undefined;\r\n    rel: 'eq' | 'neq' | 'gt' | 'gte' | 'lt' | 'lte'; //Relational Operator\r\n  }[];\r\n}[];\r\n\r\ntype InformativeTableProps = TableProps & { defPg?: number } & (\r\n    | {\r\n        buttons: InformativeTableButtonProps;\r\n        rowSelectable?: never | true;\r\n        onSelectChange?: (selectedRowKeys: string[]) => void;\r\n      }\r\n    | { buttons?: never; rowSelectable: false; onSelectChange?: never }\r\n  );\r\n\r\nconst InformativeTable = ({\r\n  defPg = 10,\r\n  buttons,\r\n  rowSelectable = true,\r\n  onSelectChange = () => '',\r\n  ...props\r\n}: InformativeTableProps) => {\r\n  const { Text } = Typography;\r\n  let [selectedRowKeys, setSelectedRowKeys] = useState();\r\n  let [selectedRowCount, setSelectedRowCount] = useState(0);\r\n  let [btnShow, setBtnShow] = useState<Array<{ key: string; show: boolean }>>(\r\n    []\r\n  );\r\n\r\n  const handleSelectChange = (selectedRowKeys: any, selectedRows: any) => {\r\n    if (buttons !== undefined) {\r\n      let buttonShow: { key: string; show: boolean }[] = [];\r\n\r\n      buttons.forEach((btn: any) =>\r\n        selectedRows.forEach((selected: any) => {\r\n          const btnShowCondition = !buttonShow.find(\r\n            (btnToShow) => btnToShow.key === btn.key && !btnToShow.show\r\n          );\r\n          if (\r\n            btn.fltr !== undefined &&\r\n            btn.fltr\r\n              .map(\r\n                (filter: any) =>\r\n                  (filter.rel === 'eq' &&\r\n                    selected[filter.fld] === filter.value) ||\r\n                  (filter.rel === 'neq' &&\r\n                    selected[filter.fld] !== filter.value) ||\r\n                  (filter.rel === 'gt' &&\r\n                    selected[filter.fld] > filter.value) ||\r\n                  (filter.rel === 'gte' &&\r\n                    selected[filter.fld] >= filter.value) ||\r\n                  (filter.rel === 'lt' &&\r\n                    selected[filter.fld] < filter.value) ||\r\n                  (filter.rel === 'lte' && selected[filter.fld] <= filter.value)\r\n              )\r\n              .includes(false)\r\n          ) {\r\n            if (btnShowCondition)\r\n              buttonShow = [\r\n                ...buttonShow.filter((btnToShow) => btnToShow.key !== btn.key),\r\n                { key: btn.key, show: false },\r\n              ];\r\n          } else {\r\n            if (btnShowCondition)\r\n              buttonShow = [\r\n                ...buttonShow.filter((btnToShow) => btnToShow.key !== btn.key),\r\n                { key: btn.key, show: true },\r\n              ];\r\n          }\r\n        })\r\n      );\r\n      setBtnShow([...buttonShow]);\r\n    }\r\n    setSelectedRowKeys(selectedRowKeys);\r\n    setSelectedRowCount(selectedRowKeys.length);\r\n    onSelectChange(selectedRowKeys);\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: handleSelectChange,\r\n  };\r\n\r\n  const showTotal = (total: number) => {\r\n    return `Total ${total} items`;\r\n  };\r\n\r\n  return (\r\n    <Space\r\n      direction='vertical'\r\n      size={20}\r\n      className='informative-table full-width'\r\n    >\r\n      {rowSelectable && (\r\n        <Row align='middle' gutter={20} style={{ height: 36 }}>\r\n          <Col flex='100px'>\r\n            <Text>Selected: {selectedRowCount}</Text>\r\n          </Col>\r\n          <Col>\r\n            <Space size={15}>\r\n              {buttons?.map((btn, index) => {\r\n                const Button = btn.element;\r\n                return (\r\n                  btnShow.map(\r\n                    (btnToShow) => btnToShow.key === btn.key && btnToShow.show\r\n                  )[index] && <Button />\r\n                );\r\n              })}\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Table\r\n          rowSelection={rowSelectable && rowSelection}\r\n          pagination={{\r\n            size: 'small',\r\n            showTotal: showTotal,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultPageSize: defPg,\r\n            pageSizeOptions: ['5', '10', '15', '20'],\r\n          }}\r\n          {...props}\r\n        />\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default InformativeTable;\r\nexport type { InformativeTableButtonProps };\r\n","export default __webpack_public_path__ + \"static/media/NasiBukhari.6c18478e.png\";","import NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nconst prodList = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    prodPrice: 17.6,\r\n    prodStock: 120,\r\n    prodStat: 'active',\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    prodPrice: 17.6,\r\n    prodStock: 120,\r\n    prodStat: 'oos',\r\n  },\r\n];\r\n\r\nexport default prodList;\r\n","const prodTabList = [\r\n  { key: 'all', tab: 'All' },\r\n  { key: 'active', tab: 'Active' },\r\n  { key: 'oos', tab: 'Out of Stock' },\r\n  { key: 'hidden', tab: 'Hidden' },\r\n];\r\n\r\nexport default prodTabList;\r\n","export const moneyFormatter = (num: number, numOnly: boolean = false) => {\r\n  let value = '';\r\n  if (num >= 1000 && num < 1000000) {\r\n    value = (num / 1000).toFixed(1) + 'K'; // convert to K for number from > 1000 < 1 million\r\n  } else if (num > 1000000) {\r\n    value = (num / 1000000).toFixed(1) + 'M'; // convert to M for number from > 1 million\r\n  } else {\r\n    value = num.toFixed(2); // if value < 1000, nothing to do\r\n  }\r\n\r\n  return numOnly === true ? value : `RM ${value}`;\r\n};\r\n\r\nexport const percentFormatter = (\r\n  num: number,\r\n  numOnly: boolean = false,\r\n  toFixed: number = 2\r\n) => {\r\n  let value = (num * 100).toFixed(toFixed);\r\n  return numOnly === true ? value : `${value} %`;\r\n};\r\n\r\n","import { HiThumbUp } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst AcceptButton = ({ children = 'Accept', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<HiThumbUp size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AcceptButton;\r\n","import { HiCheckCircle } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst ActivateButton = ({ children = 'Activate', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<HiCheckCircle size={16} style={{ marginRight: 3 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ActivateButton;\r\n","import { ReactComponent as BulkEditIcon } from '@assets/Icons/BulkEditIcon.svg';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst BulkEditButton = ({\r\n  children = 'Bulk Updates',\r\n  ...props\r\n}: Omit<ButtonProps, 'type'>) => {\r\n  return (\r\n    <Button\r\n      type='primary'\r\n      icon={<BulkEditIcon style={{ marginRight: 5 }} fill='white' />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BulkEditButton;\r\n","import { HiTrash } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst DeleteButton = ({ children = 'Delete', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      color='error'\r\n      icon={<HiTrash size={16} style={{ marginRight: 3 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { HiPencilAlt } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst EditButton = ({ children = 'Edit', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<HiPencilAlt size={16} style={{ marginRight: 3 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default EditButton;\r\n","import { HiEyeOff } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst HideButton = ({ children = 'Hide', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      color='grey'\r\n      icon={<HiEyeOff size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default HideButton;\r\n","import { HiPrinter } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst PrintButton = ({ children = 'Invoice', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<HiPrinter size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default PrintButton;\r\n","import { HiThumbDown } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst RejectButton = ({ children = 'Reject', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      color='error'\r\n      icon={<HiThumbDown size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default RejectButton;\r\n","import { HiPause } from 'react-icons/hi';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst SuspendButton = ({ children = 'Suspend', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      color='error'\r\n      icon={<HiPause size={16} style={{ marginRight: 3 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SuspendButton;\r\n","import { Dropdown, Menu, Row } from 'antd';\r\nimport { MdArrowDropDown } from 'react-icons/md';\r\nimport Tag, { TagProps } from '..';\r\n\r\nexport interface StatusTagProps extends TagProps {\r\n  status: string;\r\n  statusList: { status: string; label: string; color: string }[];\r\n  dropdownStatus?: string[];\r\n  onDropdownSelect?: (selectedStatus: string) => void;\r\n}\r\n\r\nconst StatusTag = ({\r\n  status,\r\n  statusList,\r\n  dropdownStatus,\r\n  onDropdownSelect = () => '',\r\n  ...props\r\n}: StatusTagProps) => {\r\n  const menu = (\r\n    <Menu onClick={(item) => onDropdownSelect(item.key)}>\r\n      {statusList.map(\r\n        (statusItem) =>\r\n          !(\r\n            status === statusItem.status ||\r\n            !dropdownStatus?.includes(statusItem.status)\r\n          ) && <Menu.Item key={statusItem.status}>{statusItem.label}</Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  const matchedStatus = statusList.find(\r\n    (statusItem) => status === statusItem.status\r\n  );\r\n\r\n  return dropdownStatus?.includes(matchedStatus.status) ? (\r\n    <Row align='middle'>\r\n      <Tag\r\n        minWidth='70%'\r\n        maxWidth='100%'\r\n        color={matchedStatus.color}\r\n        {...props}\r\n      >\r\n        {matchedStatus.label}\r\n      </Tag>\r\n      <Dropdown overlay={menu} placement='bottomRight'>\r\n        <MdArrowDropDown size={25} style={{ cursor: 'pointer' }} />\r\n      </Dropdown>\r\n    </Row>\r\n  ) : (\r\n    <Tag minWidth='70%' maxWidth='100%' color={matchedStatus.color} {...props}>\r\n      {matchedStatus.label}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default StatusTag;\r\n","import Button, { ButtonProps } from '@components/Button';\r\nimport { Col, List, ListProps, Row, Typography } from 'antd';\r\nimport { TextProps } from 'antd/es/typography/Text';\r\nimport { TitleProps } from 'antd/es/typography/Title';\r\n\r\nexport interface DescriptionListDataProps {\r\n  key: string;\r\n  title: string;\r\n  desc?: string;\r\n  content?: React.ReactNode;\r\n  icon?: React.ReactNode;\r\n};\r\n\r\nexport type TitleTextProps = TextProps | TitleProps;\r\n\r\n\r\nexport interface DescriptionListProps extends Omit<ListProps<any>, 'dataSource'> {\r\n  dataSource: DescriptionListDataProps[];\r\n  buttons?: string[];\r\n  buttonProps?: ButtonProps;\r\n  titleProps?: TextProps | TitleProps;\r\n  descProps?: TextProps | TitleProps;\r\n  onButtonClick?: (key: string) => void;\r\n}\r\n\r\nconst DescriptionList = ({\r\n  dataSource,\r\n  buttons,\r\n  onButtonClick = () => '',\r\n  buttonProps,\r\n  titleProps,\r\n  descProps,\r\n  ...props\r\n}: DescriptionListProps) => {\r\n  const { Text } = Typography;\r\n\r\n  const actions = (item) =>\r\n    buttons.map((btn) => (\r\n      <Button\r\n        key={item.key}\r\n        onClick={() => onButtonClick(item.key)}\r\n        {...buttonProps}\r\n      >\r\n        {btn}\r\n      </Button>\r\n    ));\r\n\r\n  const renderItem = (item: {\r\n    title: string;\r\n    desc?: string;\r\n    content: React.ReactNode;\r\n    icon: React.ReactNode;\r\n  }) => (\r\n    <List.Item actions={buttons !== undefined && actions(item)}>\r\n      <Row className='full-width' align='middle'>\r\n        <Col span={item.content !== undefined ? 5 : 24}>\r\n          <List.Item.Meta\r\n            avatar={item.icon}\r\n            title={\r\n              <Text className='text-lg' {...titleProps}>\r\n                {item.title}\r\n              </Text>\r\n            }\r\n            description={\r\n              <Text type='secondary' {...descProps}>\r\n                {item.desc}\r\n              </Text>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <div>{item.content}</div>\r\n        </Col>\r\n      </Row>\r\n    </List.Item>\r\n  );\r\n  return <List dataSource={dataSource} renderItem={renderItem} {...props} />;\r\n};\r\n\r\nexport default DescriptionList;\r\n","import React, { memo } from 'react';\r\nimport { Avatar, Col, Row, Space, Typography } from 'antd';\r\nimport Button from '@components/Button';\r\nimport classNames from 'classnames';\r\nimport DescriptionList, {\r\n  DescriptionListDataProps,\r\n  TitleTextProps,\r\n} from '@/components/List/DescriptionList';\r\n\r\nexport interface ActionContentProps {\r\n  label: string;\r\n  Icon: (props: any) => JSX.Element;\r\n  okText?: string;\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n  color?: 'success' | 'warning' | 'error' | 'info' | 'grey';\r\n  loading?: boolean;\r\n  children?: React.ReactNode;\r\n  recordType?: string;\r\n  dataSource?: DescriptionListDataProps[];\r\n  titleProps?: TitleTextProps;\r\n  descProps?: TitleTextProps;\r\n  multi?: boolean;\r\n}\r\n\r\nconst Content = memo(\r\n  (\r\n    {\r\n      label,\r\n      Icon,\r\n      okText = 'OK',\r\n      onOk = () => '',\r\n      onCancel = () => '',\r\n      color,\r\n      loading,\r\n      children,\r\n      dataSource,\r\n      recordType,\r\n      titleProps,\r\n      descProps,\r\n      multi,\r\n      ...props\r\n    }: ActionContentProps,\r\n    ref\r\n  ) => {\r\n    const { Title } = Typography;\r\n\r\n    return (\r\n      <Space direction='vertical' size={20} className='full-width'>\r\n        <Space size={15}>\r\n          <Avatar\r\n            size={40}\r\n            icon={\r\n              <Icon\r\n                className={`color-${color === undefined ? 'primary' : color}`}\r\n              />\r\n            }\r\n            className={classNames(\r\n              'center-flex',\r\n              { 'bg-red-200': color === 'error' },\r\n              { 'bg-blue-200': color === 'info' },\r\n              { 'bg-yellow-200': color === 'warning' },\r\n              { 'bg-grey-200': color === 'grey' },\r\n              {\r\n                'bg-green-200': color === 'success' || color === undefined,\r\n              }\r\n            )}\r\n          />\r\n          <Title level={4}>{label}</Title>\r\n        </Space>\r\n        {children}\r\n        {multi && (\r\n          <DescriptionList\r\n            dataSource={dataSource}\r\n            bordered\r\n            titleProps={{ style: { fontSize: 14 }, ...titleProps }}\r\n            descProps={descProps}\r\n          />\r\n        )}\r\n        <Row gutter={20} justify='end'>\r\n          <Col>\r\n            <Button color={color} onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              type='primary'\r\n              color={color}\r\n              loading={loading}\r\n              onClick={onOk}\r\n            >\r\n              {okText}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Space>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Content;\r\n","import {\r\n  DescriptionListDataProps,\r\n  TitleTextProps,\r\n} from '@/components/List/DescriptionList';\r\nimport { Modal as AntdModal, ModalProps } from 'antd';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport DeleteModal from './DeleteModal';\r\nimport HideModal from './HideModal';\r\n\r\nexport type ActionModalPayload = {\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n  multiItem?: boolean;\r\n};\r\n\r\nexport const ActionModalComponent = {\r\n  delete: DeleteModal,\r\n  hide: HideModal,\r\n};\r\n\r\nexport type ActionModalType = 'delete' | 'hide';\r\n\r\nexport interface ActionModalContentProps {\r\n  recordType?: string;\r\n  loading?: boolean;\r\n  dataSource?: DescriptionListDataProps[];\r\n  titleProps?: TitleTextProps;\r\n  descProps?: TitleTextProps;\r\n  multi?: boolean;\r\n  onOk?: () => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nexport type ActionModalProps = Omit<ModalProps, 'onOk' | 'onCancel'> &\r\n  ActionModalContentProps;\r\n\r\ntype ActionModalReturnProps = React.FC<Partial<ActionModalProps>> & {\r\n  show?: (\r\n    type: ActionModalType,\r\n    ActionModalPayload?: ActionModalPayload\r\n  ) => void;\r\n};\r\n\r\nconst ActionModal: ActionModalReturnProps = memo(\r\n  (\r\n    {\r\n      recordType = 'record',\r\n      dataSource,\r\n      titleProps,\r\n      descProps,\r\n      multi,\r\n      ...props\r\n    }: ActionModalProps,\r\n    _ref\r\n  ) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [multiItem, setMultiItem] = useState(false);\r\n    const [modalType, setModalType] = useState<ActionModalType>(null);\r\n    const payloadRef = useRef<ActionModalPayload>({});\r\n\r\n    useEffect(() => {\r\n      ActionModal.show = (\r\n        type: ActionModalType,\r\n        { multiItem = false, ...payload }: ActionModalPayload\r\n      ) => {\r\n        setVisible(true);\r\n        setModalType(type);\r\n        multiItem ? setMultiItem(true) : setMultiItem(false);\r\n        payloadRef.current = payload;\r\n      };\r\n    }, []);\r\n\r\n    const handleOk = (method?: () => void) => () => {\r\n      let loadParentFunc = async () => {\r\n        setLoading(true);\r\n        return method && method();\r\n      };\r\n      loadParentFunc().then(() => setVisible(false));\r\n    };\r\n\r\n    const handleCancel = (method?: () => void) => () => {\r\n      method && method();\r\n      setVisible(false);\r\n    };\r\n\r\n    const renderModal = () => {\r\n      const ModalRender = ActionModalComponent[modalType]\r\n        ? ActionModalComponent[modalType]\r\n        : null;\r\n      return (\r\n        <ModalRender\r\n          recordType={recordType}\r\n          loading={loading}\r\n          dataSource={dataSource}\r\n          titleProps={titleProps}\r\n          descProps={descProps}\r\n          multi={multiItem}\r\n          onOk={handleOk(payloadRef.current?.onOk)}\r\n          onCancel={handleCancel(payloadRef.current?.onCancel)}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <AntdModal\r\n        visible={visible}\r\n        onOk={handleOk(payloadRef.current?.onOk)}\r\n        onCancel={handleCancel(payloadRef.current?.onCancel)}\r\n        afterClose={() => setLoading(false)}\r\n        footer={null}\r\n        bodyStyle={{ padding: 30 }}\r\n        destroyOnClose\r\n        {...props}\r\n      >\r\n        {renderModal()}\r\n      </AntdModal>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ActionModal;\r\n","import React, { memo } from 'react';\r\nimport { HiTrash } from 'react-icons/hi';\r\nimport Content from './Content';\r\nimport { Typography } from 'antd';\r\nimport { ActionModalContentProps } from '.';\r\n\r\nconst DeleteModal = memo(\r\n  ({ multi, recordType, ...props }: ActionModalContentProps, _ref) => {\r\n    const { Text } = Typography;\r\n\r\n    return (\r\n      <Content\r\n        label='Delete'\r\n        Icon={HiTrash}\r\n        color='error'\r\n        okText='Delete'\r\n        multi={multi}\r\n        {...props}\r\n      >\r\n        <Text type='secondary' className='text-lg'>\r\n          This process cannot be undone.\r\n          <br />\r\n          {multi\r\n            ? `Do you really want to delete the following ${recordType}s?`\r\n            : `Do you really want to delete the specific ${recordType}?`}\r\n        </Text>\r\n      </Content>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DeleteModal;\r\n","import React, { memo } from 'react';\r\nimport { HiEyeOff } from 'react-icons/hi';\r\nimport Content from './Content';\r\nimport { Typography } from 'antd';\r\nimport { ActionModalContentProps } from '.';\r\n\r\nconst HideModal = memo(\r\n  ({ multi, recordType, ...props }: ActionModalContentProps, _ref) => {\r\n    const { Text } = Typography;\r\n\r\n    return (\r\n      <Content\r\n        label='Hide'\r\n        Icon={HiEyeOff}\r\n        color='grey'\r\n        okText='Hide'\r\n        multi={multi}\r\n        {...props}\r\n      >\r\n        <Text type='secondary' className='text-lg'>\r\n          This process cannot be undone.\r\n          <br />\r\n          {multi\r\n            ? `Do you really want to delete the following ${recordType}s?`\r\n            : `Do you really want to delete the specific ${recordType}?`}\r\n        </Text>\r\n      </Content>\r\n    );\r\n  }\r\n);\r\nexport default HideModal;\r\n","import MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography, Image, message } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport prodList from './prodList';\r\nimport prodTabList from './prodTabList';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { moneyFormatter } from '@utils/numUtils';\r\nimport { prodStatList } from '@utils/optionUtils';\r\nimport {\r\n  ActivateButton,\r\n  DeleteButton,\r\n  EditButton,\r\n  HideButton,\r\n} from '@/components/Button/ActionButton';\r\nimport StatusTag from '@/components/Tag/StatusTag';\r\nimport { BoldTitle } from '@/components/Title';\r\nimport { ActionModal } from '@/components/Modal';\r\nimport { ActionModalContentProps } from '@/components/Modal/ActionModal';\r\n\r\nconst ProdMgmt = () => {\r\n  const { Text } = Typography;\r\n\r\n  let navigate = useNavigate();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [prodListFltr, setProdListFltr] = useState(prodList);\r\n  const [selectedProds, setSelectedProds] = useState([]);\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n  useEffect(\r\n    () =>\r\n      setProdListFltr(\r\n        prodList.filter((prod) =>\r\n          searchParams.get('stat') !== null\r\n            ? prod.prodStat === searchParams.get('stat')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const actionModalProps: ActionModalContentProps = {\r\n    recordType: 'product',\r\n    dataSource: selectedProds,\r\n  };\r\n\r\n  const showActionMsg = (action: string, multi: boolean = false) => {\r\n    messageApi.open({\r\n      key: action,\r\n      type: 'success',\r\n      content: `${multi ? selectedProds.length : 1} Products ${\r\n        action === 'delete' ? 'Deleted' : 'Hidden'\r\n      } Successfully`,\r\n    });\r\n    setTimeout(() => message.destroy(action), 2000);\r\n  };\r\n\r\n  const activateBtn = (props: any) => <ActivateButton type='primary' />;\r\n\r\n  const hideBtn = (props: any) => (\r\n    <HideButton\r\n      type='primary'\r\n      color='grey'\r\n      onClick={() => {\r\n        ActionModal.show('hide', {\r\n          onOk: () =>\r\n            fetch('http://example.com').then(() => {\r\n              showActionMsg('hide', true);\r\n            }),\r\n          multiItem: true,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n\r\n  const deleteBtn = (props: any) => (\r\n    <DeleteButton\r\n      type='primary'\r\n      onClick={() => {\r\n        ActionModal.show('delete', {\r\n          onOk: () =>\r\n            fetch('http://example.com').then(() => {\r\n              showActionMsg('delete', true);\r\n            }),\r\n          multiItem: true,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: activateBtn,\r\n      key: 'activate',\r\n      fltr: [{ fld: 'prodStat', value: 'hidden', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: hideBtn,\r\n      key: 'hide',\r\n      fltr: [{ fld: 'prodStat', value: 'active', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: deleteBtn,\r\n      key: 'delete',\r\n    },\r\n  ];\r\n\r\n  const prodMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    width?: number | string;\r\n    fixed?: 'left' | 'right';\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n      key: 'prod',\r\n      sorter: true,\r\n      width: 400,\r\n      render: (_: any, data: { [x: string]: string }) => (\r\n        <Row gutter={5}>\r\n          <Col xs={9} xl={7}>\r\n            <Image\r\n              alt={data['prodNm']}\r\n              src={data['prodImg']}\r\n              height={100}\r\n              width={100}\r\n            />\r\n          </Col>\r\n          <Col xs={15} xl={17}>\r\n            <Space direction='vertical' size={5}>\r\n              <div className='text-button-wrapper'>\r\n                <Text strong className='text-button'>\r\n                  {data['prodNm']}\r\n                </Text>\r\n              </div>\r\n              <Text type='secondary' className='text-sm text-break'>\r\n                {data['prodCat']}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'SKU',\r\n      dataIndex: 'prodSKU',\r\n      key: 'prodSKU',\r\n      sorter: true,\r\n      width: 160,\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'prodPrice',\r\n      key: 'prodPrice',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (amount: number) => (\r\n        <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'prodStock',\r\n      key: 'prodStock',\r\n      sorter: true,\r\n      width: 120,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'prodStat',\r\n      key: 'prodStat',\r\n      width: 150,\r\n      render: (status: string) => (\r\n        <StatusTag\r\n          status={status}\r\n          statusList={prodStatList}\r\n          dropdownStatus={['active', 'hidden']}\r\n          onDropdownSelect={(selectedStatus) => {\r\n            if (selectedStatus === 'hidden') {\r\n              ActionModal.show('hide', {\r\n                onOk: () =>\r\n                  fetch('http://example.com').then(() => {\r\n                    showActionMsg('hide');\r\n                  }),\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 100,\r\n      render: () => (\r\n        <Space direction='vertical' size={5}>\r\n          <EditButton\r\n            type='link'\r\n            color='info'\r\n            onClick={() => {\r\n              navigate(findRoutePath('prodAdd'));\r\n            }}\r\n          />\r\n          <DeleteButton\r\n            type='link'\r\n            color='info'\r\n            onClick={() => {\r\n              ActionModal.show('delete', {\r\n                onOk: () =>\r\n                  fetch('http://example.com').then(() => {\r\n                    showActionMsg('delete');\r\n                  }),\r\n              });\r\n            }}\r\n          />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {contextHolder}\r\n      <MainCardContainer className='prod-mgmt'>\r\n        <MainCard\r\n          tabList={prodTabList}\r\n          activeTabKey={\r\n            searchParams.get('stat') === null ? 'all' : searchParams.get('stat')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { stat: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Product List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('prodAdd'))}\r\n                >\r\n                  Add Product\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={prodListFltr}\r\n              columns={prodMgmtColumns}\r\n              buttons={onSelectBtn}\r\n              defPg={5}\r\n              onSelectChange={(selectedKeys) => {\r\n                const selectedProd = prodListFltr.filter((prod) =>\r\n                  selectedKeys.some((selected) => selected === prod.key)\r\n                );\r\n                const selectedProds = [];\r\n                selectedProd.forEach((prod) =>\r\n                  selectedProds.push({\r\n                    key: prod.key,\r\n                    title: prod.prodNm,\r\n                    icon: (\r\n                      <Image\r\n                        src={prod.prodImg}\r\n                        height={40}\r\n                        width={40}\r\n                        preview={false}\r\n                      />\r\n                    ),\r\n                  })\r\n                );\r\n                setSelectedProds(selectedProds);\r\n              }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n\r\n      <ActionModal {...actionModalProps} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProdMgmt;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  InputNumber,\r\n  InputNumberProps,\r\n  Radio,\r\n  Row,\r\n  Space,\r\n} from 'antd';\r\nimport { invInputOptions } from '@/utils/optionUtils';\r\n\r\nexport interface InvStockInputProps extends InputNumberProps {\r\n  input: number;\r\n  onSave?: (data: { operation: string; value: number }) => void;\r\n}\r\n\r\nconst InvStockInput = ({\r\n  input,\r\n  onSave = () => '',\r\n  ...props\r\n}: InvStockInputProps) => {\r\n  const [operation, setOperation] = useState(invInputOptions[0].value);\r\n  const [value, setValue] = useState(input);\r\n\r\n  return (\r\n    <Space size={10} direction='vertical'>\r\n      <Row>\r\n        <Radio.Group\r\n          buttonStyle='solid'\r\n          size={'small'}\r\n          value={operation}\r\n          options={invInputOptions}\r\n          optionType='button'\r\n          onChange={(e) => {\r\n            setOperation(e.target.value);\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row gutter={[10, 10]}>\r\n        <Col>\r\n          <InputNumber\r\n            value={value}\r\n            min={0}\r\n            size={'small'}\r\n            style={{ width: 150 }}\r\n            onChange={(value: number) => {\r\n              setValue(value);\r\n            }}\r\n            {...props}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            type='primary'\r\n            size={'small'}\r\n            onClick={() => {\r\n              onSave({ operation: operation, value: value });\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default InvStockInput;\r\n","import MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport Button from '@components/Button';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport { Col, Image, Row, Space, Typography } from 'antd';\r\nimport FilterInputs from './FilterInputs';\r\nimport prodList from './prodList';\r\nimport prodTabList from './prodTabList';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { moneyFormatter } from '@utils/numUtils';\r\nimport InvStockInput from '@/components/Input/InvStockInput';\r\nimport { BulkEditButton } from '@/components/Button/ActionButton';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst ProdInv = () => {\r\n  const { Text } = Typography;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [prodListFltr, setProdListFltr] = useState(prodList);\r\n\r\n  const bulkUpdBtn = (props: any) => <BulkEditButton />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: bulkUpdBtn,\r\n      key: 'bulkUpd',\r\n    },\r\n  ];\r\n\r\n  const prodInvColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    width?: number | string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n      key: 'prod',\r\n      width: 400,\r\n      sorter: true,\r\n      render: (_: any, data: { [x: string]: string | undefined }) => (\r\n        <Row gutter={5}>\r\n          <Col xs={9} xl={7}>\r\n            <Image src={data['prodImg']} height={100} width={100} />\r\n          </Col>\r\n          <Col xs={15} xl={17}>\r\n            <Space direction='vertical' size={5}>\r\n              <div className='text-button-wrapper'>\r\n                <Text strong className='text-button'>\r\n                  {data['prodNm']}\r\n                </Text>\r\n              </div>\r\n              <Text type='secondary' className='text-sm text-break'>\r\n                {data['prodCat']}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'SKU',\r\n      dataIndex: 'prodSKU',\r\n      key: 'prodSKU',\r\n      width: 160,\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'prodPrice',\r\n      key: 'prodPrice',\r\n      width: 120,\r\n      sorter: true,\r\n      render: (amount: number) => (\r\n        <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'prodStock',\r\n      key: 'prodStock',\r\n      width: 100,\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 280,\r\n      render: () => <InvStockInput input={0} />,\r\n    },\r\n  ];\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='prod-inv'>\r\n        <MainCard\r\n          tabList={prodTabList}\r\n          onTabChange={(key) =>\r\n            setProdListFltr(\r\n              prodList.filter((prod) =>\r\n                key !== 'all' ? prod.prodStat === key : true\r\n              )\r\n            )\r\n          }\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Product List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('prodMgmt'))}\r\n                >\r\n                  View Products\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <InformativeTable\r\n              dataSource={prodListFltr}\r\n              columns={prodInvColumns}\r\n              buttons={onSelectBtn}\r\n              defPg={5}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\nexport default ProdInv;\r\n","import React, { useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport {\r\n  Upload as AntdUpload,\r\n  UploadProps as AntdUploadProps,\r\n  Modal,\r\n} from 'antd';\r\nimport './UploadPicWall.less';\r\n\r\nconst UploadPicWall = (props: AntdUploadProps) => {\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n  const getBase64 = (file: Blob) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => setPreviewVisible(false);\r\n\r\n  const handlePreview = async (file: any) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\r\n    );\r\n  };\r\n\r\n  const uploadButton = <MdAdd size={50} className='color-grey-300' />;\r\n\r\n  return (\r\n    <span className='upload-pic-wall'>\r\n      <AntdUpload\r\n        action='https://run.mocky.io/v3/74b79e58-0491-4fe0-ae9c-738eab6c90ba'\r\n        listType='picture-card'\r\n        onPreview={handlePreview}\r\n        multiple\r\n        {...props}\r\n      >\r\n        {props.fileList !== undefined && props.fileList.length >= 8\r\n          ? null\r\n          : uploadButton}\r\n      </AntdUpload>\r\n      <Modal\r\n        visible={previewVisible}\r\n        title={previewTitle}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt='uploadPreviewImg' className='full-width' src={previewImage} />\r\n      </Modal>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default UploadPicWall;\r\n","import React, { useState } from 'react';\r\nimport { Affix, AffixProps, Card, Col, Row } from 'antd';\r\nimport Button from '@components/Button';\r\n\r\nexport interface AffixAddProps extends AffixProps {\r\n  label?: string;\r\n}\r\n\r\nconst AffixAdd = ({ label, ...props }: Omit<AffixAddProps, 'children'>) => {\r\n  const [showCard, setShowCard] = useState(false);\r\n  return (\r\n    <Affix\r\n      onChange={(affixed) =>\r\n        showCard ? setShowCard(false) : setShowCard(true)\r\n      }\r\n      {...props}\r\n    >\r\n      <Card\r\n        bordered={false}\r\n        style={\r\n          showCard\r\n            ? {\r\n                width: '100%',\r\n                boxShadow: '0 -1px 8px 0 rgb(39 52 120 / 12%)',\r\n                borderTopLeftRadius: 6,\r\n                borderTopRightRadius: 6,\r\n              }\r\n            : { width: '100%', background: 'none' }\r\n        }\r\n        bodyStyle={showCard ? { padding: '20px 15px' } : { padding: '0 15px' }}\r\n      >\r\n        <Row justify='end' gutter={20}>\r\n          <Col>\r\n            <Button size='middle'>Cancel</Button>\r\n          </Col>\r\n          <Col>\r\n            <Button size='middle' type='primary' htmlType='submit'>\r\n              Add {label}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default AffixAdd;\r\n","import BraftEditor, {\r\n  BraftEditorProps,\r\n  BuiltInControlType,\r\n} from 'braft-editor';\r\nimport ColorPicker from 'braft-extensions/dist/color-picker';\r\nimport Table from 'braft-extensions/dist/table';\r\nimport 'braft-editor/dist/index.css';\r\nimport 'braft-extensions/dist/color-picker.css';\r\nimport 'braft-extensions/dist/table.css';\r\nimport './TextEditor.less';\r\n\r\nBraftEditor.use(\r\n  ColorPicker({\r\n    clearButtonText: 'Clear',\r\n    closeButtonText: 'Close',\r\n  })\r\n);\r\n\r\nBraftEditor.use(Table({ columnResizable: true }));\r\n\r\nconst TextEditor = (props: BraftEditorProps) => {\r\n  const excludeCtrl: BuiltInControlType[] = ['fullscreen'];\r\n\r\n  return <BraftEditor language='en' excludeControls={excludeCtrl} {...props} />;\r\n};\r\n\r\nexport default TextEditor;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport UploadPicWall from '@components/Upload/UploadPicWall/UploadPicWall';\r\nimport AffixAdd from '@components/Affix/AffixAdd';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Anchor,\r\n  Checkbox,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Radio,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\nimport TextEditor from '@components/Input/TextEditor';\r\nimport { prodCat } from '@utils/optionUtils';\r\n\r\nconst ProdAdd = () => {\r\n  const { Text, Title } = Typography;\r\n  const [prodForm] = Form.useForm();\r\n  const { Link } = Anchor;\r\n  const [fileList, setFileList]: any = useState([\r\n    {\r\n      uid: '-1',\r\n      name: 'image.png',\r\n      status: 'done',\r\n      url: 'https://www.sharifahfood.com/wp-content/uploads/2020/10/BG-3.png',\r\n    },\r\n  ]);\r\n\r\n  const [targetOffset, setTargetOffset] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const anchorList = [\r\n    { link: 'basicInfo', title: 'Basic Information' },\r\n    { link: 'pricing', title: 'Pricing' },\r\n    { link: 'inv', title: 'Inventory' },\r\n    { link: 'shipping', title: 'Shipping' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTargetOffset(window.innerHeight / 1.65);\r\n  }, []);\r\n\r\n  return (\r\n    <Form name='prodForm' form={prodForm} layout='vertical' size='small'>\r\n      <Layout>\r\n        <Col xs={16} xl={19} className='center-flex'>\r\n          <MainCardContainer>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='basicInfo'>\r\n                  Basic Information\r\n                </Title>\r\n                <Form.Item\r\n                  label='Product Name'\r\n                  name='prodNm'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the product name.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. Nasi Briyani Bkhari'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Product Category'\r\n                  name='prodCat'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the product category.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={prodCat} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Product Image'\r\n                  name='prodImg'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please upload at least ONE product image.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <UploadPicWall\r\n                    fileList={fileList}\r\n                    onChange={(info) => {\r\n                      setFileList([...info.fileList]);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Product Description'\r\n                  name='prodDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      validator: (_, value) => {\r\n                        if (value === undefined || value.isEmpty()) {\r\n                          return Promise.reject(\r\n                            'Please add some description on the product.'\r\n                          );\r\n                        } else {\r\n                          return Promise.resolve();\r\n                        }\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {/* <Input.TextArea style={{ height: 200 }} /> */}\r\n                  <TextEditor placeholder='Please add the product description here.' />\r\n                </Form.Item>\r\n                <Form.Item label='Product Status' name='prodStat'>\r\n                  <Checkbox>Hidden</Checkbox>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='pricing'>\r\n                  Pricing\r\n                </Title>\r\n                <div>\r\n                  <Row gutter={30}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Price'\r\n                        name='prodPrice'\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please enter the product price.',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Special Price'\r\n                        name='prodSPrice'\r\n                        tooltip={{\r\n                          title: 'Discounted Price',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider />\r\n                  <Row gutter={30}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Cost per Unit'\r\n                        name='prodCPU'\r\n                        tooltip={{\r\n                          title: 'Unit Price',\r\n                        }}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message:\r\n                              'please enter the unit price of the product.',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item label='Profit' name='prodProfit'>\r\n                        <Input\r\n                          disabled\r\n                          bordered={false}\r\n                          defaultValue='-'\r\n                          placeholder='Input'\r\n                          style={{\r\n                            fontWeight: 'bold',\r\n                            cursor: 'default',\r\n                          }}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row gutter={30}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Ordering/Reorder Cost'\r\n                        name='prodOrderCost'\r\n                        tooltip={{\r\n                          title: 'Cost when reordering the product',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Carrying/Holding Cost'\r\n                        name='prodCarryCost'\r\n                        tooltip={{\r\n                          title: 'Cost for holding inventory in stock',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='inv'>\r\n                  Inventory\r\n                </Title>\r\n                <div>\r\n                  <Form.Item\r\n                    label='Stock Keeping Unit (SKU)'\r\n                    name='prodSKU'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the SKU for the product.',\r\n                      },\r\n                    ]}\r\n                    style={{ width: '40%' }}\r\n                  >\r\n                    <Input placeholder='e.g. SHRF-RTC-NBB' />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    label='Stock Quantity'\r\n                    name='prodQuantity'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the product stock quantity.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <InputNumber min={0} defaultValue={0} />\r\n                  </Form.Item>\r\n\r\n                  <Divider />\r\n                  <Row gutter={30}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Average Lead Time'\r\n                        name='avgLeadTime'\r\n                        tooltip={{\r\n                          title: 'Average Lead Time',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          min={0}\r\n                          placeholder='Input'\r\n                          addonAfter='Days'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Maximum Lead Time'\r\n                        name='maxLeadTime'\r\n                        tooltip={{\r\n                          title: 'Maximum Lead Time',\r\n                        }}\r\n                      >\r\n                        <InputNumber\r\n                          min={0}\r\n                          placeholder='Input'\r\n                          addonAfter='Days'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='shipping'>\r\n                  Shipping\r\n                </Title>\r\n                <Form.Item\r\n                  label='Weight (kg)'\r\n                  name='prodWeight'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the product weight.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    min={0}\r\n                    defaultValue={0}\r\n                    style={{ width: '10%' }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Dimension (cm)'\r\n                  name='prodDimension'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the product dimension in cm.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Space size={10}>\r\n                    <InputNumber min={0} placeholder='Length' addonAfter='cm' />\r\n                    <Text type='secondary'>x</Text>\r\n                    <InputNumber min={0} placeholder='Width' addonAfter='cm' />\r\n                    <Text type='secondary'>x</Text>\r\n                    <InputNumber min={0} placeholder='Height' addonAfter='cm' />\r\n                  </Space>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <AffixAdd offsetBottom={0} label='Product' />\r\n          </MainCardContainer>\r\n        </Col>\r\n        <Col xs={8} xl={5} push={1}>\r\n          <Anchor offsetTop={150} targetOffset={targetOffset}>\r\n            {anchorList.map((anchor) => (\r\n              <Link\r\n                key={anchor.link}\r\n                href={`#${anchor.link}`}\r\n                title={anchor.title}\r\n              />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Layout>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ProdAdd;\r\n","import { Col, DatePicker, Row, Typography } from 'antd';\r\nimport { RangePickerProps } from 'antd/es/date-picker';\r\n\r\ntype DatePickerWithLabelProps = RangePickerProps & {\r\n  label: string;\r\n  textSpan?: number;\r\n  justify?: 'start' | 'end';\r\n};\r\n\r\nconst DatePickerWithLabel = ({\r\n  label,\r\n  textSpan = 5,\r\n  justify = 'end',\r\n  ...props\r\n}: DatePickerWithLabelProps) => {\r\n  const { Text } = Typography;\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Row align='middle' gutter={30} className='input-date'>\r\n      <Col span={textSpan} className={justify === 'start' ? '' : 'justify-end'}>\r\n        <Text type='secondary'>{label}</Text>\r\n      </Col>\r\n      <Col span={24 - textSpan}>\r\n        <RangePicker className='full-width' {...props} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DatePickerWithLabel;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport DateRangePickerWithLabel from '@components/Input/DateRangePickerWithLabel';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const packInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'packNm',\r\n    options: [\r\n      { value: 'packNm', label: 'Package Name' },\r\n      { value: 'packSKU', label: 'Package SKU' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={packInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Stock'\r\n            placeholder={['Start', 'End']}\r\n            min={0}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Price'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n            justify='start'\r\n            textSpan={3}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel label='Available Period' textSpan={7} />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","import PromoRayaQurban from '@assets/Product/PromoRayaQurban.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nconst packageList: {\r\n  key: string;\r\n  packNm: string;\r\n  packProds: {\r\n    prodNm: string;\r\n    quantity: number;\r\n  }[];\r\n  packSKU: string;\r\n  packImg: string;\r\n  packPrice: number;\r\n  packStock: number;\r\n  packStat: 'active' | 'oos' | 'scheduled' | 'expired' | 'hidden';\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    packNm: 'Promo Raya Qurban',\r\n    packProds: [\r\n      { prodNm: 'Rendang Dengeng Daging', quantity: 5 },\r\n      { prodNm: 'test', quantity: 6 },\r\n    ],\r\n    packSKU: 'SHRF-RTC-NBB',\r\n    packImg: PromoRayaQurban,\r\n    packPrice: 50,\r\n    packStock: 50,\r\n    packStat: 'active',\r\n  },\r\n  {\r\n    key: '2',\r\n    packNm: 'Hashtag',\r\n    packProds: [\r\n      { prodNm: 'Paste', quantity: 7 },\r\n      { prodNm: 'testing', quantity: 10 },\r\n    ],\r\n    packSKU: 'SHRF-RTC-NBB',\r\n    packImg: hashtag,\r\n    packPrice: 100.2,\r\n    packStock: 210,\r\n    packStat: 'expired',\r\n  },\r\n];\r\n\r\nexport default packageList;\r\n","export default __webpack_public_path__ + \"static/media/PromoRayaQurban.f1e2b95c.png\";","const packTabList = [\r\n    { key: 'all', tab: 'All' },\r\n    { key: 'active', tab: 'Active' },\r\n    { key: 'oos', tab: 'Out of Stock' },\r\n    { key: 'scheduled', tab: 'Scheduled' },\r\n    { key: 'expired', tab: 'Expired' },\r\n    { key: 'hidden', tab: 'Hidden' },\r\n  ];\r\n\r\nexport default packTabList;","import MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography, Image } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport packageList from './packageList';\r\n\r\nimport packTabList from './packTabList';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { packStatList } from '@utils/optionUtils';\r\nimport {\r\n  ActivateButton,\r\n  DeleteButton,\r\n  EditButton,\r\n  HideButton,\r\n} from '@/components/Button/ActionButton';\r\nimport StatusTag from '@/components/Tag/StatusTag';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst PackMgmt = () => {\r\n  const { Text } = Typography;\r\n  const [packageListFltr, setPackageListFltr] = useState(packageList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setPackageListFltr(\r\n        packageList.filter((pack) =>\r\n          searchParams.get('stat') !== null\r\n            ? pack.packStat === searchParams.get('stat')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const activateBtn = (props: any) => <ActivateButton type='primary' />;\r\n\r\n  const hideBtn = (props: any) => <HideButton type='primary' color='grey' />;\r\n\r\n  const deleteBtn = (props: any) => (\r\n    <DeleteButton type='primary' />\r\n  );\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: activateBtn,\r\n      key: 'activate',\r\n      fltr: [{ fld: 'packStat', value: 'hidden', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: hideBtn,\r\n      key: 'hide',\r\n      fltr: [{ fld: 'packStat', value: 'active', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: deleteBtn,\r\n      key: 'delete',\r\n    },\r\n  ];\r\n\r\n  const packMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Package',\r\n      dataIndex: ['packNm', 'packSKU', 'packImg'],\r\n      key: 'pack',\r\n      sorter: true,\r\n      width: 280,\r\n      render: (_: any, data: { [x: string]: string | undefined }) => (\r\n        <Row gutter={20}>\r\n          <Col xs={9} xl={7}>\r\n            <Image src={data['packImg']} height={80} width={80} />\r\n          </Col>\r\n          <Col xs={15} xl={17}>\r\n            <Space direction='vertical' size={5}>\r\n              <div className='text-button-wrapper'>\r\n                <Text strong className='text-button'>\r\n                  {data['packNm']}\r\n                </Text>\r\n              </div>\r\n              <Text type='secondary' className='text-sm text-break'>\r\n                {data['packSKU']}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Products Included',\r\n      dataIndex: 'packProds',\r\n      key: 'packProds.prodNm',\r\n      width: 280,\r\n      render: (products: []) => (\r\n        <Space direction='vertical' size={10} className='full-width'>\r\n          {products.map((product: any) => (\r\n            <Row\r\n              key={`prodIncluded-${product}`}\r\n              justify='space-between'\r\n              gutter={20}\r\n            >\r\n              <Col span={20}>\r\n                <Text type='secondary' className='text-break'>\r\n                  {product.prodNm}\r\n                </Text>\r\n              </Col>\r\n              <Col span={4} className='justify-end'>\r\n                <Text type='secondary'>x{product.quantity}</Text>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'packPrice',\r\n      key: 'packPrice',\r\n      sorter: true,\r\n      width: 100,\r\n      render: (amount: string) => (\r\n        <Text type='secondary'>RM {parseFloat(amount).toFixed(2)}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'packStock',\r\n      key: 'paclStock',\r\n      sorter: true,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'packStat',\r\n      key: 'packStat',\r\n      width: 150,\r\n      render: (status: string) => (\r\n        <StatusTag\r\n          status={status}\r\n          statusList={packStatList}\r\n          dropdownStatus={['active', 'hidden']}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 100,\r\n      render: () => (\r\n        <Space direction='vertical' size={5}>\r\n          <EditButton type='link' color='info' />\r\n          <DeleteButton type='link' color='info' />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='pack-mgmt'>\r\n        <MainCard\r\n          tabList={packTabList}\r\n          activeTabKey={\r\n            searchParams.get('stat') === null ? 'all' : searchParams.get('stat')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { stat: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Package List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('packAdd'))}\r\n                >\r\n                  Add Package\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={packageListFltr}\r\n              columns={packMgmtColumns}\r\n              buttons={onSelectBtn}\r\n              defPg={5}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PackMgmt;\r\n","import MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport Button from '@components/Button';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport { Col, Image, Row, Space, Typography } from 'antd';\r\nimport FilterInputs from './FilterInputs';\r\nimport packageList from './packageList';\r\nimport packTabList from './packTabList';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport InvStockInput from '@/components/Input/InvStockInput';\r\nimport { BulkEditButton } from '@/components/Button/ActionButton';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst PackInv = () => {\r\n  const { Text } = Typography;\r\n  const [packageListFltr, setPackageListFltr] = useState(packageList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setPackageListFltr(\r\n        packageList.filter((pack) =>\r\n          searchParams.get('stat') !== null\r\n            ? pack.packStat === searchParams.get('stat')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const bulkUpdBtn = (props: any) => <BulkEditButton />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: bulkUpdBtn,\r\n      key: 'bulkUpd',\r\n    },\r\n  ];\r\n\r\n  const packInvColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    width?: number | string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Package',\r\n      dataIndex: ['packNm', 'packSKU', 'packImg'],\r\n      key: 'pack',\r\n      width: 260,\r\n      sorter: true,\r\n      render: (_: any, data: { [x: string]: string | undefined }) => (\r\n        <Row gutter={20}>\r\n          <Col xs={9} xl={7}>\r\n            <Image src={data['packImg']} height={80} width={80} />\r\n          </Col>\r\n          <Col xs={15} xl={17}>\r\n            <Space direction='vertical' size={5}>\r\n              <div className='text-button-wrapper'>\r\n                <Text strong className='text-button'>\r\n                  {data['packNm']}\r\n                </Text>\r\n              </div>\r\n              <Text type='secondary' className='text-sm text-break'>\r\n                {data['packSKU']}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Products Included',\r\n      dataIndex: 'packProds',\r\n      key: 'packProds.prodNm',\r\n      width: 260,\r\n      render: (products: []) => (\r\n        <Space direction='vertical' size={10} className='full-width'>\r\n          {products.map((product: any) => (\r\n            <Row justify='space-between' gutter={20}>\r\n              <Col span={20}>\r\n                <Text type='secondary' className='text-break'>\r\n                  {product.prodNm}\r\n                </Text>\r\n              </Col>\r\n              <Col span={4} className='justify-end'>\r\n                <Text type='secondary'>x{product.quantity}</Text>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'packPrice',\r\n      key: 'packPrice',\r\n      width: 100,\r\n      sorter: true,\r\n      render: (amount: string) => (\r\n        <Text type='secondary'>RM {parseFloat(amount).toFixed(2)}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'packStock',\r\n      key: 'packStock',\r\n      width: 100,\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 250,\r\n\r\n      render: () => <InvStockInput input={0} />,\r\n    },\r\n  ];\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='pack-inv'>\r\n        <MainCard\r\n          tabList={packTabList}\r\n          activeTabKey={\r\n            searchParams.get('stat') === null ? 'all' : searchParams.get('stat')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { stat: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Package List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('packMgmt'))}\r\n                >\r\n                  View Packages\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <InformativeTable\r\n              dataSource={packageListFltr}\r\n              columns={packInvColumns}\r\n              buttons={onSelectBtn}\r\n              defPg={5}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\nexport default PackInv;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport UploadPicWall from '@components/Upload/UploadPicWall/UploadPicWall';\r\nimport AffixAdd from '@components/Affix/AffixAdd';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Anchor,\r\n  AutoComplete,\r\n  Checkbox,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Image,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\nimport Button from '@components/Button';\r\nimport Table from '@components/Table';\r\nimport TextEditor from '@components/Input/TextEditor';\r\n\r\nconst PackAdd = () => {\r\n  const { Text, Title, Paragraph } = Typography;\r\n  const { Link } = Anchor;\r\n  const [hideEndTime, setHideEndTime] = useState(true);\r\n  const [fileList, setFileList]: any = useState([\r\n    {\r\n      uid: '-1',\r\n      name: 'image.png',\r\n      status: 'done',\r\n      url: 'https://www.sharifahfood.com/wp-content/uploads/2020/10/BG-3.png',\r\n    },\r\n  ]);\r\n\r\n  const [targetOffset, setTargetOffset] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const anchorList = [\r\n    { link: 'basicInfo', title: 'Basic Information' },\r\n    { link: 'products', title: 'Products' },\r\n    { link: 'pricing', title: 'Pricing' },\r\n    { link: 'inv', title: 'Inventory' },\r\n    { link: 'shipping', title: 'Shipping' },\r\n    { link: 'availPeriod', title: 'Available Period' },\r\n  ];\r\n\r\n  const prodColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    width?: number | string;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n      key: 'prod',\r\n      render: (_: any, data: { [x: string]: string | undefined }) => (\r\n        <Row gutter={5}>\r\n          <Col>\r\n            <Image src={data['prodImg']} height={120} width={120} />\r\n          </Col>\r\n          <Col>\r\n            <Space direction='vertical' size={5}>\r\n              <Button type='link' color='info'>\r\n                {data['prodNm']}\r\n              </Button>\r\n              <Text type='secondary' className='text-sm'>\r\n                {data['prodCat']}\r\n              </Text>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'SKU',\r\n      dataIndex: 'prodSKU',\r\n      key: 'prodSKU',\r\n    },\r\n    {\r\n      title: 'Stock',\r\n      dataIndex: 'prodStock',\r\n      key: 'prodStock',\r\n    },\r\n  ];\r\n\r\n  //retrieve from database\r\n  const options: any = [\r\n    {\r\n      label: 'Ready-To-Eat',\r\n      options: [\r\n        { label: 'Kari Ayam', value: 'Kari Ayam' },\r\n        { label: 'Sambal Ikan Bilis', value: 'Sambal Ikan Bilis' },\r\n        { label: 'Rendang Dendeng Daging', value: 'Rendang Dendeng Daging' },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Ready-To-Cook',\r\n      options: [\r\n        { label: 'Nasi Briyani Bukhari', value: 'Nasi Briyani Bukhari' },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Paste',\r\n      options: [\r\n        { label: 'Pes Sambal Tumis', value: 'Pes Sambal Tumis' },\r\n        { label: 'Pes Masakan Keruntuk', value: 'Pes Masakan Keruntuk' },\r\n        { label: 'Pes Mi Goreng', value: 'Pes Mi Goreng' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTargetOffset(window.innerHeight / 1.5);\r\n  }, []);\r\n\r\n  return (\r\n    <Form name='packForm' layout='vertical' size='small'>\r\n      <Layout>\r\n        <Col xs={16} xl={19} className='center-flex'>\r\n          <MainCardContainer>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='basicInfo'>\r\n                  Basic Information\r\n                </Title>\r\n                <Form.Item\r\n                  label='Package Name'\r\n                  name='packNm'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the package name.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. Promo Raya Qurban'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Package Image'\r\n                  name='packImg'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please upload at least ONE package image.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <UploadPicWall\r\n                    fileList={fileList}\r\n                    onChange={(info) => {\r\n                      setFileList([...info.fileList]);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Package Description'\r\n                  name='packDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      validator: (_, value) => {\r\n                        if (value === undefined || value.isEmpty()) {\r\n                          return Promise.reject(\r\n                            'Please add some description on the package.'\r\n                          );\r\n                        } else {\r\n                          return Promise.resolve();\r\n                        }\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {/* <Input.TextArea style={{ height: 200 }} /> */}\r\n                  <TextEditor placeholder='Please add the package description here.' />\r\n                </Form.Item>\r\n                <Form.Item label='Package Status' name='packStat'>\r\n                  <Checkbox>Hidden</Checkbox>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='products'>\r\n                  Products\r\n                </Title>\r\n\r\n                <Form.Item label='Products To Be Included' name='prodNm'>\r\n                  <Input.Group compact>\r\n                    <AutoComplete\r\n                      placeholder='Product Name'\r\n                      options={options}\r\n                      filterOption\r\n                      notFoundContent='Not Found'\r\n                      style={{ width: '40%' }}\r\n                    >\r\n                      <Input />\r\n                    </AutoComplete>\r\n                    <Button type='primary' style={{ padding: '0 15px' }}>\r\n                      Add\r\n                    </Button>\r\n                  </Input.Group>\r\n\r\n                  <Paragraph type='secondary'>\r\n                    Note: Selected products will be displayed below.\r\n                  </Paragraph>\r\n                </Form.Item>\r\n                <Table columns={prodColumns} />\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='pricing'>\r\n                  Pricing\r\n                </Title>\r\n                <Row gutter={30}>\r\n                  <Col>\r\n                    <Form.Item\r\n                      label='Price'\r\n                      name='packPrice'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please enter the package price.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <InputNumber\r\n                        addonBefore='RM'\r\n                        precision={2}\r\n                        min={0}\r\n                        placeholder='Input'\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Item\r\n                      label='Special Price'\r\n                      name='packSPrice'\r\n                      tooltip={{\r\n                        title: 'Discounted Price',\r\n                      }}\r\n                    >\r\n                      <InputNumber\r\n                        addonBefore='RM'\r\n                        precision={2}\r\n                        min={0}\r\n                        placeholder='Input'\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <Row justify='center'>\r\n              <MainCard>\r\n                <Space direction='vertical' size={20} className='full-width'>\r\n                  <Title level={4} id='inv'>\r\n                    Inventory\r\n                  </Title>\r\n\r\n                  <Form.Item\r\n                    label='Stock Keeping Unit (SKU)'\r\n                    name='packSKU'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the SKU for the package.',\r\n                      },\r\n                    ]}\r\n                    style={{ width: '40%' }}\r\n                  >\r\n                    <Input placeholder='e.g. SHRF-PP-PRQ' />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    label='Stock Quantity'\r\n                    name='packQuantity'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the package stock quantity.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <InputNumber min={0} defaultValue={0} />\r\n                  </Form.Item>\r\n                </Space>\r\n              </MainCard>\r\n            </Row>\r\n            <Row justify='center' className='full-width'>\r\n              <MainCard>\r\n                <Space direction='vertical' size={20} className='full-width'>\r\n                  <Title level={4} id='shipping'>\r\n                    Shipping\r\n                  </Title>\r\n                  <Form.Item\r\n                    label='Weight (kg)'\r\n                    name='packWeight'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the package weight.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <InputNumber\r\n                      min={0}\r\n                      defaultValue={0}\r\n                      style={{ width: '10%' }}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    label='Dimension (cm)'\r\n                    name='packDimension'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please enter the package dimension in cm.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Space size={10}>\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder='Length'\r\n                        addonAfter='cm'\r\n                      />\r\n                      <Text type='secondary'>x</Text>\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder='Width'\r\n                        addonAfter='cm'\r\n                      />\r\n                      <Text type='secondary'>x</Text>\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder='Height'\r\n                        addonAfter='cm'\r\n                      />\r\n                    </Space>\r\n                  </Form.Item>\r\n                </Space>\r\n              </MainCard>\r\n            </Row>\r\n            <Row justify='center' className='full-width'>\r\n              <MainCard>\r\n                <Space direction='vertical' size={20} className='full-width'>\r\n                  <Title level={4} id='availPeriod'>\r\n                    Available Period\r\n                  </Title>\r\n                  <Form.Item\r\n                    label='Start Time'\r\n                    name='packStartTime'\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message:\r\n                          'Please select the start time to launch the package.',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <DatePicker showTime placeholder='Select Date and Time' />\r\n                  </Form.Item>\r\n                  <Checkbox onChange={(e) => setHideEndTime(e.target.checked)}>\r\n                    Set End Time\r\n                  </Checkbox>\r\n\r\n                  <Form.Item\r\n                    label='End Time'\r\n                    name='packEndTime'\r\n                    hidden={hideEndTime}\r\n                  >\r\n                    <DatePicker showTime placeholder='Select Date and Time' />\r\n                  </Form.Item>\r\n                </Space>\r\n              </MainCard>\r\n            </Row>\r\n            <AffixAdd offsetBottom={0} label='Package' />\r\n          </MainCardContainer>\r\n        </Col>\r\n        <Col xs={8} xl={5}>\r\n          <Anchor offsetTop={150} targetOffset={targetOffset}>\r\n            {anchorList.map((anchor) => (\r\n              <Link\r\n                key={anchor.link}\r\n                href={`#${anchor.link}`}\r\n                title={anchor.title}\r\n              />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Layout>{' '}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PackAdd;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport DateRangePickerWithLabel from '@components/Input/DateRangePickerWithLabel';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { custCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const orderInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'orderID',\r\n    options: [\r\n      { value: 'orderID', label: 'Order ID' },\r\n      { value: 'custNm', label: 'Customer Name' },\r\n      { value: 'trackingNum', label: 'Tracking Number' },\r\n    ],\r\n  };\r\n\r\n  const custCatSelect = {\r\n    placeholder: 'Select Customer Type',\r\n    options: custCat,\r\n  };\r\n\r\n  const payMthdSelect = {\r\n    placeholder: 'Select Payment Method',\r\n    options: [\r\n      { value: 'intBnk', label: 'Internet Banking' },\r\n      { value: 'card', label: 'Card' },\r\n      { value: 'paypal', label: 'Paypal' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={orderInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel\r\n            label='Customer Type'\r\n            select={custCatSelect}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n\r\n        <FilterInputCol>\r\n          <SelectWithLabel\r\n            label='Payment Method'\r\n            select={payMthdSelect}\r\n            justify='start'\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Amount'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel\r\n            label='Order Date'\r\n            justify='start'\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","const orderList: {\r\n  key: string;\r\n  orderID: number;\r\n  custNm: string;\r\n  custType: 'agent' | 'drpshpr' | 'cust';\r\n  orderTm: string;\r\n  trackNum?: string;\r\n  orderAmt: number;\r\n  orderStat: 'completed' | 'unpaid' | 'cancel' | 'toShip' | 'shipping';\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    orderID: 2908724,\r\n    custNm: 'Tan Yuan Jie',\r\n    custType: 'agent',\r\n    orderTm: '23-08-2021 14:30',\r\n    orderAmt: 60,\r\n    orderStat: 'toShip',\r\n  },\r\n  {\r\n    key: '2',\r\n    orderID: 1659883,\r\n    custNm: 'Nur Nuraliah binti Haiqal',\r\n    custType: 'cust',\r\n    orderTm: '23-08-2021 12:41',\r\n    orderAmt: 12500.50,\r\n    orderStat: 'toShip',\r\n  },\r\n  {\r\n    key: '3',\r\n    orderID: 7156802,\r\n    custNm: 'Jong Cai Tien',\r\n    custType: 'cust',\r\n    orderTm: '23-08-2021 09:21',\r\n    trackNum: 'PL054981244515',\r\n    orderAmt: 32,\r\n    orderStat: 'shipping',\r\n  },\r\n  {\r\n    key: '4',\r\n    orderID: 1605044,\r\n    custNm: 'Mohammed Yusni bin Ayyadi',\r\n    custType: 'drpshpr',\r\n    orderTm: '22-08-2021 21:06',\r\n    trackNum: 'PL124994664623',\r\n    orderAmt: 88.2,\r\n    orderStat: 'shipping',\r\n  },\r\n  {\r\n    key: '5',\r\n    orderID: 1487160,\r\n    custNm: 'Huzaifi Hafizh bin Zaidi',\r\n    custType: 'agent',\r\n    orderTm: '22-08-2021 19:34',\r\n    trackNum: 'PL124994664623',\r\n    orderAmt: 88.2,\r\n    orderStat: 'shipping',\r\n  },\r\n  {\r\n    key: '6',\r\n    orderID: 7698033,\r\n    custNm: 'Steven Tan',\r\n    custType: 'cust',\r\n    orderTm: '21-08-2021 17:32',\r\n    orderAmt: 164.5,\r\n    orderStat: 'cancel',\r\n  },\r\n  {\r\n    key: '7',\r\n    orderID: 2741131,\r\n    custNm: 'Kar Ming Xiu',\r\n    custType: 'cust',\r\n    orderTm: '21-08-2021 15:30',\r\n    trackNum: 'PL259637281293',\r\n    orderAmt: 50,\r\n    orderStat: 'completed',\r\n  },\r\n  {\r\n    key: '8',\r\n    orderID: 5943806,\r\n    custNm: 'Shoba Bhullar a/l Darma Raja',\r\n    custType: 'drpshpr',\r\n    orderTm: '21-08-2021 12:01',\r\n    trackNum: 'PL568920594212',\r\n    orderAmt: 360,\r\n    orderStat: 'completed',\r\n  },\r\n  {\r\n    key: '9',\r\n    orderID: 5166945,\r\n    custNm: 'Mohd Ramli Zulkefli bin Nik Bakri',\r\n    custType: 'agent',\r\n    orderTm: '20-08-2021 18:00',\r\n    trackNum: 'PL654623442345',\r\n    orderAmt: 240,\r\n    orderStat: 'completed',\r\n  },\r\n  {\r\n    key: '10',\r\n    orderID: 9851040,\r\n    custNm: 'Nur Khaliesah binti Yussof',\r\n    custType: 'cust',\r\n    orderTm: '20-08-2021 13:00',\r\n    trackNum: 'PL098946552414',\r\n    orderAmt: 45,\r\n    orderStat: 'completed',\r\n  },\r\n];\r\n\r\nexport default orderList;\r\n","const orderTabList = [\r\n  { key: 'all', tab: 'All' },\r\n  { key: 'unpaid', tab: 'Unpaid' },\r\n  { key: 'toShip', tab: 'To Ship' },\r\n  { key: 'shipping', tab: 'Shipping' },\r\n  { key: 'completed', tab: 'Completed' },\r\n  { key: 'cancel', tab: 'Cancellation' },\r\n];\r\n\r\nexport default orderTabList;","import { MdUpdate } from 'react-icons/md';\r\nimport Button, { ButtonProps } from '..';\r\n\r\nconst UpdButton = ({ children = 'Update', ...props }: ButtonProps) => {\r\n  return (\r\n    <Button\r\n      icon={<MdUpdate size={16} style={{ marginRight: 4 }} />}\r\n      className='center-flex'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default UpdButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport orderList from './orderList';\r\nimport { HiExclamation } from 'react-icons/hi';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { moneyFormatter } from '@utils/numUtils';\r\nimport orderTabList from './orderTabList';\r\nimport { orderStatList } from '@utils/optionUtils';\r\nimport { BulkEditButton, PrintButton } from '@/components/Button/ActionButton';\r\nimport UpdButton from '@/components/Button/ActionButton/UpdButton';\r\nimport StatusTag from '@/components/Tag/StatusTag';\r\nimport Popover from '@/components/Popover';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst OrderMgmt = () => {\r\n  const { Text } = Typography;\r\n  const [orderListFltr, setOrderListFltr] = useState(orderList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setOrderListFltr(\r\n        orderList.filter((order) =>\r\n          searchParams.get('stat') !== null\r\n            ? order.orderStat === searchParams.get('stat')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const genInvoiceBtn = (props: any) => (\r\n    <PrintButton type='primary'>Generate Invoice(s)</PrintButton>\r\n  );\r\n\r\n  const bulkUpdBtn = (props: any) => <BulkEditButton />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: genInvoiceBtn,\r\n      key: 'genInvoice',\r\n    },\r\n    {\r\n      element: bulkUpdBtn,\r\n      key: 'bulkUpd',\r\n      fltr: [\r\n        { fld: 'trackNum', value: undefined, rel: 'eq' },\r\n        { fld: 'orderStat', value: 'cancel', rel: 'neq' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const orderMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Order ID',\r\n      dataIndex: 'orderID',\r\n      key: 'orderID',\r\n      sorter: true,\r\n      fixed: 'left',\r\n      width: 110,\r\n      render: (data: number) => (\r\n        <div className='text-button-wrapper'>\r\n          <Text strong className='text-button'>\r\n            #{data}\r\n          </Text>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      dataIndex: 'custNm',\r\n      key: 'custNm',\r\n      sorter: true,\r\n      width: 200,\r\n      render: (name: string) => (\r\n        <Text type='secondary' className='text-break'>\r\n          {name}\r\n        </Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Customer Type',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (type: string) => (\r\n        <Text type='secondary'>\r\n          {type === 'agent'\r\n            ? 'Agent'\r\n            : type === 'drpshpr'\r\n            ? 'Dropshipper'\r\n            : type === 'cust'\r\n            ? 'Direct Customer'\r\n            : null}\r\n        </Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Order Time',\r\n      dataIndex: 'orderTm',\r\n      key: 'orderTm',\r\n      sorter: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Tracking Number',\r\n      dataIndex: ['trackNum', 'orderStat'],\r\n      key: 'trackNum',\r\n      width: 150,\r\n      render: (_: any, data: { [x: string]: string }) =>\r\n        data['trackNum'] !== undefined ? (\r\n          <Button type='link' color='info'>\r\n            #{data['trackNum']}\r\n          </Button>\r\n        ) : data['orderStat'] === 'cancel' ? (\r\n          '-'\r\n        ) : (\r\n          <Popover content='Please update the tracking number'>\r\n            <Space size={5}>\r\n              <HiExclamation size={20} className='color-warning' />\r\n              <Text strong className='color-warning'>\r\n                Not found\r\n              </Text>\r\n            </Space>\r\n          </Popover>\r\n        ),\r\n    },\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'orderAmt',\r\n      key: 'orderAmt',\r\n      sorter: true,\r\n      width: 100,\r\n      render: (amount: number) => <Text strong>{moneyFormatter(amount)}</Text>,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'orderStat',\r\n      key: 'orderStat',\r\n      align: 'center' as const,\r\n      width: 130,\r\n      render: (status: string) => (\r\n        <StatusTag status={status} statusList={orderStatList} minWidth='90%' />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: ['trackNum', 'orderStat'],\r\n      key: 'action',\r\n      width: 100,\r\n      fixed: 'right',\r\n      render: (_: any, data: { [x: string]: string }) =>\r\n        data['orderStat'] !== 'cancel' ? (\r\n          <Space direction='vertical' size={5}>\r\n            <PrintButton type='link' color='info' />\r\n            <UpdButton type='link' color='info' />\r\n          </Space>\r\n        ) : (\r\n          '-'\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='order-mgmt'>\r\n        <MainCard\r\n          tabList={orderTabList}\r\n          activeTabKey={\r\n            searchParams.get('stat') === null ? 'all' : searchParams.get('stat')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { stat: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={40} className='full-width'>\r\n            <Space direction='vertical' size={15} className='full-width'>\r\n              <Row justify='space-between'>\r\n                <Col>\r\n                  <BoldTitle level={4}>Order List</BoldTitle>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    type='primary'\r\n                    onClick={() => navigate(findRoutePath('orderAdd'))}\r\n                  >\r\n                    Add Order\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <InformativeTable\r\n                dataSource={orderListFltr}\r\n                columns={orderMgmtColumns}\r\n                buttons={onSelectBtn}\r\n                scroll={{ x: 1100 }}\r\n              />\r\n            </Space>\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderMgmt;\r\n","import Layout from '@components/Layout';\r\nimport { Space, SpaceProps, Typography } from 'antd';\r\nimport Button from '@components/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MainCard from '@/components/Card/MainCard';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nexport interface ComingSoonProps extends SpaceProps {\r\n  img: string;\r\n}\r\n\r\nconst ComingSoon = ({ img, ...props }: ComingSoonProps) => {\r\n  const { Text } = Typography;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Layout>\r\n      <span className='coming-soon'>\r\n        <Space\r\n          direction='vertical'\r\n          size={20}\r\n          className='main-card-container'\r\n          align='center'\r\n        >\r\n          <MainCard bodyStyle={{ padding: 15 }}>\r\n            <img\r\n              src={img}\r\n              alt='comingSoonImg'\r\n              height={370}\r\n              width={490}\r\n              draggable='false'\r\n              style={{\r\n                borderRadius: 6,\r\n                pointerEvents: 'none',\r\n                userSelect: 'none',\r\n              }}\r\n            />\r\n          </MainCard>\r\n          <BoldTitle>Coming Soon</BoldTitle>\r\n          <Text type='secondary' className='text-lg'>\r\n            We Are Working Hard to Give You a Better Experience.\r\n          </Text>\r\n          <Button type='primary' onClick={() => navigate('/')}>\r\n            Go Back to Dashboard\r\n          </Button>\r\n        </Space>\r\n      </span>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;\r\n","export default __webpack_public_path__ + \"static/media/eCommerce.2cc027b3.gif\";","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport ECommerce from '@assets/ComingSoon/eCommerce.gif';\r\n\r\nconst OrderAdd = () => {\r\n  return <ComingSoon img={ECommerce} />;\r\n};\r\n\r\nexport default OrderAdd;\r\n","export default __webpack_public_path__ + \"static/media/Truck.4164979d.gif\";","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport Truck from '@assets/ComingSoon/Truck.gif';\r\n\r\nconst ShptMgmt = () => {\r\n  return <ComingSoon img={Truck} />;\r\n};\r\n\r\nexport default ShptMgmt;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport DateRangePickerWithLabel from '@components/Input/DateRangePickerWithLabel';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { custStatusCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const orderInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'custID',\r\n    options: [\r\n      { value: 'custID', label: 'Customer ID' },\r\n      { value: 'custNm', label: 'Customer Name' },\r\n    ],\r\n  };\r\n\r\n  const custStatus = {\r\n    placeholder: 'Select Customer Status',\r\n    options: custStatusCat,\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={orderInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel\r\n            label='Customer Status'\r\n            select={custStatus}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel\r\n            label='Birthdate'\r\n            justify='start'\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel label='Registration Date' textSpan={7} />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Sales per Month'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n            justify='start'\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel label='Last Order Date' textSpan={7} />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","const custList: {\r\n  key: string;\r\n  custID: string;\r\n  custNm: string;\r\n  custType: 'agent' | 'drpshpr' | 'cust';\r\n  regDt: string;\r\n  salesMth?: number;\r\n  lastOrderDt: string;\r\n  status: 'active' | 'suspended';\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    custID: 'AGT-12346',\r\n    custNm: 'Tan Yuan Jie',\r\n    custType: 'agent',\r\n    regDt: 'Aug 16, 2020',\r\n    salesMth: 3260,\r\n    lastOrderDt: '23-08-2021 14:30',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '2',\r\n    custID: 'DC-54663',\r\n    custNm: 'Nur Nuraliah binti Haiqal',\r\n    custType: 'cust',\r\n    regDt: 'Jan 03, 2021',\r\n    lastOrderDt: '23-08-2021 12:41',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '3',\r\n    custID: 'DC-46626',\r\n    custNm: 'Jong Cai Tien',\r\n    custType: 'cust',\r\n    regDt: 'April 15, 2021',\r\n    lastOrderDt: '23-08-2021 09:21',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '4',\r\n    custID: 'DS-14153',\r\n    custNm: 'Mohammed Yusni bin Ayyadi',\r\n    custType: 'drpshpr',\r\n    regDt: 'Dec 22, 2019',\r\n    salesMth: 4500.5,\r\n    lastOrderDt: '22-08-2021 21:06',\r\n    status: 'suspended',\r\n  },\r\n  {\r\n    key: '5',\r\n    custID: 'AGT-53531',\r\n    custNm: 'Huzaifi Hafizh bin Zaidi',\r\n    custType: 'agent',\r\n    regDt: 'Sep 26, 2020',\r\n    salesMth: 2600,\r\n    lastOrderDt: '22-08-2021 19:34',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '6',\r\n    custID: 'DC-35354',\r\n    custNm: 'Steven Tan',\r\n    custType: 'cust',\r\n    regDt: 'Oct 01, 2020',\r\n    lastOrderDt: '21-08-2021 17:32',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '7',\r\n    custID: 'DC-92542',\r\n    custNm: 'Kar Ming Xiu',\r\n    custType: 'cust',\r\n    regDt: 'Feb 13, 2021',\r\n    lastOrderDt: '21-08-2021 15:30',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '8',\r\n    custID: 'DS-12454',\r\n    custNm: 'Shoba Bhullar a/l Darma Raja',\r\n    custType: 'drpshpr',\r\n    regDt: 'Aug 21, 2021',\r\n    salesMth: 360,\r\n    lastOrderDt: '21-08-2021 12:01',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '9',\r\n    custID: 'AGT-12425',\r\n    custNm: 'Mohd Ramli Zulkefli bin Nik Bakri',\r\n    custType: 'agent',\r\n    regDt: 'July 30, 2021',\r\n    salesMth: 240,\r\n    lastOrderDt: '20-08-2021 18:00',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '10',\r\n    custID: 'DC-98124',\r\n    custNm: 'Nur Khaliesah binti Yussof',\r\n    custType: 'cust',\r\n    regDt: 'Aug 20, 2021',\r\n    lastOrderDt: '20-08-2021 13:00',\r\n    status: 'active',\r\n  },\r\n];\r\n\r\nexport default custList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport custList from './custList';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { moneyFormatter } from '@utils/numUtils';\r\nimport {\r\n  ActivateButton,\r\n  SuspendButton,\r\n} from '@/components/Button/ActionButton';\r\nimport StatusTag from '@/components/Tag/StatusTag';\r\nimport { custStatList } from '@/utils/optionUtils';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst CustMgmt = () => {\r\n  const { Text } = Typography;\r\n  const [custListFltr, setCustListFltr] = useState(custList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setCustListFltr(\r\n        custList.filter((cust) =>\r\n          searchParams.get('stat') !== null\r\n            ? cust.custType === searchParams.get('stat')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n\r\n  const custTabList = [\r\n    { key: 'all', tab: 'All' },\r\n    { key: 'cust', tab: 'Direct Customer' },\r\n    { key: 'agent', tab: 'Agent' },\r\n    { key: 'drpshpr', tab: 'Dropshipper' },\r\n  ];\r\n\r\n  const activateBtn = (props: any) => <ActivateButton type='primary' />;\r\n\r\n  const suspendBtn = (props: any) => <SuspendButton type='primary' />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: activateBtn,\r\n      key: 'activate',\r\n      fltr: [{ fld: 'status', value: 'suspended', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: suspendBtn,\r\n      key: 'suspend',\r\n      fltr: [{ fld: 'status', value: 'active', rel: 'eq' }],\r\n    },\r\n  ];\r\n\r\n  const custMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Customer ID',\r\n      dataIndex: 'custID',\r\n      key: 'custID',\r\n      sorter: true,\r\n      fixed: 'left',\r\n      width: 150,\r\n      render: (data: number) => (\r\n        <div className='text-button-wrapper'>\r\n          <Text strong className='text-button'>\r\n            #{data}\r\n          </Text>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      dataIndex: 'custNm',\r\n      key: 'custNm',\r\n      sorter: true,\r\n      width: 200,\r\n    },\r\n    {\r\n      title: 'Customer Type',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (type: string) => (\r\n        <Text type='secondary'>\r\n          {type === 'agent'\r\n            ? 'Agent'\r\n            : type === 'drpshpr'\r\n            ? 'Dropshipper'\r\n            : type === 'cust'\r\n            ? 'Direct Customer'\r\n            : 'Unknown'}\r\n        </Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Registration Date',\r\n      dataIndex: 'regDt',\r\n      key: 'regDt',\r\n      sorter: true,\r\n      width: 160,\r\n    },\r\n    {\r\n      title: 'Sales per Month',\r\n      dataIndex: 'salesMth',\r\n      key: 'salesMth',\r\n      sorter: true,\r\n      width: 160,\r\n      render: (amount: number) =>\r\n        amount !== undefined ? (\r\n          <Text strong>{moneyFormatter(amount)}</Text>\r\n        ) : (\r\n          '-'\r\n        ),\r\n    },\r\n    {\r\n      title: 'Last Order Date',\r\n      dataIndex: 'lastOrderDt',\r\n      key: 'lastOrderDt',\r\n      sorter: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      align: 'center' as const,\r\n      width: 130,\r\n      render: (status: string) => (\r\n        <StatusTag status={status} statusList={custStatList} minWidth='90%' />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: ['custType', 'status'],\r\n      key: 'action',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (_: any, data: { [x: string]: string }) =>\r\n        data['custType'] === 'cust' ? (\r\n          '-'\r\n        ) : data['status'] === 'suspended' ? (\r\n          <ActivateButton type='link' color='info' />\r\n        ) : (\r\n          <SuspendButton type='link' color='info' />\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='cust-mgmt'>\r\n        <MainCard\r\n          tabList={custTabList}\r\n          activeTabKey={\r\n            searchParams.get('stat') === null ? 'all' : searchParams.get('stat')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { stat: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Customer List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('custAdd'))}\r\n                >\r\n                  Add Customer\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={custListFltr}\r\n              columns={custMgmtColumns}\r\n              buttons={onSelectBtn}\r\n              scroll={{ x: 1200 }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CustMgmt;\r\n","const custRegList: {\r\n  key: string;\r\n  regID: string;\r\n  applicant: string;\r\n  custType: 'agent' | 'drpshpr';\r\n  gender: 'm' | 'f';\r\n  regDt: string;\r\n  contactNum: string;\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    regID: 'R-AGT-24845',\r\n    applicant: 'Nik Irfan Jelani bin Hammani',\r\n    custType: 'agent',\r\n    gender: 'm',\r\n    regDt: 'Aug 22 ,2021',\r\n    contactNum: '012-4567783',\r\n  },\r\n  {\r\n    key: '2',\r\n    regID: 'R-DS-52640',\r\n    applicant: 'Rabiatul binti Hasnan',\r\n    custType: 'drpshpr',\r\n    gender: 'f',\r\n    regDt: 'Aug 21 ,2021',\r\n    contactNum: '011-8721245',\r\n  },\r\n  {\r\n    key: '3',\r\n    regID: 'R-AGT-84449',\r\n    applicant: 'Tse Cho Fan',\r\n    custType: 'agent',\r\n    gender: 'f',\r\n    regDt: 'Aug 21 ,2021',\r\n    contactNum: '016-2215653',\r\n  },\r\n  {\r\n    key: '4',\r\n    regID: 'R-AGT-93651',\r\n    applicant: 'Priya Vadiveloo a/l Sasikumar Pereira',\r\n    custType: 'agent',\r\n    gender: 'f',\r\n    regDt: 'Aug 20 ,2021',\r\n    contactNum: '018-2241234',\r\n  },\r\n];\r\n\r\nexport default custRegList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport custRegList from './custRegList';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { AcceptButton, RejectButton } from '@/components/Button/ActionButton';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst CustReg = () => {\r\n  const { Text } = Typography;\r\n  const [custListFltr, setCustListFltr] = useState(custRegList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setCustListFltr(\r\n        custRegList.filter((cust) =>\r\n          searchParams.get('stat') !== null\r\n            ? cust.custType === searchParams.get('stat')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n  const custTabList = [\r\n    { key: 'all', tab: 'All' },\r\n    { key: 'agent', tab: 'Agent' },\r\n    { key: 'drpshpr', tab: 'Dropshipper' },\r\n  ];\r\n\r\n  const acceptBtn = (props: any) => <AcceptButton type='primary' />;\r\n\r\n  const rejectBtn = (props: any) => (\r\n    <RejectButton type='primary' />\r\n  );\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: acceptBtn,\r\n      key: 'accept',\r\n    },\r\n    {\r\n      element: rejectBtn,\r\n      key: 'reject',\r\n    },\r\n  ];\r\n\r\n  const custRegColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Registration ID',\r\n      dataIndex: 'regID',\r\n      key: 'regID',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (data: number) => (\r\n        <div className='text-button-wrapper'>\r\n          <Text strong className='text-button'>\r\n            #{data}\r\n          </Text>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Applicant',\r\n      dataIndex: 'applicant',\r\n      key: 'applicant',\r\n      sorter: true,\r\n      width: 300,\r\n    },\r\n    {\r\n      title: 'Register For',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      sorter: true,\r\n      width: 130,\r\n      render: (type: string) => (\r\n        <Text type='secondary'>\r\n          {type === 'agent'\r\n            ? 'Agent'\r\n            : type === 'drpshpr'\r\n            ? 'Dropshipper'\r\n            : null}\r\n        </Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Gender',\r\n      dataIndex: 'gender',\r\n      key: 'gender',\r\n      sorter: true,\r\n      width: 100,\r\n      render: (gender: string) => (\r\n        <Text type='secondary'>{gender === 'm' ? 'Male' : 'Female'}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Registration Date',\r\n      dataIndex: 'regDt',\r\n      key: 'regDt',\r\n      sorter: true,\r\n      width: 160,\r\n    },\r\n    {\r\n      title: 'Contact Number',\r\n      dataIndex: 'contactNum',\r\n      key: 'contactNum',\r\n      sorter: true,\r\n      width: 160,\r\n    },\r\n\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 120,\r\n      render: () => (\r\n        <Space direction='vertical' size={5}>\r\n          <AcceptButton type='link' />\r\n          <RejectButton type='link'/>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='cust-reg'>\r\n        <MainCard\r\n          tabList={custTabList}\r\n          activeTabKey={\r\n            searchParams.get('stat') === null ? 'all' : searchParams.get('stat')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { stat: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Customer List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('custAdd'))}\r\n                >\r\n                  Add Customer\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={custListFltr}\r\n              columns={custRegColumns}\r\n              buttons={onSelectBtn}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CustReg;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport UploadPicWall from '@components/Upload/UploadPicWall/UploadPicWall';\r\nimport AffixAdd from '@components/Affix/AffixAdd';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Anchor,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\nimport { MaskedInput } from 'antd-mask-input';\r\nimport profilePic from '@assets/avatar.png';\r\nimport { getStates, getCities, getPostcodes } from 'malaysia-postcodes';\r\nimport { sortByOrder } from '@utils/arrayUtils';\r\nimport {\r\n  custPositionCat,\r\n  custStatusCat,\r\n  genderCat,\r\n  maritalStatCat,\r\n  ynOptions,\r\n} from '@utils/optionUtils';\r\n\r\nconst CustAdd = () => {\r\n  const { Title } = Typography;\r\n  const { Option } = Select;\r\n  const { TextArea } = Input;\r\n  const { Link } = Anchor;\r\n  const [custForm] = Form.useForm();\r\n\r\n  const [state, setState] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [courtFlag, setCourtFlag] = useState(false);\r\n  const [criminalFlag, setCriminalFlag] = useState(false);\r\n  const [relativeFlag, setRelativeFlag] = useState(false);\r\n\r\n  const [fileList, setFileList]: any = useState([\r\n    {\r\n      uid: '-1',\r\n      name: 'image.png',\r\n      status: 'done',\r\n      url: profilePic,\r\n    },\r\n  ]);\r\n\r\n  const [targetOffset, setTargetOffset] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const anchorList = [\r\n    { link: 'basicInfo', title: 'Basic Information' },\r\n    { link: 'contactInfo', title: 'Contact Information' },\r\n    { link: 'address', title: 'Address' },\r\n    { link: 'employment', title: 'Employment Details' },\r\n    { link: 'position', title: 'Position' },\r\n    { link: 'declaration', title: 'Declaration Form' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTargetOffset(window.innerHeight / 1.5);\r\n  }, []);\r\n\r\n  return (\r\n    <Form name='custForm' layout='vertical' size='small' form={custForm}>\r\n      <Layout>\r\n        <Col xs={16} xl={19} className='center-flex'>\r\n          <MainCardContainer>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='basicInfo'>\r\n                  Basic Information\r\n                </Title>\r\n                <Form.Item\r\n                  label='Customer Name'\r\n                  name='custNm'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the customer name.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. Tan Yuan Jie'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Customer Photo'\r\n                  name='custImg'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please upload the customer photo.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <UploadPicWall\r\n                    fileList={fileList}\r\n                    onChange={(info) => {\r\n                      setFileList([...info.fileList]);\r\n                    }}\r\n                    maxCount={1}\r\n                    accept='.jpg'\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Gender'\r\n                  name='gender'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please select the customer gender.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={genderCat} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Birthdate'\r\n                  name='birthdate'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please select the customer birthdate.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker style={{ width: '40%' }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Marital Status' name='maritalStat'>\r\n                  <Radio.Group options={maritalStatCat} />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='contactInfo'>\r\n                  Contact Information\r\n                </Title>\r\n                <div>\r\n                  <Space direction='vertical' size={15} className='full-width'>\r\n                    <Form.Item\r\n                      label='Phone Number'\r\n                      name='phoneNum'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter the customer's phone number.\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <MaskedInput\r\n                        prefix='(+60)'\r\n                        mask='11-111 1111'\r\n                        placeholderChar=' '\r\n                        placeholder='12-345 6789'\r\n                        style={{ width: '20%' }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      label='Email Address'\r\n                      name='email'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter the customer's email address.\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type='email'\r\n                        placeholder='e.g. xxxxx@gmail.com'\r\n                        style={{ width: '40%' }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Space>\r\n                  <Divider />\r\n                  <Space direction='vertical' size={15} className='full-width'>\r\n                    <Title level={5}>Emergency Contact</Title>\r\n\r\n                    <Form.Item\r\n                      label='Name'\r\n                      name='emerg'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message:\r\n                            'Please enter the name of the emergency contact.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        placeholder='e.g. Loo Phaik Cheng'\r\n                        style={{ width: '40%' }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      label='Relationship'\r\n                      name='relationship'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message:\r\n                            'Please justify the relationship with the emergency contact.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        placeholder='e.g. Mother'\r\n                        style={{ width: '40%' }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      label='Contact Number'\r\n                      name='emrgContact'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message:\r\n                            'Please provide the contact number of the emergency contact.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <MaskedInput\r\n                        prefix='(+60)'\r\n                        mask='11-111 1111'\r\n                        placeholderChar=' '\r\n                        placeholder='12-345 6789'\r\n                        style={{ width: '20%' }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Space>\r\n                </div>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='address'>\r\n                  Address\r\n                </Title>\r\n\r\n                <Form.Item\r\n                  label='State'\r\n                  name='state'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's state.\",\r\n                    },\r\n                  ]}\r\n                  style={{ width: '25%' }}\r\n                >\r\n                  <Select\r\n                    placeholder='Please select the state'\r\n                    onChange={(value: string) => {\r\n                      setState(value);\r\n                      custForm.resetFields(['city', 'postcode']);\r\n                      setCity('');\r\n                    }}\r\n                  >\r\n                    {sortByOrder(getStates()).map((state: string) => (\r\n                      <Option key={state}>{state}</Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='City'\r\n                  name='city'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's city.\",\r\n                    },\r\n                  ]}\r\n                  style={{ width: '25%' }}\r\n                >\r\n                  <Select\r\n                    placeholder='Please select the city'\r\n                    disabled={!state}\r\n                    onChange={(value: string) => {\r\n                      setCity(value);\r\n                      custForm.resetFields(['postcode']);\r\n                    }}\r\n                  >\r\n                    {sortByOrder(getCities(state)).map((city: string) => (\r\n                      <Option key={city}>{city}</Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Postal Code'\r\n                  name='postcode'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's postal code.\",\r\n                    },\r\n                  ]}\r\n                  style={{ width: '25%' }}\r\n                >\r\n                  <Select\r\n                    placeholder='Please select the postal code'\r\n                    disabled={!state || !city}\r\n                  >\r\n                    {sortByOrder(getPostcodes(state, city)).map(\r\n                      (postcode: string) => (\r\n                        <Option value={postcode} key={postcode}>\r\n                          {postcode}\r\n                        </Option>\r\n                      )\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Address'\r\n                  name='address'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter the customer's address.\",\r\n                    },\r\n                  ]}\r\n                  style={{ width: '60%' }}\r\n                >\r\n                  <TextArea\r\n                    rows={4}\r\n                    placeholder=\"Please enter customer's address\"\r\n                    showCount\r\n                    maxLength={128}\r\n                    autoSize={{ minRows: 4, maxRows: 12 }}\r\n                  />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='employment'>\r\n                  Employment Details\r\n                </Title>\r\n                <Form.Item\r\n                  label='Current Occupation'\r\n                  name='occupation'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Please enter the customer's current occupation.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. Marketing Manager'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item label='Company Name' name='company'>\r\n                  <Input\r\n                    placeholder='e.g. SHRF Food Industries Sdn Bhd'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='position'>\r\n                  Position\r\n                </Title>\r\n                <Form.Item\r\n                  label=\"Customer's Position\"\r\n                  name='position'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's position.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={custPositionCat} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Status'\r\n                  name='status'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select the customer's status.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={custStatusCat} />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='declaration'>\r\n                  Declaration Form\r\n                </Title>\r\n                <Form.Item\r\n                  label='Has the customer been declared bankrupt? '\r\n                  name='bankrupt'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group options={ynOptions} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Has the customer been charged in court?'\r\n                  name='court'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group\r\n                    options={ynOptions}\r\n                    onChange={(e: any) => setCourtFlag(e.target.value)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Please include any guilty pleas or convictions based on the plea bargain or pretrial diversion program:'\r\n                  name='courtDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                  style={{ marginLeft: 10, width: '60%' }}\r\n                  hidden={!courtFlag}\r\n                >\r\n                  <TextArea\r\n                    rows={4}\r\n                    showCount\r\n                    maxLength={128}\r\n                    autoSize={{ minRows: 4, maxRows: 12 }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Do the customer has any criminal record or any pending criminal case?'\r\n                  name='criminal'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group\r\n                    options={ynOptions}\r\n                    onChange={(e: any) => setCriminalFlag(e.target.value)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Please explain:'\r\n                  name='criminalDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                  style={{ marginLeft: 10, width: '60%' }}\r\n                  hidden={!criminalFlag}\r\n                >\r\n                  <TextArea\r\n                    rows={4}\r\n                    showCount\r\n                    maxLength={128}\r\n                    autoSize={{ minRows: 4, maxRows: 12 }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Are any relatives or family members of the customer currently employed as the agent or drop-shipper in Sharifah Food?'\r\n                  name='relative'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group\r\n                    options={ynOptions}\r\n                    onChange={(e: any) => setRelativeFlag(e.target.value)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Please specify the name(s) of relative(s) or family member(s):'\r\n                  name='relativeDesc'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please answer the above question.',\r\n                    },\r\n                  ]}\r\n                  style={{ marginLeft: 10, width: '60%' }}\r\n                  hidden={!relativeFlag}\r\n                >\r\n                  <TextArea\r\n                    rows={4}\r\n                    showCount\r\n                    maxLength={128}\r\n                    autoSize={{ minRows: 4, maxRows: 12 }}\r\n                  />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n            <AffixAdd offsetBottom={0} label='Customer' />\r\n          </MainCardContainer>\r\n        </Col>\r\n        <Col xs={8} xl={5}>\r\n          <Anchor offsetTop={150} targetOffset={targetOffset}>\r\n            {anchorList.map((anchor) => (\r\n              <Link\r\n                key={anchor.link}\r\n                href={`#${anchor.link}`}\r\n                title={anchor.title}\r\n              />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Layout>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CustAdd;\r\n","import { Col, Row, DatePicker, DatePickerProps } from 'antd';\r\nimport { MdChevronRight } from 'react-icons/md';\r\nimport './MenuDatePicker.less';\r\n\r\ntype MenuDatePickerProps = DatePickerProps & {\r\n  label: string;\r\n};\r\n\r\nconst MenuDatePicker = ({\r\n  label,\r\n  className,\r\n  ...props\r\n}: MenuDatePickerProps) => (\r\n  <Row align='middle' justify='space-between'>\r\n    <Col span={20}>{label}</Col>\r\n    <Col className='center-flex'>\r\n      <MdChevronRight size={20} className='color-grey' />\r\n    </Col>\r\n    <DatePicker\r\n      bordered={false}\r\n      allowClear={false}\r\n      inputReadOnly\r\n      style={{ height: 0, width: 0, padding: 0 }}\r\n      className={`menu-date-picker${\r\n        className !== undefined ? ` ${className}` : ''\r\n      }`}\r\n      {...props}\r\n    />\r\n  </Row>\r\n);\r\n\r\nexport default MenuDatePicker;\r\n","import React, { useState } from 'react';\r\nimport Button from '@components/Button';\r\nimport { Card, Col, Dropdown, Menu, MenuProps, Row } from 'antd';\r\nimport moment from 'moment';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport { HiOutlineCalendar } from 'react-icons/hi';\r\nimport MenuDatePicker from '../MenuDatePicker';\r\nimport {\r\n  getDt,\r\n  getPastDays,\r\n  getPrevDt,\r\n  validateDay,\r\n  validateWeek,\r\n  validateMonth,\r\n  validateYear,\r\n  validateDropdownDate,\r\n  getMomentPrevDt,\r\n} from '@utils/dateUtils';\r\nimport Popover from '@/components/Popover';\r\n\r\nexport interface DateInfo {\r\n  date: string;\r\n  label: string;\r\n  cat: string;\r\n}\r\n\r\nexport interface DropdownDateProps extends Omit<MenuProps, 'onChange'> {\r\n  onChange?: (dateInfo: DateInfo) => void;\r\n}\r\n\r\nconst DropdownDate = ({\r\n  onChange = () => '',\r\n  className,\r\n  style,\r\n  ...props\r\n}: DropdownDateProps) => {\r\n  const [date, setDate] = useState(getDt());\r\n  const [label, setLabel] = useState('Today');\r\n  const [dropdownOnBlur, setDropdownOnBlur] = useState(true);\r\n  const [cat, setCat] = useState('tdy');\r\n  const [itemHovered, setItemHovered] = useState(false);\r\n  const [dropdownVisible, setDropdownVisible] = useState(false);\r\n  const [todayPopover, setTodayPopover] = useState(false);\r\n  const [ytdPopover, setYtdPopover] = useState(false);\r\n  const [past7dPopover, setpast7dPopover] = useState(false);\r\n  const [past30dPopover, setpast30dPopover] = useState(false);\r\n  const [dayPicker, setDayPicker] = useState({ ind: false, defVal: moment() });\r\n  const [weekPicker, setWeekPicker] = useState({ ind: false, defVal: null });\r\n  const [mthPicker, setMthPicker] = useState({ ind: false, defVal: null });\r\n  const [yrPicker, setYrPicker] = useState({ ind: false, defVal: null });\r\n  const [disableNext, setDisableNext] = useState(true);\r\n\r\n  const pickerKeys = ['byDay', 'byWeek', 'byMonth', 'byYear'];\r\n\r\n  const getKey = (date, cat) =>\r\n    pickerKeys.includes(cat) ? cat : `${cat}/${date}`;\r\n\r\n  const validateDefOpen = (key: string) =>\r\n    getKey(date, cat).includes(key) && dropdownVisible && !itemHovered;\r\n\r\n  const setNewDt = (dateInfo: DateInfo & { disabledNext?: boolean }) => {\r\n    setDate(dateInfo.date);\r\n    setLabel(dateInfo.label);\r\n    setCat(dateInfo.cat);\r\n    setDisableNext(dateInfo.disabledNext);\r\n    onChange({\r\n      date: dateInfo.date,\r\n      label: dateInfo.label,\r\n      cat: dateInfo.cat,\r\n    });\r\n  };\r\n\r\n  const hideAllPickers = () => {\r\n    setDayPicker({ ind: false, defVal: dayPicker.defVal });\r\n    setWeekPicker({ ind: false, defVal: weekPicker.defVal });\r\n    setMthPicker({ ind: false, defVal: mthPicker.defVal });\r\n    setYrPicker({ ind: false, defVal: yrPicker.defVal });\r\n  };\r\n\r\n  const setPicker = (picker: 'day' | 'week' | 'month' | 'year', value) => {\r\n    if (picker === 'day') {\r\n      setDayPicker({ ind: false, defVal: value });\r\n      setWeekPicker({ ind: weekPicker.ind, defVal: null });\r\n      setMthPicker({ ind: mthPicker.ind, defVal: null });\r\n      setYrPicker({ ind: yrPicker.ind, defVal: null });\r\n    } else if (picker === 'week') {\r\n      setDayPicker({ ind: dayPicker.ind, defVal: null });\r\n      setWeekPicker({ ind: false, defVal: value });\r\n      setMthPicker({ ind: mthPicker.ind, defVal: null });\r\n      setYrPicker({ ind: yrPicker.ind, defVal: null });\r\n    } else if (picker === 'month') {\r\n      setDayPicker({ ind: dayPicker.ind, defVal: null });\r\n      setWeekPicker({ ind: weekPicker.ind, defVal: null });\r\n      setMthPicker({ ind: false, defVal: value });\r\n      setYrPicker({ ind: yrPicker.ind, defVal: null });\r\n    } else if (picker === 'year') {\r\n      setDayPicker({ ind: dayPicker.ind, defVal: null });\r\n      setWeekPicker({ ind: weekPicker.ind, defVal: null });\r\n      setMthPicker({ ind: mthPicker.ind, defVal: null });\r\n      setYrPicker({ ind: false, defVal: value });\r\n    }\r\n  };\r\n\r\n  const handlePickerChange = (\r\n    dateInfo: DateInfo & { disabledNext: boolean },\r\n    picker: 'day' | 'week' | 'month' | 'year',\r\n    value: moment.Moment\r\n  ) => {\r\n    setNewDt(dateInfo);\r\n    setDropdownVisible(false);\r\n    setPicker(picker, value);\r\n  };\r\n\r\n  const addDate = () => {\r\n    handleDateFunc('next');\r\n  };\r\n\r\n  const subtractDate = () => {\r\n    handleDateFunc('previous');\r\n  };\r\n\r\n  const handleDateFunc = (func: 'next' | 'previous') => {\r\n    let dateInfo =\r\n      func === 'next'\r\n        ? validateDropdownDate(date, cat, 'DD-MM-YYYY', undefined, 'next')\r\n        : validateDropdownDate(date, cat, 'DD-MM-YYYY', undefined, 'previous');\r\n    setNewDt(dateInfo);\r\n  };\r\n\r\n  const hideNxtPrevBtn = new RegExp(/^past\\d*d$/).test(cat);\r\n\r\n  const dateLabelMapper = [\r\n    { cat: 'tdy', label: 'Today' },\r\n    { cat: 'ytd', label: 'Yesterday' },\r\n    { cat: 'past7d', label: 'Past 7 Days' },\r\n    { cat: 'past30d', label: 'Past 30 Days' },\r\n  ];\r\n\r\n  const DateMenu = (\r\n    <Menu\r\n      onClick={(item) => {\r\n        let [newDtCat, newDt] = item.key.split('/');\r\n        if (!pickerKeys.includes(item.key)) {\r\n          setNewDt(validateDropdownDate(newDt, newDtCat, 'DD-MM-YYYY'));\r\n          setDropdownVisible(false);\r\n          setDayPicker({ ind: dayPicker.ind, defVal: null });\r\n          setWeekPicker({ ind: weekPicker.ind, defVal: null });\r\n          setMthPicker({ ind: mthPicker.ind, defVal: null });\r\n          setYrPicker({ ind: yrPicker.ind, defVal: null });\r\n        }\r\n      }}\r\n      onMouseOver={() => setDropdownOnBlur(false)}\r\n      onMouseLeave={() => setDropdownOnBlur(true)}\r\n      selectedKeys={[getKey(date, cat)]}\r\n      style={{ width: 150 }}\r\n      {...props}\r\n    >\r\n      <Menu.Item\r\n        key={`tdy/${getDt()}`}\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setTodayPopover(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setTodayPopover(false);\r\n        }}\r\n      >\r\n        <Popover\r\n          visible={todayPopover || validateDefOpen(`tdy/${getDt()}`)}\r\n          key={getDt()}\r\n          content={getDt()}\r\n          placement='right'\r\n          align={{\r\n            points: ['cc', 'cr'],\r\n            offset: [160, 0],\r\n          }}\r\n        >\r\n          {dateLabelMapper.find((mapper) => mapper.cat === 'tdy').label}\r\n        </Popover>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key={`ytd/${getPrevDt()}`}\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setYtdPopover(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setYtdPopover(false);\r\n        }}\r\n      >\r\n        <Popover\r\n          visible={ytdPopover || validateDefOpen(`ytd/${getPrevDt()}`)}\r\n          content={getPrevDt()}\r\n          placement='right'\r\n          align={{\r\n            points: ['cc', 'cr'],\r\n            offset: [140, 0],\r\n          }}\r\n        >\r\n          {dateLabelMapper.find((mapper) => mapper.cat === 'ytd').label}\r\n        </Popover>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key={`past7d/${getPastDays(7)}`}\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setpast7dPopover(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setpast7dPopover(false);\r\n        }}\r\n      >\r\n        <Popover\r\n          visible={past7dPopover || validateDefOpen(`past7d/${getPastDays(7)}`)}\r\n          content={getPastDays(7)}\r\n          placement='right'\r\n          align={{\r\n            points: ['cc', 'cr'],\r\n            offset: [173, 0],\r\n          }}\r\n        >\r\n          {dateLabelMapper.find((mapper) => mapper.cat === 'past7d').label}\r\n        </Popover>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key={`past30d/${getPastDays(30)}`}\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setpast30dPopover(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setpast30dPopover(false);\r\n        }}\r\n      >\r\n        <Popover\r\n          visible={\r\n            past30dPopover || validateDefOpen(`past30d/${getPastDays(30)}`)\r\n          }\r\n          content={getPastDays(30)}\r\n          placement='right'\r\n          align={{\r\n            points: ['cc', 'cr'],\r\n            offset: [166, 0],\r\n          }}\r\n        >\r\n          {dateLabelMapper.find((mapper) => mapper.cat === 'past30d').label}\r\n        </Popover>\r\n      </Menu.Item>\r\n\r\n      <Menu.Divider />\r\n\r\n      <Menu.Item\r\n        key='byDay'\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setDayPicker({ ind: true, defVal: dayPicker.defVal });\r\n        }}\r\n      >\r\n        <MenuDatePicker\r\n          label='By Day'\r\n          open={dayPicker.ind || validateDefOpen('byDay')}\r\n          showToday={false}\r\n          value={dayPicker.defVal !== null && dayPicker.defVal}\r\n          disabledDate={(current) => current > moment()}\r\n          onChange={(value) => {\r\n            handlePickerChange(validateDay(value, 'byDay'), 'day', value);\r\n          }}\r\n          dropdownAlign={{\r\n            points: ['cc', 'cr'],\r\n            offset: [285, -30],\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key='byWeek'\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setWeekPicker({ ind: true, defVal: weekPicker.defVal });\r\n        }}\r\n      >\r\n        <MenuDatePicker\r\n          label='By Week'\r\n          picker='week'\r\n          open={weekPicker.ind || validateDefOpen('byWeek')}\r\n          value={weekPicker.defVal !== null && weekPicker.defVal}\r\n          disabledDate={(current) => current > getMomentPrevDt()}\r\n          onChange={(value) => {\r\n            handlePickerChange(validateWeek(value, 'byWeek'), 'week', value);\r\n          }}\r\n          dropdownAlign={{\r\n            points: ['cc', 'cr'],\r\n            offset: [285, -64],\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        key='byMonth'\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setMthPicker({ ind: true, defVal: mthPicker.defVal });\r\n        }}\r\n      >\r\n        <MenuDatePicker\r\n          label='By Month'\r\n          picker='month'\r\n          open={mthPicker.ind || validateDefOpen('byMonth')}\r\n          value={mthPicker.defVal !== null && mthPicker.defVal}\r\n          disabledDate={(current) => current > moment()}\r\n          onChange={(value) => {\r\n            handlePickerChange(validateMonth(value, 'byMonth'), 'month', value);\r\n          }}\r\n          dropdownAlign={{\r\n            points: ['cc', 'cr'],\r\n            offset: [285, -95],\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key='byYear'\r\n        onMouseOver={() => {\r\n          hideAllPickers();\r\n          setItemHovered(true);\r\n          setYrPicker({ ind: true, defVal: yrPicker.defVal });\r\n        }}\r\n      >\r\n        <MenuDatePicker\r\n          label='By Year'\r\n          picker='year'\r\n          open={yrPicker.ind || validateDefOpen('byYear')}\r\n          value={yrPicker.defVal !== null && yrPicker.defVal}\r\n          disabledDate={(current) => current > moment()}\r\n          onChange={(value) => {\r\n            handlePickerChange(validateYear(value, 'byYear'), 'year', value);\r\n          }}\r\n          dropdownAlign={{\r\n            points: ['cc', 'cr'],\r\n            offset: [285, -125],\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      bodyStyle={{ padding: 5, textAlign: 'center' }}\r\n      style={style}\r\n      className={className}\r\n    >\r\n      <Row justify='center' align='middle'>\r\n        <Col>\r\n          <Button\r\n            type='text'\r\n            style={{ background: 'none' }}\r\n            className='center-flex'\r\n            icon={<MdChevronLeft size={25} />}\r\n            onClick={subtractDate}\r\n            hidden={hideNxtPrevBtn}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Dropdown\r\n            visible={dropdownVisible}\r\n            overlay={DateMenu}\r\n            placement='bottomCenter'\r\n          >\r\n            <Button\r\n              type='text'\r\n              icon={<HiOutlineCalendar size={20} style={{ marginRight: 5 }} />}\r\n              style={{ background: 'none' }}\r\n              className='center-flex'\r\n              onBlur={() => {\r\n                if (dropdownOnBlur === true) {\r\n                  setDropdownVisible(false);\r\n                  hideAllPickers();\r\n                }\r\n              }}\r\n              onClick={() => {\r\n                dropdownVisible === false\r\n                  ? setDropdownVisible(true)\r\n                  : setDropdownVisible(false);\r\n                setItemHovered(false);\r\n              }}\r\n            >\r\n              {`${label} (${date})`}\r\n            </Button>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            type='text'\r\n            style={{ background: 'none' }}\r\n            className='center-flex'\r\n            icon={<MdChevronRight size={25} />}\r\n            onClick={addDate}\r\n            disabled={disableNext}\r\n            hidden={hideNxtPrevBtn}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DropdownDate;\r\n","import moment from 'moment';\r\n\r\nconst statisticsData: any = {\r\n  date: moment().format('DD MMMM YYYY'),\r\n  sales: 830,\r\n  profit: 500,\r\n  visitors: 20,\r\n  newCust: 2,\r\n  newOrder: 10,\r\n};\r\n\r\nexport default statisticsData;\r\n","const keyMetricsList: {\r\n  key: string;\r\n  label: string;\r\n  desc: string;\r\n  cat?: 'money' | 'percent';\r\n  toFixed?: number;\r\n}[] = [\r\n  {\r\n    key: 'sales',\r\n    label: 'Sales',\r\n    desc: 'Total value of placed orders over the selected time period, including the cancelled orders.',\r\n    cat: 'money',\r\n    toFixed: 2,\r\n  },\r\n  {\r\n    key: 'revenue',\r\n    label: 'Revenue',\r\n    desc: '',\r\n    cat: 'money',\r\n    toFixed: 2,\r\n  },\r\n  { key: 'orders', label: 'Orders', desc: '' },\r\n  { key: 'visitors', label: 'Visitors', desc: '' },\r\n  { key: 'buyers', label: 'Buyers', desc: '' },\r\n  {\r\n    key: 'conversionRt',\r\n    label: 'Conversion Rate',\r\n    cat: 'percent',\r\n    desc: '',\r\n  },\r\n  {\r\n    key: 'salesPerOrder',\r\n    label: 'Sales per Order',\r\n    cat: 'money',\r\n    desc: 'Average value of a single placed order over selected time period. Total sales divided by the total number of orders.',\r\n    toFixed: 2,\r\n  },\r\n  {\r\n    key: 'avgOrderRev',\r\n    label: 'Average Order Revenue',\r\n    cat: 'money',\r\n    desc: '',\r\n    toFixed: 2,\r\n  },\r\n  { key: 'unitSold', label: 'Unit Sold', desc: '' },\r\n  { key: 'avgBktSize', label: 'Average Basket Size', desc: '' },\r\n];\r\n\r\nexport default keyMetricsList;\r\n","  const topProduct: {\r\n  date: string;\r\n  type: 'sales' | 'units';\r\n  items: {\r\n    label: string;\r\n    cat?: string;\r\n    value: number;\r\n  }[];\r\n} = {\r\n  date: '2021 August',\r\n  type: 'sales',\r\n  items: [\r\n    {\r\n      label: 'Kari Ayam',\r\n      cat: 'Ready-To-Eat',\r\n      value: 80,\r\n    },\r\n    {\r\n      label: 'Sambal Ikan Bilis',\r\n      cat: 'Ready-To-Eat',\r\n      value: 54,\r\n    },\r\n    {\r\n      label: 'Nasi Briyani Bukhari',\r\n      cat: 'Ready-To-Cook',\r\n      value: 47,\r\n    },\r\n    {\r\n      label: 'Rendang Dendeng Daging',\r\n      cat: 'Ready-To-Eat',\r\n      value: 53,\r\n    },\r\n    {\r\n      label: 'Pes Sambal Tumis',\r\n      cat: 'Paste',\r\n      value: 38,\r\n    },\r\n    {\r\n      label: 'Pes Masakan Kerutuk',\r\n      cat: 'Paste',\r\n      value: 22,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default topProduct;\r\n","import React, { useEffect, useState, lazy, Suspense } from 'react';\r\nimport ColorCard from '@components/Card/ColorCard';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport DropdownDate from '@components/Input/DropdownDate';\r\nimport Layout from '@components/Layout';\r\nimport Statistics from '@components/Statistics';\r\nimport statisticsList from '@components/Statistics/statisticsList';\r\nimport { Col, Row, Space, Spin, Typography, message, Checkbox } from 'antd';\r\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport statisticsData from './statisticsData';\r\nimport { formatDt, getDt } from '@utils/dateUtils';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport keyMetricsList from './keyMetricsList';\r\nimport { splitIntoChunks } from '@utils/arrayUtils';\r\nimport { moneyFormatter, percentFormatter } from '@utils/numUtils';\r\nimport RankingList from '@components/List/RankingList';\r\nimport topProduct from './topProducts';\r\nimport { prodCat } from '@utils/optionUtils';\r\nimport Popover from '@/components/Popover';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst LineChart = lazy(() => import('@components/Chart/LineChart'));\r\nconst CarouselArrow = lazy(() => import('@components/Carousel/CarouselArrow'));\r\n\r\nconst BusinessStatistics = () => {\r\n  message.config({ duration: 2 });\r\n  const { Text, Title } = Typography;\r\n\r\n  const DashboardContainer = (props) => (\r\n    <Space direction='vertical' size={25} className='full-width'>\r\n      {props.children}\r\n    </Space>\r\n  );\r\n\r\n  const StatisticsDashboard = (props) => {\r\n    const [statisticsDtInfo, setStatisticsDtInfo] = useState({\r\n      date: getDt(),\r\n      label: 'Today',\r\n      cat: 'tdy',\r\n    });\r\n    const [statisticsTdy, setStatisticsTdy] = useState(\r\n      getDt(undefined, undefined, 'HH:mm:ss')\r\n    );\r\n\r\n    useEffect(() => {\r\n      const updateStatistics = setInterval(\r\n        () => setStatisticsTdy(getDt(undefined, undefined, 'HH:mm:ss')),\r\n        600000\r\n      );\r\n      return () => {\r\n        clearInterval(updateStatistics);\r\n      };\r\n    });\r\n\r\n    return (\r\n      <DashboardContainer>\r\n        <DropdownDate\r\n          onChange={(dateInfo) => {\r\n            setStatisticsDtInfo(dateInfo);\r\n          }}\r\n          className='main-card'\r\n        />\r\n        <Row justify='center' gutter={[20, 20]}>\r\n          {statisticsList.map((statistics, index) => (\r\n            <Col key={`col-${statistics.key}`} flex='20%'>\r\n              <MainCard bodyStyle={{ padding: 15 }} style={{ height: 105 }}>\r\n                <Statistics\r\n                  key={statistics.key}\r\n                  value={statisticsData[statistics.key]}\r\n                  title={statistics.title}\r\n                  date={statisticsDtInfo.date}\r\n                  untilTm={\r\n                    statisticsDtInfo.cat === 'tdy'\r\n                      ? `Until ${statisticsTdy}`\r\n                      : ''\r\n                  }\r\n                  icon={statistics.icon}\r\n                  color={statistics.color}\r\n                  prefix={statistics.prefix}\r\n                  suffix={statistics.suffix}\r\n                  toFixed={statistics.toFixed}\r\n                  space={15}\r\n                  valueSize={16}\r\n                  avatarSize={55}\r\n                />\r\n              </MainCard>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </DashboardContainer>\r\n    );\r\n  };\r\n\r\n  const KeyMetricsDashboard = (props) => {\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n\r\n    const [keyMetricsDtInfo, setKeyMetricsDtInfo] = useState({\r\n      date: getDt(),\r\n      label: 'Today',\r\n      cat: 'tdy',\r\n    });\r\n    const [selectedKeyMetrics, setSelectedKeyMetrics] = useState(['Sales']);\r\n\r\n    const minSelectedMetrics = 1;\r\n    const [maxSelectedMetrics, setMaxSelectedMetrics] = useState(5);\r\n\r\n    const handleKeyMetricsClick = (keyMetrics) => {\r\n      if (maxSelectedMetrics === 1) {\r\n        setSelectedKeyMetrics([keyMetrics.label]);\r\n        return;\r\n      }\r\n\r\n      if (\r\n        selectedKeyMetrics.length === minSelectedMetrics &&\r\n        selectedKeyMetrics.includes(keyMetrics.label)\r\n      ) {\r\n        messageApi.open({\r\n          key: 'minSelectedMetrics',\r\n          type: 'warning',\r\n          content: (\r\n            <span>\r\n              You should select at least <strong>{minSelectedMetrics}</strong>{' '}\r\n              Key Metrics.\r\n            </span>\r\n          ),\r\n        });\r\n        setTimeout(() => message.destroy('minSelectedMetrics'), 2000);\r\n        return;\r\n      }\r\n\r\n      if (\r\n        selectedKeyMetrics.length >= maxSelectedMetrics &&\r\n        !selectedKeyMetrics.includes(keyMetrics.label)\r\n      ) {\r\n        messageApi.open({\r\n          key: 'maxSelectedMetrics',\r\n          type: 'warning',\r\n          content: (\r\n            <span>\r\n              You can only select up to <strong>{maxSelectedMetrics}</strong>{' '}\r\n              Key Metrics.\r\n            </span>\r\n          ),\r\n        });\r\n\r\n        setTimeout(() => message.destroy('maxSelectedMetrics'), 2000);\r\n\r\n        return;\r\n      }\r\n      !selectedKeyMetrics.includes(keyMetrics.label)\r\n        ? setSelectedKeyMetrics([...selectedKeyMetrics, keyMetrics.label])\r\n        : setSelectedKeyMetrics([\r\n            ...selectedKeyMetrics.filter(\r\n              (selected) => selected !== keyMetrics.label\r\n            ),\r\n          ]);\r\n    };\r\n\r\n    const data = [\r\n      { Day: '1', Sales: 300, cat: '1' },\r\n      { Day: '2', Sales: 356, cat: '1' },\r\n      { Day: '3', Sales: 481, cat: '1' },\r\n      { Day: '4', Sales: 237, cat: '1' },\r\n      { Day: '5', Sales: 285, cat: '1' },\r\n      { Day: '6', Sales: 300, cat: '1' },\r\n      { Day: '1', Sales: 107, cat: '2' },\r\n      { Day: '2', Sales: 402, cat: '2' },\r\n      { Day: '3', Sales: 266, cat: '2' },\r\n      { Day: '4', Sales: 470, cat: '2' },\r\n      { Day: '5', Sales: 391, cat: '2' },\r\n      { Day: '6', Sales: 379, cat: '2' },\r\n      { Day: '7', Sales: 107, cat: '2' },\r\n      { Day: '8', Sales: 402, cat: '2' },\r\n      { Day: '9', Sales: 266, cat: '2' },\r\n      { Day: '10', Sales: 470, cat: '2' },\r\n      { Day: '11', Sales: 391, cat: '2' },\r\n      { Day: '12', Sales: 379, cat: '2' },\r\n      { Day: '13', Sales: 418, cat: '3' },\r\n      { Day: '14', Sales: 301, cat: '3' },\r\n      { Day: '15', Sales: 317, cat: '3' },\r\n      { Day: '16', Sales: 30, cat: '3' },\r\n      { Day: '17', Sales: 391, cat: '3' },\r\n      { Day: '18', Sales: 106, cat: '3' },\r\n      { Day: '19', Sales: 465, cat: '4' },\r\n      { Day: '20', Sales: 50, cat: '4' },\r\n      { Day: '21', Sales: 321, cat: '4' },\r\n      { Day: '22', Sales: 279, cat: '4' },\r\n      { Day: '23', Sales: 186, cat: '4' },\r\n      { Day: '24', Sales: 500, cat: '4' },\r\n      { Day: '25', Sales: 223, cat: '5' },\r\n      { Day: '26', Sales: 447, cat: '5' },\r\n      { Day: '27', Sales: 70, cat: '5' },\r\n      { Day: '28', Sales: 58, cat: '5' },\r\n      { Day: '29', Sales: 400, cat: '5' },\r\n      { Day: '30', Sales: 600, cat: '5' },\r\n    ];\r\n\r\n    const keyMetricsValList = [\r\n      { key: 'sales', value: 600 },\r\n      { key: 'revenue', value: 324.5 },\r\n      { key: 'conversionRt', value: 0.2949 },\r\n      { key: 'salesPerOrder', value: 40.0 },\r\n      { key: 'visitors', value: 78 },\r\n      { key: 'buyers', value: 32 },\r\n      { key: 'orders', value: 16 },\r\n      { key: 'avgOrderRev', value: 20.25 },\r\n      { key: 'unitSold', value: 42 },\r\n      { key: 'avgBktSize', value: 2.625 },\r\n    ];\r\n\r\n    const getKeyMetricsVal = (keyMetrics) => {\r\n      let value = keyMetricsValList.find(\r\n        (metrics) => metrics.key === keyMetrics.key\r\n      ).value;\r\n\r\n      return keyMetrics.cat === 'money'\r\n        ? moneyFormatter(value, true)\r\n        : keyMetrics.cat === 'percent'\r\n        ? percentFormatter(value, true)\r\n        : value;\r\n    };\r\n\r\n    return (\r\n      <DashboardContainer>\r\n        {contextHolder}\r\n        <DropdownDate\r\n          onChange={(dateInfo) => {\r\n            setKeyMetricsDtInfo(dateInfo);\r\n          }}\r\n          className='main-card'\r\n        />\r\n        <MainCard>\r\n          <DashboardContainer>\r\n            <Row justify='space-between' align='middle'>\r\n              <Col>\r\n                <BoldTitle level={5}>Key Metrics</BoldTitle>\r\n                <Text className='dashboard-grey-text'>\r\n                  {formatDt(\r\n                    keyMetricsDtInfo.date,\r\n                    keyMetricsDtInfo.cat,\r\n                    'DD-MM-YYYY',\r\n                    'MMM DD, YYYY'\r\n                  )}\r\n                </Text>\r\n              </Col>\r\n              <Col>\r\n                <Button type='primary'>Generate Report(s)</Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <CarouselArrow>\r\n              {splitIntoChunks(keyMetricsList, 5).map((chunks, index) => (\r\n                <div key={`keyMetricsChunk-${index}`}>\r\n                  <Row gutter={10}>\r\n                    {chunks.map((keyMetrics) => (\r\n                      <Col key={keyMetrics.key} flex='20%'>\r\n                        <ColorCard\r\n                          backgroundColor={\r\n                            !selectedKeyMetrics.includes(keyMetrics.label)\r\n                              ? 'grey'\r\n                              : 'success'\r\n                          }\r\n                          hover='success'\r\n                          label={\r\n                            <Popover content={keyMetrics.desc}>\r\n                              <Text>{keyMetrics.label}</Text>\r\n                              <QuestionCircleOutlined\r\n                                style={{ padding: '0 5px' }}\r\n                                className='color-grey'\r\n                              />\r\n                            </Popover>\r\n                          }\r\n                          indicator={\r\n                            selectedKeyMetrics.includes(keyMetrics.label)\r\n                              ? 'true'\r\n                              : null\r\n                          }\r\n                          bodyStyle={{ padding: 15 }}\r\n                          onClick={() => handleKeyMetricsClick(keyMetrics)}\r\n                        >\r\n                          <Row gutter={5} style={{ height: 40 }}>\r\n                            <Col>\r\n                              {keyMetrics.cat === 'money' && (\r\n                                <Text strong>RM</Text>\r\n                              )}\r\n                            </Col>\r\n                            <Col>\r\n                              <Title level={4}>\r\n                                {getKeyMetricsVal(keyMetrics)}\r\n                              </Title>\r\n                            </Col>\r\n                            <Col>\r\n                              {keyMetrics.cat === 'percent' && (\r\n                                <Text strong>%</Text>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                        </ColorCard>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n              ))}\r\n            </CarouselArrow>\r\n            <Row justify='space-between' align='middle' gutter={10}>\r\n              <Col>\r\n                <Checkbox\r\n                  className='color-grey'\r\n                  defaultChecked\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setMaxSelectedMetrics(5);\r\n                    } else {\r\n                      setMaxSelectedMetrics(1);\r\n                      setSelectedKeyMetrics([selectedKeyMetrics[0]]);\r\n                    }\r\n                  }}\r\n                >\r\n                  Stack Metrics\r\n                </Checkbox>\r\n              </Col>\r\n              <Col>\r\n                <Space>\r\n                  <Text type='secondary' className='text-sm'>\r\n                    Metrics Selected: {selectedKeyMetrics.length}/\r\n                    {maxSelectedMetrics}\r\n                  </Text>\r\n                  <Button\r\n                    type='link'\r\n                    color='info'\r\n                    style={{ fontSize: 12 }}\r\n                    onClick={() => setSelectedKeyMetrics(['Sales'])}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Space>\r\n              </Col>\r\n            </Row>\r\n            <Suspense\r\n              fallback={\r\n                <div\r\n                  className='center-flex'\r\n                  style={{ width: 1176, height: 400 }}\r\n                >\r\n                  <Spin\r\n                    indicator={\r\n                      <LoadingOutlined style={{ fontSize: 30 }} spin />\r\n                    }\r\n                  />\r\n                </div>\r\n              }\r\n            >\r\n              <LineChart\r\n                data={data}\r\n                tooltipValPrefix='RM '\r\n                tooltipName='Total Sales'\r\n                seriesField='cat'\r\n                yAxis={{\r\n                  label: maxSelectedMetrics !== 1 ? null : undefined,\r\n                }}\r\n              />\r\n            </Suspense>\r\n          </DashboardContainer>\r\n        </MainCard>\r\n      </DashboardContainer>\r\n    );\r\n  };\r\n\r\n  const RankingDashboard = (props) => {\r\n    const [rankingDtInfo, setRankingDtInfo] = useState({\r\n      date: getDt(),\r\n      label: 'Today',\r\n      cat: 'tdy',\r\n    });\r\n\r\n    return (\r\n      <DashboardContainer>\r\n        <DropdownDate\r\n          onChange={(dateInfo) => {\r\n            setRankingDtInfo(dateInfo);\r\n          }}\r\n          className='main-card'\r\n        />\r\n        <Row justify='center' gutter={[30, 20]}>\r\n          <Col span={12}>\r\n            <MainCard>\r\n              <Space direction='vertical' size={5} className='full-width'>\r\n                <div>\r\n                  <BoldTitle level={5}>Product Rankings</BoldTitle>\r\n\r\n                  <Text type='secondary'>\r\n                    {formatDt(\r\n                      rankingDtInfo.date,\r\n                      rankingDtInfo.cat,\r\n                      'DD-MM-YYYY',\r\n                      'MMM DD, YYYY'\r\n                    )}\r\n                  </Text>\r\n                </div>\r\n                <RankingList\r\n                  dataSource={topProduct}\r\n                  cardSelections={[\r\n                    { key: 'bySales', label: 'By Sales', desc: '2323' },\r\n                    { key: 'byUnits', label: 'By Units', desc: '123213' },\r\n                  ]}\r\n                  selectOptions={{\r\n                    placeholder: 'Category',\r\n                    options: prodCat,\r\n                    allowClear: true,\r\n                  }}\r\n                />\r\n              </Space>\r\n            </MainCard>\r\n          </Col>\r\n          <Col span={12}>\r\n            <MainCard>\r\n              <Space direction='vertical' size={5} className='full-width'>\r\n                <div>\r\n                  <BoldTitle level={5}>Promotion Rankings</BoldTitle>\r\n\r\n                  <Text className='dashboard-grey-text'>\r\n                    {formatDt(\r\n                      rankingDtInfo.date,\r\n                      rankingDtInfo.cat,\r\n                      'DD-MM-YYYY',\r\n                      'MMM DD, YYYY'\r\n                    )}\r\n                  </Text>\r\n                </div>\r\n                <RankingList\r\n                  dataSource={topProduct}\r\n                  cardSelections={[\r\n                    { key: 'bySales', label: 'By Sales', desc: '2323' },\r\n                    { key: 'byUnits', label: 'By Units', desc: '123213' },\r\n                  ]}\r\n                />\r\n              </Space>\r\n            </MainCard>\r\n          </Col>\r\n        </Row>\r\n      </DashboardContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='business-statistics'>\r\n        <StatisticsDashboard />\r\n        <KeyMetricsDashboard />\r\n        <RankingDashboard />\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BusinessStatistics;\r\n","import { Tooltip, Typography } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport ColorCard, { ColorCardProps } from '../ColorCard';\r\n\r\nexport interface AnalysisCardProps extends ColorCardProps {\r\n  component: {\r\n    key: string;\r\n    label: string;\r\n    desc: string;\r\n    prodList: string[];\r\n  };\r\n}\r\n\r\nconst AnalysisCard = ({ component, ...props }: AnalysisCardProps) => {\r\n  const { Text } = Typography;\r\n  return (\r\n    <ColorCard\r\n      label={\r\n        component.desc !== undefined ? (\r\n          <Tooltip title={component.desc}>\r\n            <Text\r\n              strong\r\n              type='secondary'\r\n              className='text-break'\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              {component.label}\r\n              <QuestionCircleOutlined\r\n                style={{\r\n                  padding: '0 5px',\r\n                }}\r\n                className='color-grey'\r\n              />\r\n            </Text>\r\n          </Tooltip>\r\n        ) : (\r\n          <Text strong type='secondary' className='text-break'>\r\n            {component.label}\r\n          </Text>\r\n        )\r\n      }\r\n      backgroundColor={component.prodList.length <= 0 ? 'success' : 'error'}\r\n      indicator={component.prodList.length <= 0 ? 'true' : 'false'}\r\n      bodyStyle={{ padding: 15 }}\r\n    >\r\n      {component.prodList.length <= 0 ? (\r\n        <Text strong className='color-primary'>\r\n          All set!\r\n        </Text>\r\n      ) : (\r\n        <>\r\n          <Text strong type='danger'>\r\n            Please add the cost for:\r\n          </Text>\r\n          <ul>\r\n            {component.prodList.map((prod) => (\r\n              <li className='color-error' style={{ fontWeight: 600 }}>\r\n                {prod}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </ColorCard>\r\n  );\r\n};\r\n\r\nexport default AnalysisCard;\r\n","import { Col, Collapse, CollapseProps, Row, Typography } from 'antd';\r\nimport MainCard from '../MainCard';\r\n\r\ninterface CollapseCardProps extends CollapseProps {\r\n  key: string;\r\n  label: string;\r\n  prefixIcon?: React.ReactNode;\r\n  suffixIcon?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst CollapseCard = ({\r\n  key,\r\n  label,\r\n  prefixIcon,\r\n  suffixIcon,\r\n  children,\r\n  ...props\r\n}: CollapseCardProps) => {\r\n  const { Text } = Typography;\r\n  const { Panel } = Collapse;\r\n  return (\r\n    <MainCard bodyStyle={{ padding: 0 }}>\r\n      <Collapse bordered={false} expandIconPosition='right' {...props}>\r\n        <Panel\r\n          header={\r\n            <Row align='middle' gutter={10}>\r\n              {prefixIcon !== undefined ? (\r\n                <Col className='center-flex'>{prefixIcon}</Col>\r\n              ) : null}\r\n              <Col>\r\n                <Text style={{ fontWeight: 500 }} className='text-lg'>\r\n                  {label}\r\n                </Text>\r\n              </Col>\r\n              {suffixIcon !== undefined ? (\r\n                <Col className='center-flex'> {suffixIcon}</Col>\r\n              ) : null}\r\n            </Row>\r\n          }\r\n          key={key}\r\n        >\r\n          {children}\r\n        </Panel>\r\n      </Collapse>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default CollapseCard;\r\n","import { Col, DatePicker,DatePickerProps, Row, Typography } from 'antd';\r\n\r\ntype DateRangePickerWithLabelProps = DatePickerProps & {\r\n  label: string;\r\n  textSpan?: number;\r\n  justify?: 'start' | 'end';\r\n};\r\n\r\nconst DateRangePickerWithLabel = ({\r\n  label,\r\n  textSpan = 5,\r\n  justify = 'end',\r\n  ...props\r\n}: DateRangePickerWithLabelProps) => {\r\n  const { Text } = Typography;\r\n\r\n  return (\r\n    <Row align='middle' gutter={30} className='input-date'>\r\n      <Col span={textSpan} className={justify === 'start' ? '' : 'justify-end'}>\r\n        <Text type='secondary'>{label}</Text>\r\n      </Col>\r\n      <Col span={24 - textSpan}>\r\n        <DatePicker className='full-width' {...props} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DateRangePickerWithLabel;\r\n","import DatePickerWithLabel from '@/components/Input/DatePickerWithLabel';\r\nimport FilterInputCol from '@components/Container/FilterInputCol';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { prodCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\nimport moment from 'moment';\r\n\r\ninterface FilterInputsProps {\r\n  onSearch?: (searchParams: string[]) => void;\r\n}\r\n\r\nconst FilterInputs = (props: FilterInputsProps) => {\r\n  const prodInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'prodName',\r\n    options: [\r\n      { value: 'prodName', label: 'Product Name' },\r\n      { value: 'prodSKU', label: 'Product SKU' },\r\n    ],\r\n  };\r\n\r\n  const prodCatSelect = {\r\n    placeholder: 'Select Category',\r\n    options: prodCat,\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={prodInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel label='Category' select={prodCatSelect} />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Demand'\r\n            placeholder={['Start', 'End']}\r\n            min={0}\r\n            justify='start'\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Price'\r\n            placeholder={['Start', 'End']}\r\n            prefix='RM'\r\n            prefixWidth={60}\r\n            min={0}\r\n            precision={2}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <DatePickerWithLabel\r\n            picker='month'\r\n            disabledDate={(current) => current > moment()}\r\n            defaultValue={moment()}\r\n            defaultPickerValue={moment()}\r\n            allowClear={false}\r\n            dropdownAlign={{ points: ['tc', 'bc'] }}\r\n            label='Analysis Month'\r\n            justify='start'\r\n          />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","import { IconBaseProps } from 'react-icons';\r\nimport { MdInfo, MdOutbound, MdStars } from 'react-icons/md';\r\n\r\nexport interface DescIconProps extends IconBaseProps {\r\n  type: 'info' | 'purpose' | 'benefits';\r\n}\r\n\r\nconst DescIcon = (props: DescIconProps) => {\r\n  return props.type === 'info' ? (\r\n    <MdInfo className='color-blue-400' size={80} {...props} />\r\n  ) : props.type === 'purpose' ? (\r\n    <MdOutbound className='color-red-400' size={80} color='white' {...props} />\r\n  ) : (\r\n    <MdStars className='color-yellow-400' size={80} {...props} />\r\n  );\r\n};\r\n\r\nexport default DescIcon;\r\n","import { Typography } from 'antd';\r\n\r\nexport interface GradeIconProps {\r\n  grade: string;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  fontSize?: number;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n}\r\n\r\nconst GradeIcon = ({\r\n  grade,\r\n  width = 70,\r\n  height = 80,\r\n  fontSize = 40,\r\n  className,\r\n  style,\r\n  ...props\r\n}: GradeIconProps) => {\r\n  const { Text } = Typography;\r\n  return (\r\n    <Text\r\n      style={{\r\n        width: width,\r\n        height: height,\r\n        borderRadius: 12,\r\n        color: 'white',\r\n        fontSize: fontSize,\r\n        userSelect: 'none',\r\n        ...style,\r\n      }}\r\n      className={`center-flex${\r\n        className !== undefined ? ` ${className}` : ' bg-primary'\r\n      }`}\r\n      strong\r\n    >\r\n      {grade}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default GradeIcon;\r\n","import { GradeIcon } from '../Icons';\r\nimport NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nimport { Col, Row, Image, Space, Typography } from 'antd';\r\nimport { moneyFormatter, percentFormatter } from '@/utils/numUtils';\r\nimport { GradeIconProps } from '../Icons/GradeIcon';\r\nimport { tableGradeProps } from '.';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst GradeA = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='A' className='bg-green-400' {...props} />\r\n);\r\nconst GradeB = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='B' className='bg-blue-400' {...props} />\r\n);\r\nconst GradeC = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='C' className='bg-red-400' {...props} />\r\n);\r\n\r\nconst abcDesc = {\r\n  header: 'ABC analysis grades the products based on sales per month.',\r\n  content: [\r\n    {\r\n      key: 'gradeA',\r\n      title: 'Grade A',\r\n      desc: 'Grade A contribute to 80% of revenue. Make sure to keep enough stocks since these products produce the most revenue.',\r\n      icon: <GradeA />,\r\n    },\r\n    {\r\n      key: 'gradeB',\r\n      title: 'Grade B',\r\n      desc: 'Grade B contribute to 15% of revenue. Do not keep too many stocks on hand since these products produce lower revenue.',\r\n      icon: <GradeB />,\r\n    },\r\n    {\r\n      key: 'gradeC',\r\n      title: 'Grade C',\r\n      desc: 'Grade C contribute to 5% of revenue. These products are low in demand. Consider ways to promote these products.',\r\n      icon: <GradeC />,\r\n    },\r\n  ],\r\n};\r\n\r\nconst abcColumns: {\r\n  title: string;\r\n  dataIndex?: string | string[];\r\n  key: string;\r\n  sorter?: boolean;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  fixed?: 'left' | 'right';\r\n  render?: any;\r\n}[] = [\r\n  {\r\n    title: 'Product',\r\n    dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n    key: 'prod',\r\n    sorter: true,\r\n    width: 250,\r\n    fixed: 'left',\r\n    render: (_: any, data: { [x: string]: string }) => (\r\n      <Row gutter={5}>\r\n        <Col span={8}>\r\n          <Image src={data['prodImg']} height={80} width={80} />\r\n        </Col>\r\n        <Col span={16}>\r\n          <Space direction='vertical' size={5}>\r\n            <div className='text-button-wrapper'>\r\n              <Text strong className='text-button'>\r\n                {data['prodNm']}\r\n              </Text>\r\n            </div>\r\n            <Text type='secondary' className='text-sm text-break'>\r\n              {data['prodCat']}\r\n            </Text>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n  },\r\n  {\r\n    title: 'SKU',\r\n    dataIndex: 'prodSKU',\r\n    key: 'prodSKU',\r\n    sorter: true,\r\n    width: 120,\r\n  },\r\n  {\r\n    title: 'Cost per Unit',\r\n    dataIndex: 'costPerUnit',\r\n    key: 'costPerUnit',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Demand',\r\n    dataIndex: 'demand',\r\n    key: 'demand',\r\n    sorter: true,\r\n    width: 100,\r\n  },\r\n  {\r\n    title: 'Consumption Value',\r\n    dataIndex: 'consumpVal',\r\n    key: 'consumpVal',\r\n    sorter: true,\r\n    width: 160,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Demand (%)',\r\n    dataIndex: 'demandPct',\r\n    key: 'demandPct',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{percentFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Consumption Value (%)',\r\n    dataIndex: 'consumpValPct',\r\n    key: 'consumpValPct',\r\n    sorter: true,\r\n    width: 180,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{percentFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Grade',\r\n    dataIndex: 'grade',\r\n    key: 'grade',\r\n    sorter: true,\r\n    width: 100,\r\n    align: 'center' as const,\r\n    fixed: 'right',\r\n    render: (grade: 'a' | 'b' | 'c') => {\r\n      return (\r\n        <div className='center-flex'>\r\n          {grade === 'a' ? (\r\n            <GradeA {...tableGradeProps} />\r\n          ) : grade === 'b' ? (\r\n            <GradeB {...tableGradeProps} />\r\n          ) : (\r\n            <GradeC {...tableGradeProps} />\r\n          )}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst abcData = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    costPerUnit: 17.6,\r\n    demand: 30,\r\n    demandPct: 0.1395,\r\n    consumpVal: 528,\r\n    consumpValPct: 0.2834,\r\n    grade: 'a',\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    costPerUnit: 17.6,\r\n    demand: 70,\r\n    demandPct: 0.3256,\r\n    consumpVal: 455,\r\n    consumpValPct: 0.2442,\r\n    grade: 'b',\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    costPerUnit: 20.8,\r\n    demand: 20,\r\n    demandPct: 0.093,\r\n    consumpVal: 416,\r\n    consumpValPct: 0.2233,\r\n    grade: 'b',\r\n  },\r\n];\r\n\r\nconst abcAnalysis = {\r\n  desc: abcDesc,\r\n  columns: abcColumns,\r\n  tableScroll: 1300,\r\n  data: abcData,\r\n};\r\n\r\nexport default abcAnalysis;\r\n","import { GradeIcon } from '../Icons';\r\nimport NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nimport { Col, Row, Image, Space, Typography } from 'antd';\r\nimport { moneyFormatter, percentFormatter } from '@/utils/numUtils';\r\nimport { GradeIconProps } from '../Icons/GradeIcon';\r\nimport { tableGradeProps } from '.';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst GradeH = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='H' className='bg-green-400' {...props} />\r\n);\r\nconst GradeM = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='M' className='bg-blue-400' {...props} />\r\n);\r\nconst GradeL = (props: Omit<GradeIconProps, 'grade'>) => (\r\n  <GradeIcon grade='L' className='bg-red-400' {...props} />\r\n);\r\n\r\nconst hmlDesc = {\r\n  header: 'HML analysis grades the products based on sales per month.',\r\n  content: [\r\n    {\r\n      key: 'gradeH',\r\n      title: 'Grade H',\r\n      desc: 'Grade H products make up 75% of the total unit price ratio. These products are costly. Make sure you have strict control on these high-unit-value products.',\r\n      icon: <GradeH />,\r\n    },\r\n    {\r\n      key: 'gradeM',\r\n      title: 'Grade M',\r\n      desc: 'Grade M products make up 15% of the total unit price ratio. These products do not cost too much. Moderate control on these products is sufficient.',\r\n      icon: <GradeM />,\r\n    },\r\n    {\r\n      key: 'gradeL',\r\n      title: 'Grade L',\r\n      desc: 'Grade L products make up 10% of the total unit price ratio. These products are low in unit price. Less control is required for the products.',\r\n      icon: <GradeL />,\r\n    },\r\n  ],\r\n};\r\n\r\nconst hmlColumns: {\r\n  title: string;\r\n  dataIndex?: string | string[];\r\n  key: string;\r\n  sorter?: boolean;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  fixed?: 'left' | 'right';\r\n  render?: any;\r\n}[] = [\r\n  {\r\n    title: 'Product',\r\n    dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n    key: 'prod',\r\n    sorter: true,\r\n    width: 250,\r\n    fixed: 'left',\r\n    render: (_: any, data: { [x: string]: string }) => (\r\n      <Row gutter={5}>\r\n        <Col span={8}>\r\n          <Image src={data['prodImg']} height={80} width={80} />\r\n        </Col>\r\n        <Col span={16}>\r\n          <Space direction='vertical' size={5}>\r\n            <div className='text-button-wrapper'>\r\n              <Text strong className='text-button'>\r\n                {data['prodNm']}\r\n              </Text>\r\n            </div>\r\n            <Text type='secondary' className='text-sm text-break'>\r\n              {data['prodCat']}\r\n            </Text>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n  },\r\n  {\r\n    title: 'SKU',\r\n    dataIndex: 'prodSKU',\r\n    key: 'prodSKU',\r\n    sorter: true,\r\n    width: 120,\r\n  },\r\n  {\r\n    title: 'Stock',\r\n    dataIndex: 'prodStock',\r\n    key: 'prodStock',\r\n    sorter: true,\r\n    width: 120,\r\n  },\r\n  {\r\n    title: 'Cost per Unit',\r\n    dataIndex: 'costPerUnit',\r\n    key: 'costPerUnit',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Cost per Unit (%)',\r\n    dataIndex: 'costPerUnitPct',\r\n    key: 'costPerUnitPct',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) => (\r\n      <Text type='secondary'>{percentFormatter(amount)}</Text>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Grade',\r\n    dataIndex: 'grade',\r\n    key: 'grade',\r\n    sorter: true,\r\n    width: 100,\r\n    align: 'center' as const,\r\n    fixed: 'right',\r\n    render: (grade: 'h' | 'm' | 'l') => {\r\n      return (\r\n        <div className='center-flex'>\r\n          {grade === 'h' ? (\r\n            <GradeH {...tableGradeProps} />\r\n          ) : grade === 'm' ? (\r\n            <GradeM {...tableGradeProps} />\r\n          ) : (\r\n            <GradeL {...tableGradeProps} />\r\n          )}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst hmlData = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    prodStock: 47,\r\n    costPerUnit: 17.6,\r\n    costPerUnitPct: 0.3333,\r\n    grade: 'h',\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    prodStock: 120,\r\n    costPerUnit: 17.6,\r\n    costPerUnitPct: 0.3333,\r\n    grade: 'm',\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    prodStock: 25,\r\n    costPerUnit: 20.8,\r\n    costPerUnitPct: 0.3333,\r\n    grade: 'l',\r\n  },\r\n];\r\n\r\nconst hmlAnalysis = {\r\n  desc: hmlDesc,\r\n  columns: hmlColumns,\r\n  data: hmlData,\r\n};\r\n\r\nexport default hmlAnalysis;\r\n","import { moneyFormatter } from '@/utils/numUtils';\r\nimport { Col, Row, Image, Typography, Space } from 'antd';\r\nimport { DescIcon } from '../Icons';\r\nimport NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nimport { EditButton } from '@/components/Button/ActionButton';\r\nimport { HiExclamation } from 'react-icons/hi';\r\nimport Popover from '@/components/Popover';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst eoqDesc = {\r\n  header: 'EOQ analysis evaluates the products based on sales per month.',\r\n  content: [\r\n    {\r\n      key: 'info',\r\n      title: 'Info',\r\n      desc: 'EOQ stands for Economic Order Quantity. It is the ideal order quantity a company should purchase to minimize inventory costs.',\r\n      icon: <DescIcon type='info' />,\r\n    },\r\n    {\r\n      key: 'purpose',\r\n      title: 'Purpose',\r\n      desc: 'The purpose of EOQ analysis to minimise the ordering and carrying costs incurred in inventory.',\r\n      icon: <DescIcon type='purpose' />,\r\n    },\r\n    {\r\n      key: 'benefits',\r\n      title: 'Benefits',\r\n      desc: 'By using EOQ analysis, we can identify the optimum amount of items to be ordered.',\r\n      icon: <DescIcon type='benefits' />,\r\n    },\r\n  ],\r\n};\r\n\r\nconst eoqComponent = {\r\n  header: 'Components of EOQ Analysis',\r\n  content: [\r\n    {\r\n      key: 'orderCost',\r\n      label: 'Ordering/Reorder Cost',\r\n      desc: 'Cost when reordering the product',\r\n      prodList: ['Sambal Ikan Bilis', 'Pes Mi Goreng'],\r\n    },\r\n    {\r\n      key: 'carryCost',\r\n      label: 'Carrying/Holding Cost',\r\n      desc: 'Cost for holding inventory in stock',\r\n      prodList: [],\r\n    },\r\n  ],\r\n};\r\n\r\nconst eoqColumns: {\r\n  title: string;\r\n  dataIndex?: string | string[];\r\n  key: string;\r\n  sorter?: boolean;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  fixed?: 'left' | 'right';\r\n  render?: any;\r\n}[] = [\r\n  {\r\n    title: 'Product',\r\n    dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n    key: 'prod',\r\n    sorter: true,\r\n    width: 250,\r\n    fixed: 'left',\r\n    render: (_: any, data: { [x: string]: string }) => (\r\n      <Row gutter={5}>\r\n        <Col span={8}>\r\n          <Image src={data['prodImg']} height={80} width={80} />\r\n        </Col>\r\n        <Col span={16}>\r\n          <Space direction='vertical' size={5}>\r\n            <div className='text-button-wrapper'>\r\n              <Text strong className='text-button'>\r\n                {data['prodNm']}\r\n              </Text>\r\n            </div>\r\n            <Text type='secondary' className='text-sm text-break'>\r\n              {data['prodCat']}\r\n            </Text>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n  },\r\n  {\r\n    title: 'SKU',\r\n    dataIndex: 'prodSKU',\r\n    key: 'prodSKU',\r\n    sorter: true,\r\n    width: 120,\r\n  },\r\n  {\r\n    title: 'Demand',\r\n    dataIndex: 'demand',\r\n    key: 'demand',\r\n    sorter: true,\r\n    width: 100,\r\n  },\r\n  {\r\n    title: 'Ordering Cost',\r\n    dataIndex: 'orderCost',\r\n    key: 'orderCost',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n      ) : (\r\n        <Popover content='Please update the holding cost for this product.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Not Found\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Holding Cost',\r\n    dataIndex: 'carryCost',\r\n    key: 'carryCost',\r\n    sorter: true,\r\n    width: 120,\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n      ) : (\r\n        <Popover content='Please update the holding cost for this product.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Not Found\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Optimal Order Quantity',\r\n    dataIndex: 'ooq',\r\n    key: 'ooq',\r\n    sorter: true,\r\n    width: 170,\r\n    fixed: 'right',\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{moneyFormatter(amount)}</Text>\r\n      ) : (\r\n        <Popover content='Please fill up the ordering and holding costs.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Insufficient Info\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    width: 100,\r\n    fixed: 'right',\r\n    render: () => (\r\n      <EditButton type='link' color='info'>\r\n        Edit Costs\r\n      </EditButton>\r\n    ),\r\n  },\r\n];\r\n\r\nconst eoqData = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    demand: 30,\r\n    orderCost: 550,\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    costPerUnit: 17.6,\r\n    demand: 70,\r\n    carryCost: 155,\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    costPerUnit: 20.8,\r\n    demand: 20,\r\n    orderCost: 666,\r\n    carryCost: 329,\r\n    ooq: 169,\r\n  },\r\n];\r\n\r\nconst eoqAnalysis = {\r\n  desc: eoqDesc,\r\n  component: eoqComponent,\r\n  columns: eoqColumns,\r\n  data: eoqData,\r\n};\r\n\r\nexport default eoqAnalysis;\r\n","import { Col, Row, Image, Typography, Space } from 'antd';\r\nimport { DescIcon } from '../Icons';\r\nimport NasiBriyaniBukhari from '@assets/Product/NasiBukhari.png';\r\nimport hashtag from '@assets/Login/Hashtag.svg';\r\nimport { EditButton } from '@/components/Button/ActionButton';\r\nimport { HiExclamation } from 'react-icons/hi';\r\nimport Popover from '@/components/Popover';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ssDesc = {\r\n  header:\r\n    'Safety Stock analysis evaluates the products based on sales per month.',\r\n  content: [\r\n    {\r\n      key: 'info',\r\n      title: 'Info',\r\n      desc: 'Safety stock is the additional quantity of a product to be stored in the inventory.',\r\n      icon: <DescIcon type='info' />,\r\n    },\r\n    {\r\n      key: 'purpose',\r\n      title: 'Purpose',\r\n      desc: 'The purpose of Safety Stock analysis to prevent an out-of-stock situation. ',\r\n      icon: <DescIcon type='purpose' />,\r\n    },\r\n    {\r\n      key: 'benefits',\r\n      title: 'Benefits',\r\n      desc: 'By using Safety Stock analysis, we can identify the number of reserved stock and reorder point.',\r\n      icon: <DescIcon type='benefits' />,\r\n    },\r\n  ],\r\n};\r\n\r\nconst ssComponent = {\r\n  header: 'Components of Safety Stock Analysis',\r\n  content: [\r\n    {\r\n      key: 'maxLeadTm',\r\n      label: 'Maximum Lead Time',\r\n      desc: 'Maximum Lead Time',\r\n      prodList: [],\r\n    },\r\n    {\r\n      key: 'AvgLeadTm',\r\n      label: 'Average Lead Time',\r\n      desc: 'Average Lead Time',\r\n      prodList: [],\r\n    },\r\n  ],\r\n};\r\n\r\nconst ssColumns: {\r\n  title: string;\r\n  dataIndex?: string | string[];\r\n  key: string;\r\n  sorter?: boolean;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  fixed?: 'left' | 'right';\r\n  render?: any;\r\n}[] = [\r\n  {\r\n    title: 'Product',\r\n    dataIndex: ['prodNm', 'prodCat', 'prodImg'],\r\n    key: 'prod',\r\n    sorter: true,\r\n    width: 200,\r\n    fixed: 'left',\r\n    render: (_: any, data: { [x: string]: string }) => (\r\n      <Row gutter={5}>\r\n        <Col span={8}>\r\n          <Image src={data['prodImg']} height={80} width={80} />\r\n        </Col>\r\n        <Col span={16}>\r\n          <Space direction='vertical' size={5}>\r\n            <div className='text-button-wrapper'>\r\n              <Text strong className='text-button'>\r\n                {data['prodNm']}\r\n              </Text>\r\n            </div>\r\n            <Text type='secondary' className='text-sm text-break'>\r\n              {data['prodCat']}\r\n            </Text>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n  },\r\n  {\r\n    title: 'SKU',\r\n    dataIndex: 'prodSKU',\r\n    key: 'prodSKU',\r\n    sorter: true,\r\n    width: 100,\r\n  },\r\n  {\r\n    title: 'Max Demand',\r\n    dataIndex: 'maxDemand',\r\n    key: 'maxDemand',\r\n    sorter: true,\r\n    width: 100,\r\n    render: (amount: number) => <Text type='secondary'>{amount} / day</Text>,\r\n  },\r\n  {\r\n    title: 'Avg Demand',\r\n    dataIndex: 'avgDemand',\r\n    key: 'avgDemand',\r\n    sorter: true,\r\n    width: 100,\r\n    render: (amount: number) => <Text type='secondary'>{amount} / day</Text>,\r\n  },\r\n  {\r\n    title: 'Max Lead Time',\r\n    dataIndex: 'maxLeadTm',\r\n    key: 'maxLeadTm',\r\n    sorter: true,\r\n    width: 100,\r\n    render: (day: number) =>\r\n      day !== undefined ? (\r\n        <Text type='secondary'>\r\n          {day} {day !== 1 ? 'days' : 'day'}\r\n        </Text>\r\n      ) : (\r\n        <Popover content='Please update the maximum lead time for this product.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Not Found\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Avg Lead Time',\r\n    dataIndex: 'avgLeadTm',\r\n    key: 'avgLeadTm',\r\n    sorter: true,\r\n    width: 100,\r\n    render: (day: number) =>\r\n      day !== undefined ? (\r\n        <Text type='secondary'>\r\n          {day} {day !== 1 ? 'days' : 'day'}\r\n        </Text>\r\n      ) : (\r\n        <Popover content='Please update the average lead time for this product.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Not Found\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Safety Stock',\r\n    dataIndex: 'safetyStock',\r\n    key: 'safetyStock',\r\n    sorter: true,\r\n    width: 120,\r\n    fixed: 'right',\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{amount}</Text>\r\n      ) : (\r\n        <Popover content='Please fill up the maximum and average amount for the demand and lead time.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Insufficient Info\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Restock Point',\r\n    dataIndex: 'restockPt',\r\n    key: 'restockPt',\r\n    sorter: true,\r\n    width: 120,\r\n    fixed: 'right',\r\n    render: (amount: number) =>\r\n      amount !== undefined ? (\r\n        <Text type='secondary'>{amount}</Text>\r\n      ) : (\r\n        <Popover content='Please fill up the maximum and average amount for the demand and lead time.'>\r\n          <Space size={5}>\r\n            <HiExclamation size={20} className='color-error' />\r\n            <Text strong className='color-error'>\r\n              Insufficient Info\r\n            </Text>\r\n          </Space>\r\n        </Popover>\r\n      ),\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    width: 100,\r\n    fixed: 'right',\r\n    render: () => (\r\n      <EditButton type='link' color='info'>\r\n        Edit Lead Time\r\n      </EditButton>\r\n    ),\r\n  },\r\n];\r\n\r\nconst ssData = [\r\n  {\r\n    key: '1',\r\n    prodNm: 'Nasi Briyani Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    maxDemand: 20,\r\n    avgDemand: 15,\r\n    maxLeadTm: 10,\r\n    avgLeadTm: 7,\r\n    safetyStock: 95,\r\n    restockPt: 200,\r\n  },\r\n  {\r\n    key: '2',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: hashtag,\r\n    maxDemand: 25,\r\n    avgDemand: 20,\r\n    maxLeadTm: 12,\r\n    avgLeadTm: 10,\r\n    safetyStock: 100,\r\n    restockPt: 300,\r\n  },\r\n  {\r\n    key: '3',\r\n    prodNm: 'Nasi Bukhari',\r\n    prodCat: 'Ready-To-Cook',\r\n    prodSKU: 'SHRF-RTC-NBB',\r\n    prodImg: NasiBriyaniBukhari,\r\n    maxDemand: 6,\r\n    avgDemand: 5,\r\n    maxLeadTm: 10,\r\n    avgLeadTm: 7,\r\n    safetyStock: 25,\r\n    restockPt: 60,\r\n  },\r\n];\r\n\r\nconst ssAnalysis = {\r\n  desc: ssDesc,\r\n  component: ssComponent,\r\n  columns: ssColumns,\r\n  tableScroll: 1500,\r\n  data: ssData,\r\n};\r\n\r\nexport default ssAnalysis;\r\n","import abcAnalysis from './abcAnalysis';\r\nimport hmlAnalysis from './hmlAnalysis';\r\nimport eoqAnalysis from './eoqAnalysis';\r\nimport ssAnalysis from './ssAnalysis';\r\n\r\nconst tableGradeProps = { width: 50, height: 60, fontSize: 30 };\r\n\r\nexport { abcAnalysis, hmlAnalysis, eoqAnalysis, ssAnalysis, tableGradeProps };\r\n","import React, { useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { Space, Typography, Row, Col } from 'antd';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport InformativeTable from '@components/Table/InformativeTable';\r\nimport DescriptionList from '@components/List/DescriptionList';\r\nimport AnalysisCard from '@/components/Card/AnalysisCard';\r\nimport CollapseCard from '@/components/Card/CollapseCard';\r\nimport { getDt } from '@/utils/dateUtils';\r\nimport FilterInputs from './FilterInputs';\r\nimport { abcAnalysis, eoqAnalysis, hmlAnalysis, ssAnalysis } from './Analyses';\r\nimport './InvAnalysis.less';\r\nimport { HiCheckCircle, HiXCircle } from 'react-icons/hi';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst InvAnalysis = () => {\r\n  const { Text } = Typography;\r\n\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get('type') === null) setSearchParams({ type: 'abc' });\r\n  }, [searchParams, setSearchParams]);\r\n\r\n  const invAnalysisTab = [\r\n    { key: 'abc', tab: 'ABC' },\r\n    { key: 'hml', tab: 'HML' },\r\n    { key: 'eoq', tab: 'EOQ' },\r\n    { key: 'ss', tab: 'Safety Stock' },\r\n  ];\r\n\r\n  const getAnalysis = (\r\n    analysis: string\r\n  ): {\r\n    desc: {\r\n      header: string;\r\n      content: {\r\n        key: string;\r\n        title: string;\r\n        desc: string;\r\n        icon: JSX.Element;\r\n      }[];\r\n    };\r\n    component?: {\r\n      header: string;\r\n      content: {\r\n        key: string;\r\n        label: string;\r\n        desc: string;\r\n        prodList: string[];\r\n      }[];\r\n    };\r\n    columns: {\r\n      title: string;\r\n      dataIndex?: string | string[];\r\n      key: string;\r\n      sorter?: boolean;\r\n      align?: 'left' | 'center' | 'right';\r\n      width?: number | string;\r\n      fixed?: 'left' | 'right';\r\n      render?: any;\r\n    }[];\r\n    tableScroll?: number;\r\n    data: any[];\r\n  } =>\r\n    analysis === 'abc'\r\n      ? abcAnalysis\r\n      : analysis === 'hml'\r\n      ? hmlAnalysis\r\n      : analysis === 'eoq'\r\n      ? eoqAnalysis\r\n      : ssAnalysis;\r\n\r\n  const analysis = getAnalysis(searchParams.get('type'));\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer\r\n        className={`inv-analysis${\r\n          ['abc', 'hml'].includes(searchParams.get('type'))\r\n            ? ` grade-analysis`\r\n            : ''\r\n        }`}\r\n      >\r\n        {analysis.desc !== undefined && (\r\n          <CollapseCard\r\n            key={`desc-${searchParams.get('type')}`}\r\n            label={analysis.desc.header}\r\n          >\r\n            <DescriptionList\r\n              grid={{ column: 3 }}\r\n              dataSource={analysis.desc.content}\r\n              titleProps={{ style: { fontSize: 18 } }}\r\n              style={{ borderTop: '1px solid #f0f0f0' }}\r\n            />\r\n          </CollapseCard>\r\n        )}\r\n\r\n        {analysis.component !== undefined && (\r\n          <CollapseCard\r\n            key={`component-${searchParams.get('type')}`}\r\n            label={analysis.component.header}\r\n            suffixIcon={\r\n              analysis.component.content.some(\r\n                (component) => component.prodList.length > 0\r\n              ) ? (\r\n                <HiXCircle size={20} className='color-error' />\r\n              ) : (\r\n                <HiCheckCircle size={20} className='color-primary' />\r\n              )\r\n            }\r\n          >\r\n            <Row gutter={[30, 30]}>\r\n              {analysis.component.content.map((component) => (\r\n                <Col key={component.key} flex='25%'>\r\n                  <AnalysisCard component={component} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </CollapseCard>\r\n        )}\r\n\r\n        <MainCard\r\n          tabList={invAnalysisTab}\r\n          activeTabKey={searchParams.get('type')}\r\n          onTabChange={(key) => {\r\n            setSearchParams({ type: key });\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Space direction='vertical' size={5}>\r\n              <BoldTitle level={4}>\r\n                {`${\r\n                  invAnalysisTab.find(\r\n                    (tab) => tab.key === searchParams.get('type')\r\n                  )?.tab\r\n                } Analysis`}\r\n              </BoldTitle>\r\n              <Text type='secondary'>\r\n                {getDt(undefined, undefined, 'YYYY MMMM')}\r\n              </Text>\r\n            </Space>\r\n            <InformativeTable\r\n              dataSource={analysis.data}\r\n              columns={analysis.columns}\r\n              rowSelectable={false}\r\n              scroll={{\r\n                x:\r\n                  analysis.tableScroll !== undefined\r\n                    ? analysis.tableScroll\r\n                    : undefined,\r\n              }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default InvAnalysis;\r\n","import FilterInputCol from '@components/Container/FilterInputCol';\r\nimport DateRangePickerWithLabel from '@components/Input/DateRangePickerWithLabel';\r\nimport InputNumberRange from '@components/Input/InputNumberRange';\r\nimport InputSelect from '@components/Input/InputSelect';\r\nimport SelectWithLabel from '@components/Input/SelectWithLabel';\r\nimport { custCat } from '@utils/optionUtils';\r\nimport { Button, Col, Row, Space } from 'antd';\r\n\r\nconst FilterInputs = () => {\r\n  const orderInputSelect: {\r\n    defaultVal: string;\r\n    options: {\r\n      value: string;\r\n      label: string;\r\n    }[];\r\n  } = {\r\n    defaultVal: 'voucherCde',\r\n    options: [{ value: 'voucherCde', label: 'Voucher Code' }],\r\n  };\r\n\r\n  const custCatSelect = {\r\n    placeholder: 'Select Customer Type',\r\n    options: custCat,\r\n  };\r\n\r\n  return (\r\n    <Space direction='vertical' size={20} className='full-width'>\r\n      <Row gutter={[30, 30]}>\r\n        <FilterInputCol>\r\n          <InputSelect\r\n            selectBefore={orderInputSelect}\r\n            placeholder='Input'\r\n            selectWidth={150}\r\n          ></InputSelect>\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <SelectWithLabel\r\n            label='Customer Type'\r\n            select={custCatSelect}\r\n            textSpan={7}\r\n            mode='multiple'\r\n          />\r\n        </FilterInputCol>\r\n\r\n        <FilterInputCol>\r\n          <DateRangePickerWithLabel\r\n            label='Available Date'\r\n            justify='start'\r\n            textSpan={6}\r\n          />\r\n        </FilterInputCol>\r\n        <FilterInputCol>\r\n          <InputNumberRange\r\n            label='Availability'\r\n            placeholder={['Start', 'End']}\r\n            min={0}\r\n            textSpan={7}\r\n          />\r\n        </FilterInputCol>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col>\r\n          <Button type='primary'>Search</Button>\r\n        </Col>\r\n        <Col>\r\n          <Button>Reset</Button>\r\n        </Col>\r\n      </Row>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default FilterInputs;\r\n","const voucherList: {\r\n  key: string;\r\n  voucherCde: string;\r\n  discType: 'amount' | 'percentage';\r\n  discAmt: number;\r\n  minSpend?: number;\r\n  maxDisc?: number;\r\n  custType: ('agent' | 'drpshpr' | 'cust')[];\r\n  availability: number | 'unlimited';\r\n  usageLimit?: number;\r\n  autoApply?: boolean;\r\n  startTm: string;\r\n  endTm?: string;\r\n  status: 'active' | 'hidden' | 'scheduled' | 'expired';\r\n}[] = [\r\n  {\r\n    key: '1',\r\n    voucherCde: 'shrfagent',\r\n    discType: 'percentage',\r\n    discAmt: 0.3,\r\n    minSpend: 150,\r\n    custType: ['agent'],\r\n    availability: 'unlimited',\r\n    autoApply: true,\r\n    startTm: '01-01-2018 00:00',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '2',\r\n    voucherCde: 'shrfdropship',\r\n    discType: 'percentage',\r\n    discAmt: 0.2,\r\n    minSpend: 150,\r\n    custType: ['drpshpr'],\r\n    availability: 'unlimited',\r\n    autoApply: true,\r\n    startTm: '01-01-2018 00:00',\r\n    status: 'active',\r\n  },\r\n  {\r\n    key: '3',\r\n    voucherCde: 'merdeka64',\r\n    discType: 'amount',\r\n    discAmt: 10,\r\n    minSpend: 50,\r\n    maxDisc: 10,\r\n    custType: ['cust', 'agent', 'drpshpr'],\r\n    availability: 200,\r\n    startTm: '15-09-2021 00:00',\r\n    endTm: '01-09-2021 23:59',\r\n    status: 'hidden',\r\n    usageLimit: 3,\r\n  },\r\n];\r\n\r\nexport default voucherList;\r\n","import { Tooltip as AntdTooltip, TooltipProps as AntdTooltipProps } from 'antd';\r\n\r\nexport type TooltipProps = AntdTooltipProps & {\r\n  title: string;\r\n};\r\n\r\nconst Tooltip = ({ title, children, overlayStyle, ...props }: TooltipProps) => {\r\n  return (\r\n    <AntdTooltip\r\n      title={title}\r\n      overlayStyle={{\r\n        maxWidth: 300,\r\n        textAlign: 'justify',\r\n        ...overlayStyle,\r\n      }}\r\n    >\r\n      <span style={{ cursor: 'help' }}>{children}</span>\r\n    </AntdTooltip>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Button from '@components/Button';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport FilterInputs from './FilterInputs';\r\nimport { Row, Space, Col, Typography } from 'antd';\r\nimport InformativeTable, {\r\n  InformativeTableButtonProps,\r\n} from '@components/Table/InformativeTable';\r\nimport voucherList from './voucherList';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport { MdAllInclusive, MdSync } from 'react-icons/md';\r\nimport { moneyFormatter, percentFormatter } from '@utils/numUtils';\r\nimport { sortByOrder } from '@utils/arrayUtils';\r\nimport {\r\n  ActivateButton,\r\n  DeleteButton,\r\n  EditButton,\r\n  HideButton,\r\n} from '@/components/Button/ActionButton';\r\nimport StatusTag from '@/components/Tag/StatusTag';\r\nimport { voucherStatList } from '@/utils/optionUtils';\r\nimport Tooltip from '@/components/Tooltip';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst VoucherMgmt = () => {\r\n  const { Text } = Typography;\r\n  const [voucherListFltr, setVoucherListFltr] = useState(voucherList);\r\n\r\n  let navigate = useNavigate();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(\r\n    () =>\r\n      setVoucherListFltr(\r\n        voucherList.filter((voucher) =>\r\n          searchParams.get('stat') !== null\r\n            ? voucher.status === searchParams.get('stat')\r\n            : true\r\n        )\r\n      ),\r\n    [searchParams]\r\n  );\r\n  const voucherTabList = [\r\n    { key: 'all', tab: 'All' },\r\n    { key: 'active', tab: 'Active' },\r\n    { key: 'hidden', tab: 'Hidden' },\r\n    { key: 'scheduled', tab: 'Scheduled' },\r\n    { key: 'expired', tab: 'Expired' },\r\n  ];\r\n\r\n  const activateBtn = (props: any) => <ActivateButton type='primary' />;\r\n\r\n  const hideBtn = (props: any) => <HideButton type='primary' color='grey' />;\r\n\r\n  const deleteBtn = (props: any) => <DeleteButton type='primary' />;\r\n\r\n  const onSelectBtn: InformativeTableButtonProps = [\r\n    {\r\n      element: activateBtn,\r\n      key: 'activate',\r\n      fltr: [{ fld: 'status', value: 'hidden', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: hideBtn,\r\n      key: 'hide',\r\n      fltr: [{ fld: 'status', value: 'active', rel: 'eq' }],\r\n    },\r\n    {\r\n      element: deleteBtn,\r\n      key: 'delete',\r\n    },\r\n  ];\r\n\r\n  const voucherMgmtColumns: {\r\n    title: string;\r\n    dataIndex?: string | string[];\r\n    key: string;\r\n    sorter?: boolean;\r\n    align?: 'left' | 'center' | 'right';\r\n    fixed?: 'left' | 'right';\r\n    width?: number | string;\r\n    render?: any;\r\n  }[] = [\r\n    {\r\n      title: 'Voucher Code',\r\n      dataIndex: ['voucherCde', 'autoApply'],\r\n      key: 'voucherCde',\r\n      sorter: true,\r\n      fixed: 'left',\r\n      width: 150,\r\n      render: (_: any, data: { [x: string]: boolean }) => (\r\n        <Row>\r\n          <Col span={20} className='text-button-wrapper'>\r\n            <Text strong className='text-button'>\r\n              {data['voucherCde']}\r\n            </Text>\r\n          </Col>\r\n          <Col span={4} className='justify-end'>\r\n            {data['autoApply'] === true && (\r\n              <Tooltip title='Automatically applied'>\r\n                <MdSync />\r\n              </Tooltip>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Discount Details',\r\n      dataIndex: ['discType', 'discAmt', 'minSpend', 'maxDisc', 'usageLimit'],\r\n      key: 'discDetl',\r\n      sorter: true,\r\n      width: 280,\r\n      render: (_: any, data) => (\r\n        <>\r\n          <Text strong type='secondary'>\r\n            {data['discType'] === 'amount'\r\n              ? moneyFormatter(data['discAmt'])\r\n              : percentFormatter(data['discAmt'])}{' '}\r\n            off\r\n          </Text>\r\n          <ul>\r\n            {data['minSpend'] !== undefined && (\r\n              <li>Min spend of {moneyFormatter(data['minSpend'])}</li>\r\n            )}\r\n            {data['maxDisc'] !== undefined && (\r\n              <li>Capped at {moneyFormatter(data['maxDisc'])}</li>\r\n            )}\r\n            {data['usageLimit'] !== undefined && (\r\n              <li>Limit for {data['usageLimit']} transactions per user</li>\r\n            )}\r\n          </ul>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Customer Type',\r\n      dataIndex: 'custType',\r\n      key: 'custType',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (types: []) => (\r\n        <Space direction='vertical'>\r\n          {sortByOrder(types).map((type: string) => (\r\n            <Text type='secondary'>\r\n              {type === 'agent'\r\n                ? 'Agent'\r\n                : type === 'drpshpr'\r\n                ? 'Dropshipper'\r\n                : type === 'cust'\r\n                ? 'Direct Customer'\r\n                : null}\r\n            </Text>\r\n          ))}\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Availability',\r\n      dataIndex: 'availability',\r\n      key: 'availability',\r\n      sorter: true,\r\n      width: 100,\r\n      render: (availability: string) =>\r\n        availability === 'unlimited' ? (\r\n          <Tooltip title='Unlimited'>\r\n            <MdAllInclusive />\r\n          </Tooltip>\r\n        ) : (\r\n          availability\r\n        ),\r\n    },\r\n    {\r\n      title: 'Start Time',\r\n      dataIndex: 'startTm',\r\n      key: 'startTm',\r\n      sorter: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'End Time',\r\n      dataIndex: 'endTm',\r\n      key: 'endTm',\r\n      sorter: true,\r\n      width: 150,\r\n      render: (endTm: string) => (endTm !== undefined ? endTm : '-'),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 150,\r\n      render: (status: string) => (\r\n        <StatusTag\r\n          status={status}\r\n          statusList={voucherStatList}\r\n          dropdownStatus={['active', 'hidden']}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 100,\r\n      fixed: 'right',\r\n      render: (_: any, data: { [x: string]: string }) => (\r\n        <Space direction='vertical' size={5}>\r\n          <EditButton type='link' color='info' />\r\n          <DeleteButton type='link' color='info' />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='voucher-mgmt'>\r\n        <MainCard\r\n          tabList={voucherTabList}\r\n          activeTabKey={\r\n            searchParams.get('stat') === null ? 'all' : searchParams.get('stat')\r\n          }\r\n          onTabChange={(key) => {\r\n            setSearchParams(key !== 'all' ? { stat: key } : {});\r\n          }}\r\n        >\r\n          <FilterInputs />\r\n        </MainCard>\r\n        <MainCard>\r\n          <Space direction='vertical' size={15} className='full-width'>\r\n            <Row justify='space-between'>\r\n              <Col>\r\n                <BoldTitle level={4}>Voucher List</BoldTitle>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  type='primary'\r\n                  onClick={() => navigate(findRoutePath('voucherAdd'))}\r\n                >\r\n                  Create Voucher\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <InformativeTable\r\n              dataSource={voucherListFltr}\r\n              columns={voucherMgmtColumns}\r\n              buttons={onSelectBtn}\r\n              scroll={{ x: 1200 }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default VoucherMgmt;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport AffixAdd from '@components/Affix/AffixAdd';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Anchor,\r\n  Checkbox,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Radio,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\n\r\nconst VoucherAdd = () => {\r\n  const { Title } = Typography;\r\n  const { Link } = Anchor;\r\n  const [voucherForm] = Form.useForm();\r\n  const [discType, setDiscType] = useState('amount');\r\n  const [usageLimitUltd, setUsageLimitUltd] = useState(false);\r\n  const [availabilityUltd, setAvailabilityUltd] = useState(false);\r\n  const [hideEndTime, setHideEndTime] = useState(true);\r\n  const [targetOffset, setTargetOffset] = useState<number | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const anchorList = [\r\n    { link: 'basicInfo', title: 'Basic Information' },\r\n    { link: 'discSettings', title: 'Discount Settings' },\r\n    { link: 'custEligibility', title: 'Customer Eligibility' },\r\n    { link: 'availPeriod', title: 'Available Period' },\r\n  ];\r\n\r\n  const discCat = [\r\n    { value: 'amount', label: 'Fixed Amount' },\r\n    { value: 'percentage', label: 'Percentage' },\r\n  ];\r\n\r\n  const custCat = [\r\n    { label: 'Direct Customer', value: 'cust' },\r\n    { label: 'Agent', value: 'agent' },\r\n    { label: 'Dropshipper', value: 'drpshpr' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTargetOffset(window.innerHeight / 1.5);\r\n  }, []);\r\n\r\n  return (\r\n    <Form name='voucherForm' layout='vertical' size='small' form={voucherForm}>\r\n      <Layout>\r\n        <Col xs={16} xl={19} className='center-flex'>\r\n          <MainCardContainer>\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='basicInfo'>\r\n                  Basic Information\r\n                </Title>\r\n                <Form.Item\r\n                  label='Discount Code'\r\n                  name='voucherCde'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the discount code.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder='e.g. shrfagent'\r\n                    style={{ width: '40%' }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item label='Discount Status' name='discStat'>\r\n                  <Checkbox>Hidden</Checkbox>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='discSettings'>\r\n                  Discount Settings\r\n                </Title>\r\n                <Form.Item\r\n                  label='Discount Type'\r\n                  name='discType'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please select the discount type.',\r\n                    },\r\n                  ]}\r\n                  initialValue='amount'\r\n                >\r\n                  <Radio.Group\r\n                    options={discCat}\r\n                    onChange={(e) => setDiscType(e.target.value)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item label='Discount Details' name='discDtls' required>\r\n                  <Row gutter={30} style={{ paddingLeft: 25 }}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='If Order Amount reaches'\r\n                        name='minSpend'\r\n                      >\r\n                        <InputNumber\r\n                          addonBefore='RM'\r\n                          precision={2}\r\n                          min={0}\r\n                          placeholder='Input'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        label='Discount would be'\r\n                        name='discAmt'\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please enter the discount.',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        {discType === 'percentage' ? (\r\n                          <InputNumber\r\n                            addonAfter='% off'\r\n                            min={0}\r\n                            max={100}\r\n                            placeholder='Input'\r\n                          />\r\n                        ) : (\r\n                          <InputNumber\r\n                            addonBefore='RM'\r\n                            precision={2}\r\n                            min={0}\r\n                            placeholder='Input'\r\n                          />\r\n                        )}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    {discType === 'percentage' && (\r\n                      <Col>\r\n                        <Form.Item label='Capped At' name='maxDisc'>\r\n                          <InputNumber\r\n                            addonBefore='RM'\r\n                            precision={2}\r\n                            min={0}\r\n                            placeholder='Input'\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Total Voucher to be Issued'\r\n                  name='availability'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        'Please enter the availability number for the discount.',\r\n                    },\r\n                  ]}\r\n                  initialValue={0}\r\n                >\r\n                  <Space size={20}>\r\n                    <InputNumber\r\n                      min={0}\r\n                      onChange={(value) =>\r\n                        voucherForm.setFieldsValue({\r\n                          availability: value,\r\n                        })\r\n                      }\r\n                      defaultValue={0}\r\n                      disabled={availabilityUltd}\r\n                    />\r\n                    <Checkbox\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          voucherForm.setFieldsValue({\r\n                            availability: 'unlimited',\r\n                          });\r\n                          setAvailabilityUltd(true);\r\n                        } else {\r\n                          setAvailabilityUltd(false);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Unlimited\r\n                    </Checkbox>\r\n                  </Space>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Usage Limit per User'\r\n                  name='usageLimit'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter the usage limit for each user.',\r\n                    },\r\n                  ]}\r\n                  initialValue={0}\r\n                >\r\n                  <Space size={20}>\r\n                    <InputNumber\r\n                      min={0}\r\n                      onChange={(value) =>\r\n                        voucherForm.setFieldsValue({\r\n                          usageLimit: value,\r\n                        })\r\n                      }\r\n                      defaultValue={0}\r\n                      disabled={usageLimitUltd}\r\n                    />\r\n                    <Checkbox\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          voucherForm.setFieldsValue({\r\n                            usageLimit: 'unlimited',\r\n                          });\r\n                          setUsageLimitUltd(true);\r\n                        } else {\r\n                          setUsageLimitUltd(false);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Unlimited\r\n                    </Checkbox>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='custEligibility'>\r\n                  Customer Eligibility\r\n                </Title>\r\n\r\n                <Form.Item\r\n                  label='Applicable to'\r\n                  name='custType'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please select at least one customer role.',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '40%' }}\r\n                >\r\n                  <Checkbox.Group>\r\n                    <Space direction='vertical'>\r\n                      {custCat.map((type) => (\r\n                        <Checkbox key={type.value} value={type.value}>\r\n                          {type.label}\r\n                        </Checkbox>\r\n                      ))}\r\n                    </Space>\r\n                  </Checkbox.Group>\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <MainCard>\r\n              <Space direction='vertical' size={20} className='full-width'>\r\n                <Title level={4} id='availPeriod'>\r\n                  Available Period\r\n                </Title>\r\n                <Form.Item\r\n                  label='Start Time'\r\n                  name='packStartTime'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        'Please select the start time to launch the package.',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker showTime placeholder='Select Date and Time' />\r\n                </Form.Item>\r\n                <Checkbox\r\n                  onChange={() =>\r\n                    hideEndTime ? setHideEndTime(false) : setHideEndTime(true)\r\n                  }\r\n                >\r\n                  Set End Time\r\n                </Checkbox>\r\n\r\n                <Form.Item\r\n                  label='End Time'\r\n                  name='packEndTime'\r\n                  hidden={hideEndTime}\r\n                >\r\n                  <DatePicker showTime placeholder='Select Date and Time' />\r\n                </Form.Item>\r\n              </Space>\r\n            </MainCard>\r\n\r\n            <AffixAdd offsetBottom={0} label='Package' />\r\n          </MainCardContainer>\r\n        </Col>\r\n        <Col xs={8} xl={5}>\r\n          <Anchor offsetTop={150} targetOffset={targetOffset}>\r\n            {anchorList.map((anchor) => (\r\n              <Link\r\n                key={anchor.link}\r\n                href={`#${anchor.link}`}\r\n                title={anchor.title}\r\n              />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Layout>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default VoucherAdd;\r\n","import MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport {\r\n  Avatar,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  Space,\r\n  Typography,\r\n} from 'antd';\r\nimport AvatarImg from '@assets/avatar.png';\r\nimport Button from '@components/Button';\r\nimport moment from 'moment';\r\nimport { genderCat } from '@utils/optionUtils';\r\n\r\nconst ProfileMgmt = () => {\r\n  const { Text, Title } = Typography;\r\n  const ChangeBtn = (props) => (\r\n    <Button type='link' color='info' {...props}>\r\n      <Text underline className='color-info'>\r\n        Change\r\n      </Text>\r\n    </Button>\r\n  );\r\n\r\n  const InputText = (props) => (\r\n    <Text style={{ marginRight: 30 }}>{props.children}</Text>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='profile-mgmt'>\r\n        <MainCard>\r\n          <Space direction='vertical' size={50} className='full-width'>\r\n            <Row justify='center' align='middle' gutter={50}>\r\n              <Col pull={1}>\r\n                <Avatar\r\n                  src={AvatarImg}\r\n                  alt='avatar'\r\n                  size={170}\r\n                  className='avatarDropdown-avatar'\r\n                  style={{\r\n                    filter: 'drop-shadow(2px 4px 10px rgba(0, 0, 0, 0.25))',\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col pull={1}>\r\n                <Space direction='vertical'>\r\n                  <Title level={4}>Tan Yuan Jie</Title>\r\n                  <Title type='secondary' level={5}>\r\n                    Super Admin\r\n                  </Title>\r\n                </Space>\r\n              </Col>\r\n            </Row>\r\n            <Row justify='center'>\r\n              <Form\r\n                name='profileForm'\r\n                size='small'\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ offset: 2 }}\r\n                style={{ width: '50%' }}\r\n              >\r\n                <Form.Item label='Username' name='username'>\r\n                  <InputText>yuanjie</InputText>\r\n                  <ChangeBtn />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Name' name='name' initialValue='Tan Yuan Jie'>\r\n                  <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Email Address' name='email'>\r\n                  <InputText>yuanjie@sharifahfood.com</InputText>\r\n                  <ChangeBtn />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Phone Number' name='phoneNum'>\r\n                  <InputText>+60 123456789</InputText>\r\n                  <ChangeBtn />\r\n                </Form.Item>\r\n                <Form.Item label='Gender' name='gender' initialValue='m'>\r\n                  <Radio.Group options={genderCat} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label='Birthdate'\r\n                  name='birthdate'\r\n                  initialValue={moment('2000-08-17')}\r\n                >\r\n                  <DatePicker className='full-width' />\r\n                </Form.Item>\r\n                <Row justify='end' style={{ marginTop: 20 }}>\r\n                  <Button htmlType='submit' type='primary' size='large'>\r\n                    Save\r\n                  </Button>\r\n                </Row>\r\n              </Form>\r\n            </Row>\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProfileMgmt;\r\n","import React, { useState } from 'react';\r\nimport MainCard from '@components/Card/MainCard';\r\nimport Layout from '@components/Layout';\r\nimport MainCardContainer from '@components/Container/MainCardContainer';\r\nimport { Space, Typography, Grid } from 'antd';\r\nimport { MdEmail, MdLock, MdPerson, MdPhone } from 'react-icons/md';\r\nimport DescriptionList from '@components/List/DescriptionList';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst AccSettings = () => {\r\n  const { Text } = Typography;\r\n  const { useBreakpoint } = Grid;\r\n  const screens = useBreakpoint();\r\n\r\n  const [username] = useState('yuanjie');\r\n  const [email] = useState('yuanjie@sharifahfood.com');\r\n  const [phoneNum] = useState('+60 123456789');\r\n\r\n  const data: {\r\n    key: string;\r\n    title: string;\r\n    desc?: string;\r\n    content: React.ReactNode;\r\n    icon: React.ReactNode;\r\n  }[] = [\r\n    {\r\n      key: 'username',\r\n      title: 'Username',\r\n      content: username,\r\n      icon: <MdPerson size={25} className='color-grey' />,\r\n    },\r\n    {\r\n      key: 'email',\r\n      title: 'Email',\r\n      content: email,\r\n      icon: <MdEmail size={25} className='color-grey' />,\r\n    },\r\n    {\r\n      key: 'phoneNum',\r\n      title: 'Phone Number',\r\n      content: phoneNum,\r\n      icon: <MdPhone size={25} className='color-grey' />,\r\n    },\r\n    {\r\n      key: 'password',\r\n      title: 'Password',\r\n      content: (\r\n        <Text type='secondary'>\r\n          Password must contains at least 8 characters, including 1 uppercase\r\n          letter, 1 number and 1 symbol\r\n        </Text>\r\n      ),\r\n      icon: <MdLock size={25} className='color-grey' />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <MainCardContainer className='acc-settings'>\r\n        <MainCard>\r\n          <Space direction='vertical' size={30} className='full-width'>\r\n            <BoldTitle level={4}>Login Information</BoldTitle>\r\n            <DescriptionList\r\n              size={screens.xl && screens.xxl ? 'large' : 'default'}\r\n              dataSource={data}\r\n              buttons={['Change']}\r\n              buttonProps={{ type: 'primary' }}\r\n            />\r\n          </Space>\r\n        </MainCard>\r\n      </MainCardContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AccSettings;\r\n","export default __webpack_public_path__ + \"static/media/Coding.18bcba89.gif\";","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport Coding from '@assets/ComingSoon/Coding.gif';\r\n\r\nconst AdminMgmt = () => {\r\n  return <ComingSoon img={Coding} />;\r\n};\r\n\r\nexport default AdminMgmt;\r\n","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport Coding from '@assets/ComingSoon/Coding.gif';\r\n\r\nconst AdminAdd = () => {\r\n  return <ComingSoon img={Coding} />;\r\n};\r\n\r\nexport default AdminAdd;\r\n","import Layout from '@components/Layout';\r\n\r\nconst Help = () => {\r\n  return <Layout>Help</Layout>;\r\n};\r\n\r\nexport default Help;\r\n","import ComingSoon from '@components/Layout/ComingSoon';\r\nimport Truck from '@assets/ComingSoon/Truck.gif';\r\n\r\nconst ShptFeeMgmt = () => {\r\n  return <ComingSoon img={Truck} />;\r\n};\r\n\r\nexport default ShptFeeMgmt;\r\n","export default __webpack_public_path__ + \"static/media/404.ff2bc4e6.svg\";","import { Col, Row, Image, Layout, Typography, Space } from 'antd';\r\nimport Button from '@components/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { findRoutePath } from '@utils/routingUtils';\r\nimport Img404 from '@assets/404.svg';\r\nimport Logo from '@assets/logo.webp';\r\nimport './NotFound.less';\r\nimport { BoldTitle } from '@/components/Title';\r\n\r\nconst NotFound = () => {\r\n  const { Header } = Layout;\r\n  const { Text } = Typography;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Layout className='not-found-layout'>\r\n      <div className='header-fixed' />\r\n      <Header className='header' style={{ width: '100%' }}>\r\n        <Row justify='center' align='middle' className='full-height'>\r\n          <Col className='not-found-logo-wrapper'>\r\n            <Image\r\n              src={Logo}\r\n              alt='Logo'\r\n              preview={false}\r\n              height='65px'\r\n              className='not-found-logo'\r\n              onClick={() => navigate(findRoutePath('root'))}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <BoldTitle level={3}>Page Not Found</BoldTitle>\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n      <Row justify='center' align='middle' className='not-found'>\r\n        <Space direction='vertical' size={30}>\r\n          <Row className='not-found-img-container'>\r\n            <Image\r\n              src={Img404}\r\n              alt='img404'\r\n              preview={false}\r\n              className='not-found-img'\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Space\r\n              direction='vertical'\r\n              size={15}\r\n              className='not-found-text-container'\r\n            >\r\n              <BoldTitle className='not-found-title'>Oops!</BoldTitle>\r\n              <Text className='not-found-text'>\r\n                Looks like you followed a bad link. If you think this is a\r\n                problem with us, please tell us.\r\n              </Text>\r\n            </Space>\r\n          </Row>\r\n          <Row justify='center'>\r\n            <Button\r\n              type='primary'\r\n              className='not-found-btn'\r\n              onClick={() => navigate(findRoutePath('root'))}\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </Row>\r\n        </Space>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { Modal, ModalProps, Result } from 'antd';\r\nimport { useState } from 'react';\r\n\r\ninterface SuccessModalProps extends ModalProps {\r\n  title: string;\r\n  subTitle?: string;\r\n  extra?: React.ReactNode;\r\n}\r\n\r\nconst SuccessModal = ({\r\n  title,\r\n  subTitle,\r\n  extra,\r\n  visible,\r\n  onOk,\r\n  onCancel,\r\n  ...props\r\n}: SuccessModalProps) => {\r\n  const [showModal, setShowModal] = useState(visible);\r\n\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      visible={showModal || visible}\r\n      onOk={handleClose}\r\n      onCancel={handleClose}\r\n      footer={null}\r\n      closable={false}\r\n      maskClosable={false}\r\n      centered\r\n    >\r\n      <Result\r\n        status='success'\r\n        title={title}\r\n        subTitle={subTitle}\r\n        extra={extra}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SuccessModal;\r\n","import { Col, Row, Form, Typography, Space, Input, Spin, message } from 'antd';\r\nimport Button from '@components/Button';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport MainCard from '@/components/Card/MainCard';\r\nimport ColorCard from '@/components/Card/ColorCard';\r\nimport { useEffect, useState } from 'react';\r\nimport { MdCancel, MdCheckCircle } from 'react-icons/md';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport {\r\n  checkLength,\r\n  hasDigit,\r\n  hasLowerCaseLetter,\r\n  hasSymbolLetter,\r\n  hasUpperCaseLetter,\r\n} from '@/utils/strUtils';\r\nimport { resetPassAPI, validateForgotPassTknAPI } from '@/api/services/authAPI';\r\nimport SuccessModal from '@/components/Modal/SuccessModal';\r\n\r\nconst ResetPass = () => {\r\n  const { Text, Title } = Typography;\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const [resetPassForm] = useForm();\r\n  const [hasNumberic, setHasNumeric] = useState(false);\r\n  const [hasLowerCase, setHasLowerCase] = useState(false);\r\n  const [hasUpperCase, setHasUpperCase] = useState(false);\r\n  const [hasSymbol, setHasSymbol] = useState(false);\r\n  const [passInRange, setPassInRange] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [resetErrMsg, setResetErrMsg] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!searchParams.has('token')) {\r\n      navigate('/');\r\n    } else {\r\n      setPageLoading(true);\r\n      validateForgotPassTknAPI(searchParams.get('token'))\r\n        .catch(() => {\r\n          navigate('/');\r\n        })\r\n        .finally(() => {\r\n          setPageLoading(false);\r\n        });\r\n    }\r\n  }, [navigate, searchParams]);\r\n\r\n  const passValidation = [\r\n    {\r\n      code: 'password_length_validation',\r\n      message: '8 to 16 characters',\r\n      validation: passInRange,\r\n    },\r\n    {\r\n      code: 'password_no_number',\r\n      message: 'At least 1 digit',\r\n      validation: hasNumberic,\r\n    },\r\n    {\r\n      code: 'password_no_upper',\r\n      message: 'At least 1 uppercase letter',\r\n      validation: hasUpperCase,\r\n    },\r\n    {\r\n      code: 'password_no_lower',\r\n      message: 'At least 1 lowercase letter',\r\n      validation: hasLowerCase,\r\n    },\r\n    {\r\n      code: 'password_no_symbol',\r\n      message: 'At least 1 symbol',\r\n      validation: hasSymbol,\r\n    },\r\n  ];\r\n\r\n  const Icon = ({ match, ...props }: IconBaseProps & { match: boolean }) =>\r\n    match ? (\r\n      <MdCheckCircle className='color-success' />\r\n    ) : (\r\n      <MdCancel className='color-error' />\r\n    );\r\n\r\n  interface PassCriteriaListProps {\r\n    errMsg: string;\r\n    validation: boolean;\r\n  }\r\n\r\n  const PassCriteriaList = ({ errMsg, validation }: PassCriteriaListProps) => {\r\n    return (\r\n      <Row align='middle' gutter={5}>\r\n        <Col className='center-flex'>\r\n          <Icon match={validation} />\r\n        </Col>\r\n        <Col>\r\n          <Text>{errMsg}</Text>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const handleResetPass = (values) => {\r\n    setSubmitLoading(true);\r\n    resetPassAPI({\r\n      token: searchParams.get('token'),\r\n      password: values.password,\r\n    })\r\n      .then(() => setSuccessModal(true))\r\n      .catch((err) => {\r\n        if (err.response.status === 400)\r\n          setResetErrMsg(err.response.data.password);\r\n        else {\r\n          message.error('Error encountered. Please try again.');\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setSubmitLoading(false);\r\n      });\r\n  };\r\n  console.log(successModal);\r\n\r\n  return !pageLoading ? (\r\n    <Form\r\n      name='resetPass'\r\n      form={resetPassForm}\r\n      layout='vertical'\r\n      onFinish={handleResetPass}\r\n    >\r\n      <Row justify='center' align='middle' style={{ minHeight: '100vh' }}>\r\n        <Col style={{ width: 450 }}>\r\n          <MainCard>\r\n            <Space direction='vertical' size={15} className='full-width'>\r\n              <Title level={4} className='center-flex'>\r\n                Reset Password\r\n              </Title>\r\n              <Space\r\n                direction='vertical'\r\n                size={0}\r\n                align='center'\r\n                className='full-width'\r\n              >\r\n                <Text>Create a new password for</Text>\r\n                <Text className='color-primary'>\r\n                  {searchParams.get('email')}\r\n                </Text>\r\n              </Space>\r\n              <ColorCard backgroundColor='grey' bodyStyle={{ padding: 15 }}>\r\n                <Space direction='vertical' size={0}>\r\n                  <Text>\r\n                    Your password must fulfill the following criteria:\r\n                  </Text>\r\n                  {passValidation.map((err, index) => (\r\n                    <PassCriteriaList\r\n                      key={`passCriteriaList-${index}`}\r\n                      errMsg={err.message}\r\n                      validation={err.validation}\r\n                    />\r\n                  ))}\r\n                </Space>\r\n              </ColorCard>\r\n              <Space direction='vertical' size={10} className='full-width'>\r\n                <Form.Item\r\n                  name='password'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      validator: (_, value) => {\r\n                        if (value.trim() === '')\r\n                          return Promise.reject(\r\n                            new Error('Please enter new password.')\r\n                          );\r\n\r\n                        if (\r\n                          !(\r\n                            hasNumberic &&\r\n                            hasUpperCase &&\r\n                            hasLowerCase &&\r\n                            hasSymbol\r\n                          )\r\n                        ) {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              'The password must follow the criteria above.'\r\n                            )\r\n                          );\r\n                        }\r\n\r\n                        return Promise.resolve();\r\n                      },\r\n                    },\r\n                  ]}\r\n                  validateStatus={resetErrMsg.length > 0 && 'error'}\r\n                  help={resetErrMsg.map((errMsg) => (\r\n                    <ul className='text-sm'>\r\n                      <li style={{ textAlign: 'justify' }}>{errMsg}</li>\r\n                    </ul>\r\n                  ))}\r\n                >\r\n                  <Input.Password\r\n                    placeholder='Password'\r\n                    maxLength={16}\r\n                    onChange={(e) => {\r\n                      const pass = e.target.value.trim();\r\n                      resetPassForm.setFieldsValue({\r\n                        password: pass,\r\n                      });\r\n                      if (hasDigit(pass)) setHasNumeric(true);\r\n                      else setHasNumeric(false);\r\n                      if (hasUpperCaseLetter(pass)) setHasUpperCase(true);\r\n                      else setHasUpperCase(false);\r\n                      if (hasLowerCaseLetter(pass)) setHasLowerCase(true);\r\n                      else setHasLowerCase(false);\r\n                      if (hasSymbolLetter(pass)) setHasSymbol(true);\r\n                      else setHasSymbol(false);\r\n                      if (checkLength(pass, 8, 16)) setPassInRange(true);\r\n                      else setPassInRange(false);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name='confirmPass'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please enter again the password entered.',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error('Password must be the same.')\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    placeholder='Confirm Password'\r\n                    maxLength={16}\r\n                  />\r\n                </Form.Item>\r\n                <Button\r\n                  htmlType='submit'\r\n                  type='primary'\r\n                  block\r\n                  loading={submitLoading}\r\n                >\r\n                  Reset Password\r\n                </Button>\r\n              </Space>\r\n            </Space>\r\n          </MainCard>\r\n        </Col>\r\n      </Row>\r\n      <SuccessModal\r\n        visible={successModal}\r\n        title='Reset Password Successful'\r\n        subTitle='You can now use the new password to login your account.'\r\n        extra={[\r\n          <Button type='primary' onClick={() => navigate('/')}>\r\n            Go to Login\r\n          </Button>,\r\n        ]}\r\n      />\r\n    </Form>\r\n  ) : (\r\n    <div className='center-flex height-fill-vp'>\r\n      <Spin size='large' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPass;\r\n","export const hasDigit = (str: string) => /\\d/.test(str);\r\n\r\nexport const hasUpperCaseLetter = (str: string) => /[A-Z]/.test(str);\r\n\r\nexport const hasLowerCaseLetter = (str: string) => /[a-z]/.test(str);\r\n\r\nexport const hasSymbolLetter = (str: string) =>\r\n  /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/.test(str);\r\n\r\nexport const checkLength = (str: string, minRange: number, maxRange: number) =>\r\n  str.length >= minRange && str.length <= maxRange;\r\n","import Login from '@pages/Login/Login';\r\nimport Dashboard from '@pages/Dashboard/Dashboard';\r\nimport ProdMgmt from '@pages/Products/ProdMgmt';\r\nimport ProdInv from '@pages/Products/ProdInv';\r\nimport ProdAdd from '@pages/Products/ProdAdd';\r\nimport PackMgmt from '@pages/Packages/PackMgmt';\r\nimport PackInv from '@pages/Packages/PackInv';\r\nimport PackAdd from '@pages/Packages/PackAdd';\r\nimport OrderMgmt from '@pages/Orders/OrderMgmt';\r\nimport OrderAdd from '@pages/Orders/OrderAdd';\r\nimport ShptMgmt from '@pages/Shipments/ShptMgmt';\r\nimport CustMgmt from '@pages/Customers/CustMgmt';\r\nimport CustReg from '@pages/Customers/CustReg';\r\nimport CustAdd from '@pages/Customers/CustAdd';\r\nimport Statistics from '@/pages/BusinessInsights/BusinessStatistics';\r\nimport InvAnalysis from '@pages/BusinessInsights/InvAnalysis';\r\nimport VoucherMgmt from '@pages/Vouchers/VoucherMgmt';\r\nimport VoucherAdd from '@pages/Vouchers/VoucherAdd';\r\nimport ProfileMgmt from '@pages/MyAccount/ProfileMgmt';\r\nimport AccSettings from '@pages/MyAccount/AccSettings';\r\nimport AdminMgmt from '@pages/Admins/AdminMgmt';\r\nimport AdminAdd from '@pages/Admins/AdminAdd';\r\nimport Help from '@pages/Help/Help';\r\nimport ShpFeeMgmt from '@pages/Shipments/ShptFeeMgmt';\r\nimport NotFound from '@pages/Not Found/NotFound';\r\nimport ResetPass from '@/pages/Login/ResetPass';\r\n\r\nconst routeList: {\r\n  label: string;\r\n  path: string;\r\n  protected?: boolean;\r\n  component?: JSX.Element;\r\n}[] = [\r\n  {\r\n    label: 'notFound',\r\n    path: '/404',\r\n    protected: true,\r\n    component: <NotFound />,\r\n  },\r\n  {\r\n    label: 'login',\r\n    path: '/login',\r\n    protected: false,\r\n    component: <Login />,\r\n  },\r\n  {\r\n    label: 'dashboard',\r\n    path: '/dashboard',\r\n    protected: true,\r\n    component: <Dashboard />,\r\n  },\r\n  {\r\n    label: 'product',\r\n    path: '/product',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'prodMgmt',\r\n    path: '/product/management',\r\n    protected: true,\r\n    component: <ProdMgmt />,\r\n  },\r\n  {\r\n    label: 'prodInv',\r\n    path: '/product/inventory',\r\n    protected: true,\r\n    component: <ProdInv />,\r\n  },\r\n  {\r\n    label: 'prodAdd',\r\n    path: '/product/add',\r\n    protected: true,\r\n    component: <ProdAdd />,\r\n  },\r\n  {\r\n    label: 'package',\r\n    path: '/package',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'packMgmt',\r\n    path: '/package/management',\r\n    protected: true,\r\n    component: <PackMgmt />,\r\n  },\r\n  {\r\n    label: 'packInv',\r\n    path: '/package/inventory',\r\n    protected: true,\r\n    component: <PackInv />,\r\n  },\r\n  {\r\n    label: 'packAdd',\r\n    path: '/package/add',\r\n    protected: true,\r\n    component: <PackAdd />,\r\n  },\r\n  {\r\n    label: 'order',\r\n    path: '/order',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderMgmt',\r\n    path: '/order/management',\r\n    protected: true,\r\n    component: <OrderMgmt />,\r\n  },\r\n  {\r\n    label: 'orderPend',\r\n    path: '/order/management?stat=toShip',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderCancel',\r\n    path: '/order/management?stat=cancel',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderAdd',\r\n    path: '/order/add',\r\n    protected: true,\r\n    component: <OrderAdd />,\r\n  },\r\n  {\r\n    label: 'orderUnpaid',\r\n    path: '/order/management?unpaid',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'orderRefund',\r\n    path: '/order/management?refund',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'shipment',\r\n    path: '/shipment',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'shptMgmt',\r\n    path: '/shipment/management',\r\n    protected: true,\r\n    component: <ShptMgmt />,\r\n  },\r\n  {\r\n    label: 'shpFeeMgmt',\r\n    path: '/shipment/shipping-fee',\r\n    protected: true,\r\n    component: <ShpFeeMgmt />,\r\n  },\r\n  {\r\n    label: 'customer',\r\n    path: '/customer',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'custMgmt',\r\n    path: '/customer/management',\r\n    protected: true,\r\n    component: <CustMgmt />,\r\n  },\r\n  {\r\n    label: 'custReg',\r\n    path: '/customer/registrations',\r\n    protected: true,\r\n    component: <CustReg />,\r\n  },\r\n  {\r\n    label: 'custAdd',\r\n    path: '/customer/add',\r\n    protected: true,\r\n    component: <CustAdd />,\r\n  },\r\n  {\r\n    label: 'bizInsights',\r\n    path: '/business-insights',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'bizStatistics',\r\n    path: '/business-insights/statistics',\r\n    protected: true,\r\n    component: <Statistics />,\r\n  },\r\n  {\r\n    label: 'invAnalysis',\r\n    path: '/business-insights/inventory-analysis',\r\n    protected: true,\r\n    component: <InvAnalysis />,\r\n  },\r\n  {\r\n    label: 'voucher',\r\n    path: '/voucher',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'voucherMgmt',\r\n    path: '/voucher/management',\r\n    protected: true,\r\n    component: <VoucherMgmt />,\r\n  },\r\n  {\r\n    label: 'voucherAdd',\r\n    path: '/voucher/add',\r\n    protected: true,\r\n    component: <VoucherAdd />,\r\n  },\r\n  {\r\n    label: 'myAccount',\r\n    path: '/my-acc',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'profileMgmt',\r\n    path: '/my-acc/profile-management',\r\n    protected: true,\r\n    component: <ProfileMgmt />,\r\n  },\r\n  {\r\n    label: 'accSettings',\r\n    path: '/my-acc/acc-settings',\r\n    protected: true,\r\n    component: <AccSettings />,\r\n  },\r\n  {\r\n    label: 'admin',\r\n    path: '/admin',\r\n    protected: true,\r\n  },\r\n  {\r\n    label: 'adminMgmt',\r\n    path: '/admin/management',\r\n    protected: true,\r\n    component: <AdminMgmt />,\r\n  },\r\n  {\r\n    label: 'adminAdd',\r\n    path: '/admin/add',\r\n    protected: true,\r\n    component: <AdminAdd />,\r\n  },\r\n  {\r\n    label: 'help',\r\n    path: '/help',\r\n    protected: true,\r\n    component: <Help />,\r\n  },\r\n  {\r\n    label: 'resetPass',\r\n    path: '/pass_reset',\r\n    protected: false,\r\n    component: <ResetPass />,\r\n  },\r\n  {\r\n    label: 'logout',\r\n    path: '/',\r\n  },\r\n  {\r\n    label: 'root',\r\n    path: '/',\r\n  },\r\n];\r\n\r\nexport default routeList;\r\n","import routeList from '@routes/routeList';\r\nimport siderMenuList from '@components/Layout/Sider/siderMenuList';\r\nimport { IconType } from 'react-icons';\r\n\r\nexport const findRoutePath = (label: string) => {\r\n  let route = routeList.find((route) => route.label === label);\r\n  return route?.path === undefined ? '404' : route.path;\r\n};\r\n\r\nexport const findIcon = (cat: string) => {\r\n  let selected = siderMenuList.map((siderMenuLevel) =>\r\n    siderMenuLevel.items.find((item) => item.key === cat)\r\n  );\r\n  let icons = selected.find((selectedItem) => selectedItem !== undefined);\r\n  let MatchedIcon: IconType = icons!.icon;\r\n  return MatchedIcon;\r\n};\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Modal, ModalProps, Row, Space, Typography } from 'antd';\r\nimport moment from 'moment';\r\nimport { logoutAPI, refreshTknAPI } from '@/api/services/authAPI';\r\nimport Button from '@/components/Button';\r\nimport { useTimer } from 'react-timer-hook';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { findRoutePath } from '@/utils/routingUtils';\r\nimport { getSessionExp } from '@/utils/storageUtils';\r\nimport { useIdleTimer } from 'react-idle-timer';\r\nimport { MdAccessTimeFilled } from 'react-icons/md';\r\n\r\ninterface SessionExtendModalProps extends ModalProps {}\r\n\r\nconst SessionExtendModal = ({ visible, ...props }: SessionExtendModalProps) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { Text, Title } = Typography;\r\n  const [showModal, setShowModal] = useState(visible);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const idleTimer = useIdleTimer({\r\n    timeout: 30000,\r\n  });\r\n\r\n  const timer = useTimer({\r\n    expiryTimestamp:\r\n      getSessionExp() &&\r\n      moment.unix(getSessionExp()).subtract(15, 'second').toDate(),\r\n    onExpire: () => {\r\n      if (!(idleTimer.isIdle() || showModal))\r\n        refreshTknAPI().then(() => {\r\n          setShowModal(false);\r\n          timer.restart(\r\n            moment.unix(getSessionExp()).subtract(15, 'second').toDate()\r\n          );\r\n        });\r\n      else {\r\n        navigate(findRoutePath('login'));\r\n        logoutAPI();\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      timer.days <= 0 &&\r\n      timer.hours <= 0 &&\r\n      timer.minutes < 1 &&\r\n      location.pathname !== findRoutePath('login') &&\r\n      idleTimer.isIdle()\r\n    )\r\n      setShowModal(true);\r\n  }, [idleTimer, location.pathname, timer.days, timer.hours, timer.minutes]);\r\n\r\n  const extendPageSession = () => {\r\n    setLoading(true);\r\n    refreshTknAPI().then(() => {\r\n      timer.restart(\r\n        moment.unix(getSessionExp()).subtract(15, 'second').toDate()\r\n      );\r\n      setShowModal(false);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    navigate(findRoutePath('login'));\r\n    logoutAPI();\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={showModal || visible}\r\n      footer={null}\r\n      centered\r\n      onOk={extendPageSession}\r\n      maskClosable={false}\r\n      closable={false}\r\n      {...props}\r\n    >\r\n      <Space direction='vertical' size={20} className='full-width'>\r\n        <Space size={10}>\r\n          <MdAccessTimeFilled size={25} className='color-error' />\r\n          <Text strong>Your session will be expired in</Text>\r\n        </Space>\r\n        <Space align='center' className='center-flex'>\r\n          <Row align='bottom' gutter={5}>\r\n            <Col>\r\n              <Title level={4}>{timer.minutes}</Title>\r\n            </Col>\r\n            <Col>\r\n              <Title level={5}>Minutes</Title>\r\n            </Col>\r\n          </Row>\r\n          <Row align='bottom' gutter={5}>\r\n            <Col>\r\n              <Title level={4}>{timer.seconds}</Title>\r\n            </Col>\r\n            <Col>\r\n              <Title level={5}>Seconds</Title>\r\n            </Col>\r\n          </Row>\r\n        </Space>\r\n        <Text>Do you want to extend your session?</Text>\r\n        <Row gutter={20} justify='end'>\r\n          <Col>\r\n            <Button color='error' onClick={handleClose}>\r\n              Log Out\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              type='primary'\r\n              onClick={extendPageSession}\r\n              loading={loading}\r\n            >\r\n              Stay Logged In\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Space>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SessionExtendModal;\r\n","import { Navigate, Outlet, useLocation } from 'react-router-dom';\r\nimport { findRoutePath } from '@/utils/routingUtils';\r\nimport Cookies from 'js-cookie';\r\nimport routeList from './routeList';\r\n\r\nconst AuthRoute = ({ children }: { children?: JSX.Element }) => {\r\n  const location = useLocation();\r\n\r\n  const notProtectedRoute = routeList\r\n    .filter((route) => route.protected === false)\r\n    .map((filteredRoute) => filteredRoute.path);\r\n  const access = Cookies.get('access_token');\r\n  if (!(access || notProtectedRoute.includes(location.pathname))) {\r\n    return (\r\n      <Navigate\r\n        to={findRoutePath('login')}\r\n        state={{ from: location }}\r\n        replace\r\n      />\r\n    );\r\n  }\r\n\r\n  if (access && notProtectedRoute.includes(location.pathname)) {\r\n    return <Navigate to='/' replace />;\r\n  }\r\n\r\n  return <Outlet />;\r\n};\r\n\r\nexport default AuthRoute;\r\n","const routeRedirectList: {\r\n  path: string;\r\n  redirect: string;\r\n}[] = [\r\n  { path: '*', redirect: '/404' },\r\n  { path: '/', redirect: '/dashboard' },\r\n  { path: '/product', redirect: '/product/management' },\r\n  { path: '/package', redirect: '/package/management' },\r\n  { path: '/order', redirect: '/order/management' },\r\n  { path: '/shipment', redirect: '/shipment/management' },\r\n  { path: '/customer', redirect: '/customer/management' },\r\n  { path: '/business-insights', redirect: '/business-insights/statistics' },\r\n  { path: '/voucher', redirect: '/voucher/management' },\r\n  { path: '/my-acc', redirect: '/my-acc/profile-management' },\r\n  { path: '/admin', redirect: '/admin/management' },\r\n];\r\n\r\nexport default routeRedirectList;\r\n","import SessionExpModal from '@/components/Modal/AuthModal/SessionExtendModal';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from 'react-router-dom';\r\nimport AuthRoute from './AuthRoute';\r\nimport routeList from './routeList';\r\nimport routeRedirectList from './routeRedirectList';\r\nexport default function AppRoute() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route element={<AuthRoute />}>\r\n          {routeRedirectList.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              element={<Navigate to={route.redirect} replace />}\r\n            />\r\n          ))}\r\n          {routeList.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              element={\r\n                <>\r\n                  {route.component} <SessionExpModal />\r\n                </>\r\n              }\r\n            />\r\n          ))}\r\n        </Route>\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport siderReducer from './siderSlice';\r\nconst store = configureStore({\r\n  reducer: {\r\n    sider: siderReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import ConfigProvider from 'antd/es/config-provider';\r\nimport './App.less';\r\nimport Routes from '@routes/AppRoutes';\r\nimport { Provider } from 'react-redux';\r\nimport store from './state';\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConfigProvider prefixCls='shrf'>\r\n        <IconContext.Provider\r\n          value={{ style: { verticalAlign: 'middle', textAlign: 'center' } }}\r\n        >\r\n          <Routes />\r\n        </IconContext.Provider>\r\n      </ConfigProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.less';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}